(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 62);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(11);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(15);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon3000", function() { return TheMostCommon3000; });
// https://www.ef.com/wwen/english-resources/english-vocabulary/top-3000-words/
const TheMostCommon3000 = {
  a: 1,
  abandon: 1,
  ability: 1,
  able: 1,
  abortion: 1,
  about: 1,
  above: 1,
  abroad: 1,
  absence: 1,
  absolute: 1,
  absolutely: 1,
  absorb: 1,
  abuse: 1,
  academic: 1,
  accept: 1,
  access: 1,
  accident: 1,
  accompany: 1,
  accomplish: 1,
  according: 1,
  account: 1,
  accurate: 1,
  accuse: 1,
  achieve: 1,
  achievement: 1,
  acid: 1,
  acknowledge: 1,
  acquire: 1,
  across: 1,
  act: 1,
  action: 1,
  active: 1,
  activist: 1,
  activity: 1,
  actor: 1,
  actress: 1,
  actual: 1,
  actually: 1,
  ad: 1,
  adapt: 1,
  add: 1,
  addition: 1,
  additional: 1,
  address: 1,
  adequate: 1,
  adjust: 1,
  adjustment: 1,
  administration: 1,
  administrator: 1,
  admire: 1,
  admission: 1,
  admit: 1,
  adolescent: 1,
  adopt: 1,
  adult: 1,
  advance: 1,
  advanced: 1,
  advantage: 1,
  adventure: 1,
  advertising: 1,
  advice: 1,
  advise: 1,
  adviser: 1,
  advocate: 1,
  affair: 1,
  affect: 1,
  afford: 1,
  afraid: 1,
  African: 1,
  "African-American": 1,
  after: 1,
  afternoon: 1,
  again: 1,
  against: 1,
  age: 1,
  agency: 1,
  agenda: 1,
  agent: 1,
  aggressive: 1,
  ago: 1,
  agree: 1,
  agreement: 1,
  agricultural: 1,
  ah: 1,
  ahead: 1,
  aid: 1,
  aide: 1,
  AIDS: 1,
  aim: 1,
  air: 1,
  aircraft: 1,
  airline: 1,
  airport: 1,
  album: 1,
  alcohol: 1,
  alive: 1,
  all: 1,
  alliance: 1,
  allow: 1,
  ally: 1,
  almost: 1,
  alone: 1,
  along: 1,
  already: 1,
  also: 1,
  alter: 1,
  alternative: 1,
  although: 1,
  always: 1,
  AM: 1,
  amazing: 1,
  American: 1,
  among: 1,
  amount: 1,
  analysis: 1,
  analyst: 1,
  analyze: 1,
  ancient: 1,
  and: 1,
  anger: 1,
  angle: 1,
  angry: 1,
  animal: 1,
  anniversary: 1,
  announce: 1,
  annual: 1,
  another: 1,
  answer: 1,
  anticipate: 1,
  anxiety: 1,
  any: 1,
  anybody: 1,
  anymore: 1,
  anyone: 1,
  anything: 1,
  anyway: 1,
  anywhere: 1,
  apart: 1,
  apartment: 1,
  apparent: 1,
  apparently: 1,
  appeal: 1,
  appear: 1,
  appearance: 1,
  apple: 1,
  application: 1,
  apply: 1,
  appoint: 1,
  appointment: 1,
  appreciate: 1,
  approach: 1,
  appropriate: 1,
  approval: 1,
  approve: 1,
  approximately: 1,
  Arab: 1,
  architect: 1,
  area: 1,
  argue: 1,
  argument: 1,
  arise: 1,
  arm: 1,
  armed: 1,
  army: 1,
  around: 1,
  arrange: 1,
  arrangement: 1,
  arrest: 1,
  arrival: 1,
  arrive: 1,
  art: 1,
  article: 1,
  artist: 1,
  artistic: 1,
  as: 1,
  Asian: 1,
  aside: 1,
  ask: 1,
  asleep: 1,
  aspect: 1,
  assault: 1,
  assert: 1,
  assess: 1,
  assessment: 1,
  asset: 1,
  assign: 1,
  assignment: 1,
  assist: 1,
  assistance: 1,
  assistant: 1,
  associate: 1,
  association: 1,
  assume: 1,
  assumption: 1,
  assure: 1,
  at: 1,
  athlete: 1,
  athletic: 1,
  atmosphere: 1,
  attach: 1,
  attack: 1,
  attempt: 1,
  attend: 1,
  attention: 1,
  attitude: 1,
  attorney: 1,
  attract: 1,
  attractive: 1,
  attribute: 1,
  audience: 1,
  author: 1,
  authority: 1,
  auto: 1,
  available: 1,
  average: 1,
  avoid: 1,
  award: 1,
  aware: 1,
  awareness: 1,
  away: 1,
  awful: 1,
  baby: 1,
  back: 1,
  background: 1,
  bad: 1,
  badly: 1,
  bag: 1,
  bake: 1,
  balance: 1,
  ball: 1,
  ban: 1,
  band: 1,
  bank: 1,
  bar: 1,
  barely: 1,
  barrel: 1,
  barrier: 1,
  base: 1,
  baseball: 1,
  basic: 1,
  basically: 1,
  basis: 1,
  basket: 1,
  basketball: 1,
  bathroom: 1,
  battery: 1,
  battle: 1,
  be: 1,
  beach: 1,
  bean: 1,
  bear: 1,
  beat: 1,
  beautiful: 1,
  beauty: 1,
  because: 1,
  become: 1,
  bed: 1,
  bedroom: 1,
  beer: 1,
  before: 1,
  begin: 1,
  beginning: 1,
  behavior: 1,
  behind: 1,
  being: 1,
  belief: 1,
  believe: 1,
  bell: 1,
  belong: 1,
  below: 1,
  belt: 1,
  bench: 1,
  bend: 1,
  beneath: 1,
  benefit: 1,
  beside: 1,
  besides: 1,
  best: 1,
  bet: 1,
  better: 1,
  between: 1,
  beyond: 1,
  Bible: 1,
  big: 1,
  bike: 1,
  bill: 1,
  billion: 1,
  bind: 1,
  biological: 1,
  bird: 1,
  birth: 1,
  birthday: 1,
  bit: 1,
  bite: 1,
  black: 1,
  blade: 1,
  blame: 1,
  blanket: 1,
  blind: 1,
  block: 1,
  blood: 1,
  blow: 1,
  blue: 1,
  board: 1,
  boat: 1,
  body: 1,
  bomb: 1,
  bombing: 1,
  bond: 1,
  bone: 1,
  book: 1,
  boom: 1,
  boot: 1,
  border: 1,
  born: 1,
  borrow: 1,
  boss: 1,
  both: 1,
  bother: 1,
  bottle: 1,
  bottom: 1,
  boundary: 1,
  bowl: 1,
  box: 1,
  boy: 1,
  boyfriend: 1,
  brain: 1,
  branch: 1,
  brand: 1,
  bread: 1,
  break: 1,
  breakfast: 1,
  breast: 1,
  breath: 1,
  breathe: 1,
  brick: 1,
  bridge: 1,
  brief: 1,
  briefly: 1,
  bright: 1,
  brilliant: 1,
  bring: 1,
  British: 1,
  broad: 1,
  broken: 1,
  brother: 1,
  brown: 1,
  brush: 1,
  buck: 1,
  budget: 1,
  build: 1,
  building: 1,
  bullet: 1,
  bunch: 1,
  burden: 1,
  burn: 1,
  bury: 1,
  bus: 1,
  business: 1,
  busy: 1,
  but: 1,
  butter: 1,
  button: 1,
  buy: 1,
  buyer: 1,
  by: 1,
  cabin: 1,
  cabinet: 1,
  cable: 1,
  cake: 1,
  calculate: 1,
  call: 1,
  camera: 1,
  camp: 1,
  campaign: 1,
  campus: 1,
  can: 1,
  Canadian: 1,
  cancer: 1,
  candidate: 1,
  cap: 1,
  capability: 1,
  capable: 1,
  capacity: 1,
  capital: 1,
  captain: 1,
  capture: 1,
  car: 1,
  carbon: 1,
  card: 1,
  care: 1,
  career: 1,
  careful: 1,
  carefully: 1,
  carrier: 1,
  carry: 1,
  case: 1,
  cash: 1,
  cast: 1,
  cat: 1,
  catch: 1,
  category: 1,
  Catholic: 1,
  cause: 1,
  ceiling: 1,
  celebrate: 1,
  celebration: 1,
  celebrity: 1,
  cell: 1,
  center: 1,
  central: 1,
  century: 1,
  CEO: 1,
  ceremony: 1,
  certain: 1,
  certainly: 1,
  chain: 1,
  chair: 1,
  chairman: 1,
  challenge: 1,
  chamber: 1,
  champion: 1,
  championship: 1,
  chance: 1,
  change: 1,
  changing: 1,
  channel: 1,
  chapter: 1,
  character: 1,
  characteristic: 1,
  characterize: 1,
  charge: 1,
  charity: 1,
  chart: 1,
  chase: 1,
  cheap: 1,
  check: 1,
  cheek: 1,
  cheese: 1,
  chef: 1,
  chemical: 1,
  chest: 1,
  chicken: 1,
  chief: 1,
  child: 1,
  childhood: 1,
  Chinese: 1,
  chip: 1,
  chocolate: 1,
  choice: 1,
  cholesterol: 1,
  choose: 1,
  Christian: 1,
  Christmas: 1,
  church: 1,
  cigarette: 1,
  circle: 1,
  circumstance: 1,
  cite: 1,
  citizen: 1,
  city: 1,
  civil: 1,
  civilian: 1,
  claim: 1,
  class: 1,
  classic: 1,
  classroom: 1,
  clean: 1,
  clear: 1,
  clearly: 1,
  client: 1,
  climate: 1,
  climb: 1,
  clinic: 1,
  clinical: 1,
  clock: 1,
  close: 1,
  closely: 1,
  closer: 1,
  clothes: 1,
  clothing: 1,
  cloud: 1,
  club: 1,
  clue: 1,
  cluster: 1,
  coach: 1,
  coal: 1,
  coalition: 1,
  coast: 1,
  coat: 1,
  code: 1,
  coffee: 1,
  cognitive: 1,
  cold: 1,
  collapse: 1,
  colleague: 1,
  collect: 1,
  collection: 1,
  collective: 1,
  college: 1,
  colonial: 1,
  color: 1,
  column: 1,
  combination: 1,
  combine: 1,
  come: 1,
  comedy: 1,
  comfort: 1,
  comfortable: 1,
  command: 1,
  commander: 1,
  comment: 1,
  commercial: 1,
  commission: 1,
  commit: 1,
  commitment: 1,
  committee: 1,
  common: 1,
  communicate: 1,
  communication: 1,
  community: 1,
  company: 1,
  compare: 1,
  comparison: 1,
  compete: 1,
  competition: 1,
  competitive: 1,
  competitor: 1,
  complain: 1,
  complaint: 1,
  complete: 1,
  completely: 1,
  complex: 1,
  complicated: 1,
  component: 1,
  compose: 1,
  composition: 1,
  comprehensive: 1,
  computer: 1,
  concentrate: 1,
  concentration: 1,
  concept: 1,
  concern: 1,
  concerned: 1,
  concert: 1,
  conclude: 1,
  conclusion: 1,
  concrete: 1,
  condition: 1,
  conduct: 1,
  conference: 1,
  confidence: 1,
  confident: 1,
  confirm: 1,
  conflict: 1,
  confront: 1,
  confusion: 1,
  Congress: 1,
  congressional: 1,
  connect: 1,
  connection: 1,
  consciousness: 1,
  consensus: 1,
  consequence: 1,
  conservative: 1,
  consider: 1,
  considerable: 1,
  consideration: 1,
  consist: 1,
  consistent: 1,
  constant: 1,
  constantly: 1,
  constitute: 1,
  constitutional: 1,
  construct: 1,
  construction: 1,
  consultant: 1,
  consume: 1,
  consumer: 1,
  consumption: 1,
  contact: 1,
  contain: 1,
  container: 1,
  contemporary: 1,
  content: 1,
  contest: 1,
  context: 1,
  continue: 1,
  continued: 1,
  contract: 1,
  contrast: 1,
  contribute: 1,
  contribution: 1,
  control: 1,
  controversial: 1,
  controversy: 1,
  convention: 1,
  conventional: 1,
  conversation: 1,
  convert: 1,
  conviction: 1,
  convince: 1,
  cook: 1,
  cookie: 1,
  cooking: 1,
  cool: 1,
  cooperation: 1,
  cop: 1,
  cope: 1,
  copy: 1,
  core: 1,
  corn: 1,
  corner: 1,
  corporate: 1,
  corporation: 1,
  correct: 1,
  correspondent: 1,
  cost: 1,
  cotton: 1,
  couch: 1,
  could: 1,
  council: 1,
  counselor: 1,
  count: 1,
  counter: 1,
  country: 1,
  county: 1,
  couple: 1,
  courage: 1,
  course: 1,
  court: 1,
  cousin: 1,
  cover: 1,
  coverage: 1,
  cow: 1,
  crack: 1,
  craft: 1,
  crash: 1,
  crazy: 1,
  cream: 1,
  create: 1,
  creation: 1,
  creative: 1,
  creature: 1,
  credit: 1,
  crew: 1,
  crime: 1,
  criminal: 1,
  crisis: 1,
  criteria: 1,
  critic: 1,
  critical: 1,
  criticism: 1,
  criticize: 1,
  crop: 1,
  cross: 1,
  crowd: 1,
  crucial: 1,
  cry: 1,
  cultural: 1,
  culture: 1,
  cup: 1,
  curious: 1,
  current: 1,
  currently: 1,
  curriculum: 1,
  custom: 1,
  customer: 1,
  cut: 1,
  cycle: 1,
  dad: 1,
  daily: 1,
  damage: 1,
  dance: 1,
  danger: 1,
  dangerous: 1,
  dare: 1,
  dark: 1,
  darkness: 1,
  data: 1,
  date: 1,
  daughter: 1,
  day: 1,
  dead: 1,
  deal: 1,
  dealer: 1,
  dear: 1,
  death: 1,
  debate: 1,
  debt: 1,
  decade: 1,
  decide: 1,
  decision: 1,
  deck: 1,
  declare: 1,
  decline: 1,
  decrease: 1,
  deep: 1,
  deeply: 1,
  deer: 1,
  defeat: 1,
  defend: 1,
  defendant: 1,
  defense: 1,
  defensive: 1,
  deficit: 1,
  define: 1,
  definitely: 1,
  definition: 1,
  degree: 1,
  delay: 1,
  deliver: 1,
  delivery: 1,
  demand: 1,
  democracy: 1,
  Democrat: 1,
  democratic: 1,
  demonstrate: 1,
  demonstration: 1,
  deny: 1,
  department: 1,
  depend: 1,
  dependent: 1,
  depending: 1,
  depict: 1,
  depression: 1,
  depth: 1,
  deputy: 1,
  derive: 1,
  describe: 1,
  description: 1,
  desert: 1,
  deserve: 1,
  design: 1,
  designer: 1,
  desire: 1,
  desk: 1,
  desperate: 1,
  despite: 1,
  destroy: 1,
  destruction: 1,
  detail: 1,
  detailed: 1,
  detect: 1,
  determine: 1,
  develop: 1,
  developing: 1,
  development: 1,
  device: 1,
  devote: 1,
  dialogue: 1,
  die: 1,
  diet: 1,
  differ: 1,
  difference: 1,
  different: 1,
  differently: 1,
  difficult: 1,
  difficulty: 1,
  dig: 1,
  digital: 1,
  dimension: 1,
  dining: 1,
  dinner: 1,
  direct: 1,
  direction: 1,
  directly: 1,
  director: 1,
  dirt: 1,
  dirty: 1,
  disability: 1,
  disagree: 1,
  disappear: 1,
  disaster: 1,
  discipline: 1,
  discourse: 1,
  discover: 1,
  discovery: 1,
  discrimination: 1,
  discuss: 1,
  discussion: 1,
  disease: 1,
  dish: 1,
  dismiss: 1,
  disorder: 1,
  display: 1,
  dispute: 1,
  distance: 1,
  distant: 1,
  distinct: 1,
  distinction: 1,
  distinguish: 1,
  distribute: 1,
  distribution: 1,
  district: 1,
  diverse: 1,
  diversity: 1,
  divide: 1,
  division: 1,
  divorce: 1,
  DNA: 1,
  do: 1,
  doctor: 1,
  document: 1,
  dog: 1,
  domestic: 1,
  dominant: 1,
  dominate: 1,
  door: 1,
  double: 1,
  doubt: 1,
  down: 1,
  downtown: 1,
  dozen: 1,
  draft: 1,
  drag: 1,
  drama: 1,
  dramatic: 1,
  dramatically: 1,
  draw: 1,
  drawing: 1,
  dream: 1,
  dress: 1,
  drink: 1,
  drive: 1,
  driver: 1,
  drop: 1,
  drug: 1,
  dry: 1,
  due: 1,
  during: 1,
  dust: 1,
  duty: 1,
  each: 1,
  eager: 1,
  ear: 1,
  early: 1,
  earn: 1,
  earnings: 1,
  earth: 1,
  ease: 1,
  easily: 1,
  east: 1,
  eastern: 1,
  easy: 1,
  eat: 1,
  economic: 1,
  economics: 1,
  economist: 1,
  economy: 1,
  edge: 1,
  edition: 1,
  editor: 1,
  educate: 1,
  education: 1,
  educational: 1,
  educator: 1,
  effect: 1,
  effective: 1,
  effectively: 1,
  efficiency: 1,
  efficient: 1,
  effort: 1,
  egg: 1,
  eight: 1,
  either: 1,
  elderly: 1,
  elect: 1,
  election: 1,
  electric: 1,
  electricity: 1,
  electronic: 1,
  element: 1,
  elementary: 1,
  eliminate: 1,
  elite: 1,
  else: 1,
  elsewhere: 1,
  "e-mail": 1,
  embrace: 1,
  emerge: 1,
  emergency: 1,
  emission: 1,
  emotion: 1,
  emotional: 1,
  emphasis: 1,
  emphasize: 1,
  employ: 1,
  employee: 1,
  employer: 1,
  employment: 1,
  empty: 1,
  enable: 1,
  encounter: 1,
  encourage: 1,
  end: 1,
  enemy: 1,
  energy: 1,
  enforcement: 1,
  engage: 1,
  engine: 1,
  engineer: 1,
  engineering: 1,
  English: 1,
  enhance: 1,
  enjoy: 1,
  enormous: 1,
  enough: 1,
  ensure: 1,
  enter: 1,
  enterprise: 1,
  entertainment: 1,
  entire: 1,
  entirely: 1,
  entrance: 1,
  entry: 1,
  environment: 1,
  environmental: 1,
  episode: 1,
  equal: 1,
  equally: 1,
  equipment: 1,
  era: 1,
  error: 1,
  escape: 1,
  especially: 1,
  essay: 1,
  essential: 1,
  essentially: 1,
  establish: 1,
  establishment: 1,
  estate: 1,
  estimate: 1,
  etc: 1,
  ethics: 1,
  ethnic: 1,
  European: 1,
  evaluate: 1,
  evaluation: 1,
  even: 1,
  evening: 1,
  event: 1,
  eventually: 1,
  ever: 1,
  every: 1,
  everybody: 1,
  everyday: 1,
  everyone: 1,
  everything: 1,
  everywhere: 1,
  evidence: 1,
  evolution: 1,
  evolve: 1,
  exact: 1,
  exactly: 1,
  examination: 1,
  examine: 1,
  example: 1,
  exceed: 1,
  excellent: 1,
  except: 1,
  exception: 1,
  exchange: 1,
  exciting: 1,
  executive: 1,
  exercise: 1,
  exhibit: 1,
  exhibition: 1,
  exist: 1,
  existence: 1,
  existing: 1,
  expand: 1,
  expansion: 1,
  expect: 1,
  expectation: 1,
  expense: 1,
  expensive: 1,
  experience: 1,
  experiment: 1,
  expert: 1,
  explain: 1,
  explanation: 1,
  explode: 1,
  explore: 1,
  explosion: 1,
  expose: 1,
  exposure: 1,
  express: 1,
  expression: 1,
  extend: 1,
  extension: 1,
  extensive: 1,
  extent: 1,
  external: 1,
  extra: 1,
  extraordinary: 1,
  extreme: 1,
  extremely: 1,
  eye: 1
};

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon3000", function() { return TheMostCommon3000; });
// https://www.ef.com/wwen/english-resources/english-vocabulary/top-3000-words/
const TheMostCommon3000 = {
  fabric: 1,
  face: 1,
  facility: 1,
  fact: 1,
  factor: 1,
  factory: 1,
  faculty: 1,
  fade: 1,
  fail: 1,
  failure: 1,
  fair: 1,
  fairly: 1,
  faith: 1,
  fall: 1,
  false: 1,
  familiar: 1,
  family: 1,
  famous: 1,
  fan: 1,
  fantasy: 1,
  far: 1,
  farm: 1,
  farmer: 1,
  fashion: 1,
  fast: 1,
  fat: 1,
  fate: 1,
  father: 1,
  fault: 1,
  favor: 1,
  favorite: 1,
  fear: 1,
  feature: 1,
  federal: 1,
  fee: 1,
  feed: 1,
  feel: 1,
  feeling: 1,
  fellow: 1,
  female: 1,
  fence: 1,
  few: 1,
  fewer: 1,
  fiber: 1,
  fiction: 1,
  field: 1,
  fifteen: 1,
  fifth: 1,
  fifty: 1,
  fight: 1,
  fighter: 1,
  fighting: 1,
  figure: 1,
  file: 1,
  fill: 1,
  film: 1,
  final: 1,
  finally: 1,
  finance: 1,
  financial: 1,
  find: 1,
  finding: 1,
  fine: 1,
  finger: 1,
  finish: 1,
  fire: 1,
  firm: 1,
  first: 1,
  fish: 1,
  fishing: 1,
  fit: 1,
  fitness: 1,
  five: 1,
  fix: 1,
  flag: 1,
  flame: 1,
  flat: 1,
  flavor: 1,
  flee: 1,
  flesh: 1,
  flight: 1,
  float: 1,
  floor: 1,
  flow: 1,
  flower: 1,
  fly: 1,
  focus: 1,
  folk: 1,
  follow: 1,
  following: 1,
  food: 1,
  foot: 1,
  football: 1,
  for: 1,
  force: 1,
  foreign: 1,
  forest: 1,
  forever: 1,
  forget: 1,
  form: 1,
  formal: 1,
  formation: 1,
  former: 1,
  formula: 1,
  forth: 1,
  fortune: 1,
  forward: 1,
  found: 1,
  foundation: 1,
  founder: 1,
  four: 1,
  fourth: 1,
  frame: 1,
  framework: 1,
  free: 1,
  freedom: 1,
  freeze: 1,
  French: 1,
  frequency: 1,
  frequent: 1,
  frequently: 1,
  fresh: 1,
  friend: 1,
  friendly: 1,
  friendship: 1,
  from: 1,
  front: 1,
  fruit: 1,
  frustration: 1,
  fuel: 1,
  full: 1,
  fully: 1,
  fun: 1,
  function: 1,
  fund: 1,
  fundamental: 1,
  funding: 1,
  funeral: 1,
  funny: 1,
  furniture: 1,
  furthermore: 1,
  future: 1,
  gain: 1,
  galaxy: 1,
  gallery: 1,
  game: 1,
  gang: 1,
  gap: 1,
  garage: 1,
  garden: 1,
  garlic: 1,
  gas: 1,
  gate: 1,
  gather: 1,
  gay: 1,
  gaze: 1,
  gear: 1,
  gender: 1,
  gene: 1,
  general: 1,
  generally: 1,
  generate: 1,
  generation: 1,
  genetic: 1,
  gentleman: 1,
  gently: 1,
  German: 1,
  gesture: 1,
  get: 1,
  ghost: 1,
  giant: 1,
  gift: 1,
  gifted: 1,
  girl: 1,
  girlfriend: 1,
  give: 1,
  given: 1,
  glad: 1,
  glance: 1,
  glass: 1,
  global: 1,
  glove: 1,
  go: 1,
  goal: 1,
  God: 1,
  gold: 1,
  golden: 1,
  golf: 1,
  good: 1,
  government: 1,
  governor: 1,
  grab: 1,
  grade: 1,
  gradually: 1,
  graduate: 1,
  grain: 1,
  grand: 1,
  grandfather: 1,
  grandmother: 1,
  grant: 1,
  grass: 1,
  grave: 1,
  gray: 1,
  great: 1,
  greatest: 1,
  green: 1,
  grocery: 1,
  ground: 1,
  group: 1,
  grow: 1,
  growing: 1,
  growth: 1,
  guarantee: 1,
  guard: 1,
  guess: 1,
  guest: 1,
  guide: 1,
  guideline: 1,
  guilty: 1,
  gun: 1,
  guy: 1,
  habit: 1,
  habitat: 1,
  hair: 1,
  half: 1,
  hall: 1,
  hand: 1,
  handful: 1,
  handle: 1,
  hang: 1,
  happen: 1,
  happy: 1,
  hard: 1,
  hardly: 1,
  hat: 1,
  hate: 1,
  have: 1,
  he: 1,
  head: 1,
  headline: 1,
  headquarters: 1,
  health: 1,
  healthy: 1,
  hear: 1,
  hearing: 1,
  heart: 1,
  heat: 1,
  heaven: 1,
  heavily: 1,
  heavy: 1,
  heel: 1,
  height: 1,
  helicopter: 1,
  hell: 1,
  hello: 1,
  help: 1,
  helpful: 1,
  her: 1,
  here: 1,
  heritage: 1,
  hero: 1,
  herself: 1,
  hey: 1,
  hi: 1,
  hide: 1,
  high: 1,
  highlight: 1,
  highly: 1,
  highway: 1,
  hill: 1,
  him: 1,
  himself: 1,
  hip: 1,
  hire: 1,
  his: 1,
  historian: 1,
  historic: 1,
  historical: 1,
  history: 1,
  hit: 1,
  hold: 1,
  hole: 1,
  holiday: 1,
  holy: 1,
  home: 1,
  homeless: 1,
  honest: 1,
  honey: 1,
  honor: 1,
  hope: 1,
  horizon: 1,
  horror: 1,
  horse: 1,
  hospital: 1,
  host: 1,
  hot: 1,
  hotel: 1,
  hour: 1,
  house: 1,
  household: 1,
  housing: 1,
  how: 1,
  however: 1,
  huge: 1,
  human: 1,
  humor: 1,
  hundred: 1,
  hungry: 1,
  hunter: 1,
  hunting: 1,
  hurt: 1,
  husband: 1,
  hypothesis: 1,
  I: 1,
  ice: 1,
  idea: 1,
  ideal: 1,
  identification: 1,
  identify: 1,
  identity: 1,
  ie: 1,
  if: 1,
  ignore: 1,
  ill: 1,
  illegal: 1,
  illness: 1,
  illustrate: 1,
  image: 1,
  imagination: 1,
  imagine: 1,
  immediate: 1,
  immediately: 1,
  immigrant: 1,
  immigration: 1,
  impact: 1,
  implement: 1,
  implication: 1,
  imply: 1,
  importance: 1,
  important: 1,
  impose: 1,
  impossible: 1,
  impress: 1,
  impression: 1,
  impressive: 1,
  improve: 1,
  improvement: 1,
  in: 1,
  incentive: 1,
  incident: 1,
  include: 1,
  including: 1,
  income: 1,
  incorporate: 1,
  increase: 1,
  increased: 1,
  increasing: 1,
  increasingly: 1,
  incredible: 1,
  indeed: 1,
  independence: 1,
  independent: 1,
  index: 1,
  Indian: 1,
  indicate: 1,
  indication: 1,
  individual: 1,
  industrial: 1,
  industry: 1,
  infant: 1,
  infection: 1,
  inflation: 1,
  influence: 1,
  inform: 1,
  information: 1,
  ingredient: 1,
  initial: 1,
  initially: 1,
  initiative: 1,
  injury: 1,
  inner: 1,
  innocent: 1,
  inquiry: 1,
  inside: 1,
  insight: 1,
  insist: 1,
  inspire: 1,
  install: 1,
  instance: 1,
  instead: 1,
  institution: 1,
  institutional: 1,
  instruction: 1,
  instructor: 1,
  instrument: 1,
  insurance: 1,
  intellectual: 1,
  intelligence: 1,
  intend: 1,
  intense: 1,
  intensity: 1,
  intention: 1,
  interaction: 1,
  interest: 1,
  interested: 1,
  interesting: 1,
  internal: 1,
  international: 1,
  Internet: 1,
  interpret: 1,
  interpretation: 1,
  intervention: 1,
  interview: 1,
  into: 1,
  introduce: 1,
  introduction: 1,
  invasion: 1,
  invest: 1,
  investigate: 1,
  investigation: 1,
  investigator: 1,
  investment: 1,
  investor: 1,
  invite: 1,
  involve: 1,
  involved: 1,
  involvement: 1,
  Iraqi: 1,
  Irish: 1,
  iron: 1,
  Islamic: 1,
  island: 1,
  Israeli: 1,
  issue: 1,
  it: 1,
  Italian: 1,
  item: 1,
  its: 1,
  itself: 1,
  jacket: 1,
  jail: 1,
  Japanese: 1,
  jet: 1,
  Jew: 1,
  Jewish: 1,
  job: 1,
  join: 1,
  joint: 1,
  joke: 1,
  journal: 1,
  journalist: 1,
  journey: 1,
  joy: 1,
  judge: 1,
  judgment: 1,
  juice: 1,
  jump: 1,
  junior: 1,
  jury: 1,
  just: 1,
  justice: 1,
  justify: 1,
  keep: 1,
  key: 1,
  kick: 1,
  kid: 1,
  kill: 1,
  killer: 1,
  killing: 1,
  kind: 1,
  king: 1,
  kiss: 1,
  kitchen: 1,
  knee: 1,
  knife: 1,
  knock: 1,
  know: 1,
  knowledge: 1,
  lab: 1,
  label: 1,
  labor: 1,
  laboratory: 1,
  lack: 1,
  lady: 1,
  lake: 1,
  land: 1,
  landscape: 1,
  language: 1,
  lap: 1,
  large: 1,
  largely: 1,
  last: 1,
  late: 1,
  later: 1,
  Latin: 1,
  latter: 1,
  laugh: 1,
  launch: 1,
  law: 1,
  lawn: 1,
  lawsuit: 1,
  lawyer: 1,
  lay: 1,
  layer: 1,
  lead: 1,
  leader: 1,
  leadership: 1,
  leading: 1,
  leaf: 1,
  league: 1,
  lean: 1,
  learn: 1,
  learning: 1,
  least: 1,
  leather: 1,
  leave: 1,
  left: 1,
  leg: 1,
  legacy: 1,
  legal: 1,
  legend: 1,
  legislation: 1,
  legitimate: 1,
  lemon: 1,
  length: 1,
  less: 1,
  lesson: 1,
  let: 1,
  letter: 1,
  level: 1,
  liberal: 1,
  library: 1,
  license: 1,
  lie: 1,
  life: 1,
  lifestyle: 1,
  lifetime: 1,
  lift: 1,
  light: 1,
  like: 1,
  likely: 1,
  limit: 1,
  limitation: 1,
  limited: 1,
  line: 1,
  link: 1,
  lip: 1,
  list: 1,
  listen: 1,
  literally: 1,
  literary: 1,
  literature: 1,
  little: 1,
  live: 1,
  living: 1,
  load: 1,
  loan: 1,
  local: 1,
  locate: 1,
  location: 1,
  lock: 1,
  long: 1,
  "long-term": 1,
  look: 1,
  loose: 1,
  lose: 1,
  loss: 1,
  lost: 1,
  lot: 1,
  lots: 1,
  loud: 1,
  love: 1,
  lovely: 1,
  lover: 1,
  low: 1,
  lower: 1,
  luck: 1,
  lucky: 1,
  lunch: 1,
  lung: 1,
  machine: 1,
  mad: 1,
  magazine: 1,
  mail: 1,
  main: 1,
  mainly: 1,
  maintain: 1,
  maintenance: 1,
  major: 1,
  majority: 1,
  make: 1,
  maker: 1,
  makeup: 1,
  male: 1,
  mall: 1,
  man: 1,
  manage: 1,
  management: 1,
  manager: 1,
  manner: 1,
  manufacturer: 1,
  manufacturing: 1,
  many: 1,
  map: 1,
  margin: 1,
  mark: 1,
  market: 1,
  marketing: 1,
  marriage: 1,
  married: 1,
  marry: 1,
  mask: 1,
  mass: 1,
  massive: 1,
  master: 1,
  match: 1,
  material: 1,
  math: 1,
  matter: 1,
  may: 1,
  maybe: 1,
  mayor: 1,
  me: 1,
  meal: 1,
  mean: 1,
  meaning: 1,
  meanwhile: 1,
  measure: 1,
  measurement: 1,
  meat: 1,
  mechanism: 1,
  media: 1,
  medical: 1,
  medication: 1,
  medicine: 1,
  medium: 1,
  meet: 1,
  meeting: 1,
  member: 1,
  membership: 1,
  memory: 1,
  mental: 1,
  mention: 1,
  menu: 1,
  mere: 1,
  merely: 1,
  mess: 1,
  message: 1,
  metal: 1,
  meter: 1,
  method: 1,
  Mexican: 1,
  middle: 1,
  might: 1,
  military: 1,
  milk: 1,
  million: 1,
  mind: 1,
  mine: 1,
  minister: 1,
  minor: 1,
  minority: 1,
  minute: 1,
  miracle: 1,
  mirror: 1,
  miss: 1,
  missile: 1,
  mission: 1,
  mistake: 1,
  mix: 1,
  mixture: 1,
  "mm-hmm": 1,
  mode: 1,
  model: 1,
  moderate: 1,
  modern: 1,
  modest: 1,
  mom: 1,
  moment: 1,
  money: 1,
  monitor: 1,
  month: 1,
  mood: 1,
  moon: 1,
  moral: 1,
  more: 1,
  moreover: 1,
  morning: 1,
  mortgage: 1,
  most: 1,
  mostly: 1,
  mother: 1,
  motion: 1,
  motivation: 1,
  motor: 1,
  mount: 1,
  mountain: 1,
  mouse: 1,
  mouth: 1,
  move: 1,
  movement: 1,
  movie: 1,
  Mr: 1,
  Mrs: 1,
  Ms: 1,
  much: 1,
  multiple: 1,
  murder: 1,
  muscle: 1,
  museum: 1,
  music: 1,
  musical: 1,
  musician: 1,
  Muslim: 1,
  must: 1,
  mutual: 1,
  my: 1,
  myself: 1,
  mystery: 1,
  myth: 1,
  naked: 1,
  name: 1,
  narrative: 1,
  narrow: 1,
  nation: 1,
  national: 1,
  native: 1,
  natural: 1,
  naturally: 1,
  nature: 1,
  near: 1,
  nearby: 1,
  nearly: 1,
  necessarily: 1,
  necessary: 1,
  neck: 1,
  need: 1,
  negative: 1,
  negotiate: 1,
  negotiation: 1,
  neighbor: 1,
  neighborhood: 1,
  neither: 1,
  nerve: 1,
  nervous: 1,
  net: 1,
  network: 1,
  never: 1,
  nevertheless: 1,
  new: 1,
  newly: 1,
  news: 1,
  newspaper: 1,
  next: 1,
  nice: 1,
  night: 1,
  nine: 1,
  no: 1,
  nobody: 1,
  nod: 1,
  noise: 1,
  nomination: 1,
  none: 1,
  nonetheless: 1,
  nor: 1,
  normal: 1,
  normally: 1,
  north: 1,
  northern: 1,
  nose: 1,
  not: 1,
  note: 1,
  nothing: 1,
  notice: 1,
  notion: 1,
  novel: 1,
  now: 1,
  nowhere: 1,
  "n't": 1,
  nuclear: 1,
  number: 1,
  numerous: 1,
  nurse: 1,
  nut: 1,
  object: 1,
  objective: 1,
  obligation: 1,
  observation: 1,
  observe: 1,
  observer: 1,
  obtain: 1,
  obvious: 1,
  obviously: 1,
  occasion: 1,
  occasionally: 1,
  occupation: 1,
  occupy: 1,
  occur: 1,
  ocean: 1,
  odd: 1,
  odds: 1,
  of: 1,
  off: 1,
  offense: 1,
  offensive: 1,
  offer: 1,
  office: 1,
  officer: 1,
  official: 1,
  often: 1,
  oh: 1,
  oil: 1,
  ok: 1,
  okay: 1,
  old: 1,
  Olympic: 1,
  on: 1,
  once: 1,
  one: 1,
  ongoing: 1,
  onion: 1,
  online: 1,
  only: 1,
  onto: 1,
  open: 1,
  opening: 1,
  operate: 1,
  operating: 1,
  operation: 1,
  operator: 1,
  opinion: 1,
  opponent: 1,
  opportunity: 1,
  oppose: 1,
  opposite: 1,
  opposition: 1,
  option: 1,
  or: 1,
  orange: 1,
  order: 1,
  ordinary: 1,
  organic: 1,
  organization: 1,
  organize: 1,
  orientation: 1,
  origin: 1,
  original: 1,
  originally: 1,
  other: 1,
  others: 1,
  otherwise: 1,
  ought: 1,
  our: 1,
  ourselves: 1,
  out: 1,
  outcome: 1,
  outside: 1,
  oven: 1,
  over: 1,
  overall: 1,
  overcome: 1,
  overlook: 1,
  owe: 1,
  own: 1,
  owner: 1,
  pace: 1,
  pack: 1,
  package: 1,
  page: 1,
  pain: 1,
  painful: 1,
  paint: 1,
  painter: 1,
  painting: 1,
  pair: 1,
  pale: 1,
  Palestinian: 1,
  palm: 1,
  pan: 1,
  panel: 1,
  pant: 1,
  paper: 1,
  parent: 1,
  park: 1,
  parking: 1,
  part: 1,
  participant: 1,
  participate: 1,
  participation: 1,
  particular: 1,
  particularly: 1,
  partly: 1,
  partner: 1,
  partnership: 1,
  party: 1,
  pass: 1,
  passage: 1,
  passenger: 1,
  passion: 1,
  past: 1,
  patch: 1,
  path: 1,
  patient: 1,
  pattern: 1,
  pause: 1,
  pay: 1,
  payment: 1,
  PC: 1,
  peace: 1,
  peak: 1,
  peer: 1,
  penalty: 1,
  people: 1,
  pepper: 1,
  per: 1,
  perceive: 1,
  percentage: 1,
  perception: 1,
  perfect: 1,
  perfectly: 1,
  perform: 1,
  performance: 1,
  perhaps: 1,
  period: 1,
  permanent: 1,
  permission: 1,
  permit: 1,
  person: 1,
  personal: 1,
  personality: 1,
  personally: 1,
  personnel: 1,
  perspective: 1,
  persuade: 1,
  pet: 1,
  phase: 1,
  phenomenon: 1,
  philosophy: 1,
  phone: 1,
  photo: 1,
  photograph: 1,
  photographer: 1,
  phrase: 1,
  physical: 1,
  physically: 1,
  physician: 1,
  piano: 1,
  pick: 1,
  picture: 1,
  pie: 1,
  piece: 1,
  pile: 1,
  pilot: 1,
  pine: 1,
  pink: 1,
  pipe: 1,
  pitch: 1,
  place: 1,
  plan: 1,
  plane: 1,
  planet: 1,
  planning: 1,
  plant: 1,
  plastic: 1,
  plate: 1,
  platform: 1,
  play: 1,
  player: 1,
  please: 1,
  pleasure: 1,
  plenty: 1,
  plot: 1,
  plus: 1,
  PM: 1,
  pocket: 1,
  poem: 1,
  poet: 1,
  poetry: 1,
  point: 1,
  pole: 1,
  police: 1,
  policy: 1,
  political: 1,
  politically: 1,
  politician: 1,
  politics: 1,
  poll: 1,
  pollution: 1,
  pool: 1,
  poor: 1,
  pop: 1,
  popular: 1,
  population: 1,
  porch: 1,
  port: 1,
  portion: 1,
  portrait: 1,
  portray: 1,
  pose: 1,
  position: 1,
  positive: 1,
  possess: 1,
  possibility: 1,
  possible: 1,
  possibly: 1,
  post: 1,
  pot: 1,
  potato: 1,
  potential: 1,
  potentially: 1,
  pound: 1,
  pour: 1,
  poverty: 1,
  powder: 1,
  power: 1,
  powerful: 1,
  practical: 1,
  practice: 1,
  pray: 1,
  prayer: 1,
  precisely: 1,
  predict: 1,
  prefer: 1,
  preference: 1,
  pregnancy: 1,
  pregnant: 1,
  preparation: 1,
  prepare: 1,
  prescription: 1,
  presence: 1,
  present: 1,
  presentation: 1,
  preserve: 1,
  president: 1,
  presidential: 1,
  press: 1,
  pressure: 1,
  pretend: 1,
  pretty: 1,
  prevent: 1,
  previous: 1,
  previously: 1,
  price: 1,
  pride: 1,
  priest: 1,
  primarily: 1,
  primary: 1,
  prime: 1,
  principal: 1,
  principle: 1,
  print: 1,
  prior: 1,
  priority: 1,
  prison: 1,
  prisoner: 1,
  privacy: 1,
  private: 1,
  probably: 1,
  problem: 1,
  procedure: 1,
  proceed: 1,
  process: 1,
  produce: 1,
  producer: 1,
  product: 1,
  production: 1,
  profession: 1,
  professional: 1,
  professor: 1,
  profile: 1,
  profit: 1,
  program: 1,
  progress: 1,
  project: 1,
  prominent: 1,
  promise: 1,
  promote: 1,
  prompt: 1,
  proof: 1,
  proper: 1,
  properly: 1,
  property: 1,
  proportion: 1,
  proposal: 1,
  propose: 1,
  proposed: 1,
  prosecutor: 1,
  prospect: 1,
  protect: 1,
  protection: 1,
  protein: 1,
  protest: 1,
  proud: 1,
  prove: 1,
  provide: 1,
  provider: 1,
  province: 1,
  provision: 1,
  psychological: 1,
  psychologist: 1,
  psychology: 1,
  public: 1,
  publication: 1,
  publicly: 1,
  publish: 1,
  publisher: 1,
  pull: 1,
  punishment: 1,
  purchase: 1,
  pure: 1,
  purpose: 1,
  pursue: 1,
  push: 1,
  put: 1
};

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon3000", function() { return TheMostCommon3000; });
// https://www.ef.com/wwen/english-resources/english-vocabulary/top-3000-words/
const TheMostCommon3000 = {
  qualify: 1,
  quality: 1,
  quarter: 1,
  quarterback: 1,
  question: 1,
  quick: 1,
  quickly: 1,
  quiet: 1,
  quietly: 1,
  quit: 1,
  quite: 1,
  quote: 1,
  race: 1,
  racial: 1,
  radical: 1,
  radio: 1,
  rail: 1,
  rain: 1,
  raise: 1,
  range: 1,
  rank: 1,
  rapid: 1,
  rapidly: 1,
  rare: 1,
  rarely: 1,
  rate: 1,
  rather: 1,
  rating: 1,
  ratio: 1,
  raw: 1,
  reach: 1,
  react: 1,
  reaction: 1,
  read: 1,
  reader: 1,
  reading: 1,
  ready: 1,
  real: 1,
  reality: 1,
  realize: 1,
  really: 1,
  reason: 1,
  reasonable: 1,
  recall: 1,
  receive: 1,
  recent: 1,
  recently: 1,
  recipe: 1,
  recognition: 1,
  recognize: 1,
  recommend: 1,
  recommendation: 1,
  record: 1,
  recording: 1,
  recover: 1,
  recovery: 1,
  recruit: 1,
  red: 1,
  reduce: 1,
  reduction: 1,
  refer: 1,
  reference: 1,
  reflect: 1,
  reflection: 1,
  reform: 1,
  refugee: 1,
  refuse: 1,
  regard: 1,
  regarding: 1,
  regardless: 1,
  regime: 1,
  region: 1,
  regional: 1,
  register: 1,
  regular: 1,
  regularly: 1,
  regulate: 1,
  regulation: 1,
  reinforce: 1,
  reject: 1,
  relate: 1,
  relation: 1,
  relationship: 1,
  relative: 1,
  relatively: 1,
  relax: 1,
  release: 1,
  relevant: 1,
  relief: 1,
  religion: 1,
  religious: 1,
  rely: 1,
  remain: 1,
  remaining: 1,
  remarkable: 1,
  remember: 1,
  remind: 1,
  remote: 1,
  remove: 1,
  repeat: 1,
  repeatedly: 1,
  replace: 1,
  reply: 1,
  report: 1,
  reporter: 1,
  represent: 1,
  representation: 1,
  representative: 1,
  Republican: 1,
  reputation: 1,
  request: 1,
  require: 1,
  requirement: 1,
  research: 1,
  researcher: 1,
  resemble: 1,
  reservation: 1,
  resident: 1,
  resist: 1,
  resistance: 1,
  resolution: 1,
  resolve: 1,
  resort: 1,
  resource: 1,
  respect: 1,
  respond: 1,
  respondent: 1,
  response: 1,
  responsibility: 1,
  responsible: 1,
  rest: 1,
  restaurant: 1,
  restore: 1,
  restriction: 1,
  result: 1,
  retain: 1,
  retire: 1,
  retirement: 1,
  return: 1,
  reveal: 1,
  revenue: 1,
  review: 1,
  revolution: 1,
  rhythm: 1,
  rice: 1,
  rich: 1,
  rid: 1,
  ride: 1,
  rifle: 1,
  right: 1,
  ring: 1,
  rise: 1,
  risk: 1,
  river: 1,
  road: 1,
  rock: 1,
  role: 1,
  roll: 1,
  romantic: 1,
  roof: 1,
  room: 1,
  root: 1,
  rope: 1,
  rose: 1,
  rough: 1,
  roughly: 1,
  round: 1,
  route: 1,
  routine: 1,
  row: 1,
  rub: 1,
  rule: 1,
  run: 1,
  running: 1,
  rural: 1,
  rush: 1,
  Russian: 1,
  sacred: 1,
  sad: 1,
  safe: 1,
  safety: 1,
  sake: 1,
  salad: 1,
  salary: 1,
  sale: 1,
  sales: 1,
  salt: 1,
  same: 1,
  sample: 1,
  sanction: 1,
  sand: 1,
  satellite: 1,
  satisfaction: 1,
  satisfy: 1,
  sauce: 1,
  save: 1,
  saving: 1,
  say: 1,
  scale: 1,
  scandal: 1,
  scared: 1,
  scenario: 1,
  scene: 1,
  schedule: 1,
  scheme: 1,
  scholar: 1,
  scholarship: 1,
  school: 1,
  science: 1,
  scientific: 1,
  scientist: 1,
  scope: 1,
  score: 1,
  scream: 1,
  screen: 1,
  script: 1,
  sea: 1,
  search: 1,
  season: 1,
  seat: 1,
  second: 1,
  secret: 1,
  secretary: 1,
  section: 1,
  sector: 1,
  secure: 1,
  security: 1,
  see: 1,
  seed: 1,
  seek: 1,
  seem: 1,
  segment: 1,
  seize: 1,
  select: 1,
  selection: 1,
  self: 1,
  sell: 1,
  Senate: 1,
  senator: 1,
  send: 1,
  senior: 1,
  sense: 1,
  sensitive: 1,
  sentence: 1,
  separate: 1,
  sequence: 1,
  series: 1,
  serious: 1,
  seriously: 1,
  serve: 1,
  service: 1,
  session: 1,
  set: 1,
  setting: 1,
  settle: 1,
  settlement: 1,
  seven: 1,
  several: 1,
  severe: 1,
  sex: 1,
  sexual: 1,
  shade: 1,
  shadow: 1,
  shake: 1,
  shall: 1,
  shape: 1,
  share: 1,
  sharp: 1,
  she: 1,
  sheet: 1,
  shelf: 1,
  shell: 1,
  shelter: 1,
  shift: 1,
  shine: 1,
  ship: 1,
  shirt: 1,
  shit: 1,
  shock: 1,
  shoe: 1,
  shoot: 1,
  shooting: 1,
  shop: 1,
  shopping: 1,
  shore: 1,
  short: 1,
  shortly: 1,
  shot: 1,
  should: 1,
  shoulder: 1,
  shout: 1,
  show: 1,
  shower: 1,
  shrug: 1,
  shut: 1,
  sick: 1,
  side: 1,
  sigh: 1,
  sight: 1,
  sign: 1,
  signal: 1,
  significance: 1,
  significant: 1,
  significantly: 1,
  silence: 1,
  silent: 1,
  silver: 1,
  similar: 1,
  similarly: 1,
  simple: 1,
  simply: 1,
  sin: 1,
  since: 1,
  sing: 1,
  singer: 1,
  single: 1,
  sink: 1,
  sir: 1,
  sister: 1,
  sit: 1,
  site: 1,
  situation: 1,
  six: 1,
  size: 1,
  ski: 1,
  skill: 1,
  skin: 1,
  sky: 1,
  slave: 1,
  sleep: 1,
  slice: 1,
  slide: 1,
  slight: 1,
  slightly: 1,
  slip: 1,
  slow: 1,
  slowly: 1,
  small: 1,
  smart: 1,
  smell: 1,
  smile: 1,
  smoke: 1,
  smooth: 1,
  snap: 1,
  snow: 1,
  so: 1,
  "so-called": 1,
  soccer: 1,
  social: 1,
  society: 1,
  soft: 1,
  software: 1,
  soil: 1,
  solar: 1,
  soldier: 1,
  solid: 1,
  solution: 1,
  solve: 1,
  some: 1,
  somebody: 1,
  somehow: 1,
  someone: 1,
  something: 1,
  sometimes: 1,
  somewhat: 1,
  somewhere: 1,
  son: 1,
  song: 1,
  soon: 1,
  sophisticated: 1,
  sorry: 1,
  sort: 1,
  soul: 1,
  sound: 1,
  soup: 1,
  source: 1,
  south: 1,
  southern: 1,
  Soviet: 1,
  space: 1,
  Spanish: 1,
  speak: 1,
  speaker: 1,
  special: 1,
  specialist: 1,
  species: 1,
  specific: 1,
  specifically: 1,
  speech: 1,
  speed: 1,
  spend: 1,
  spending: 1,
  spin: 1,
  spirit: 1,
  spiritual: 1,
  split: 1,
  spokesman: 1,
  sport: 1,
  spot: 1,
  spread: 1,
  spring: 1,
  square: 1,
  squeeze: 1,
  stability: 1,
  stable: 1,
  staff: 1,
  stage: 1,
  stair: 1,
  stake: 1,
  stand: 1,
  standard: 1,
  standing: 1,
  star: 1,
  stare: 1,
  start: 1,
  state: 1,
  statement: 1,
  station: 1,
  statistics: 1,
  status: 1,
  stay: 1,
  steady: 1,
  steal: 1,
  steel: 1,
  step: 1,
  stick: 1,
  still: 1,
  stir: 1,
  stock: 1,
  stomach: 1,
  stone: 1,
  stop: 1,
  storage: 1,
  store: 1,
  storm: 1,
  story: 1,
  straight: 1,
  strange: 1,
  stranger: 1,
  strategic: 1,
  strategy: 1,
  stream: 1,
  street: 1,
  strength: 1,
  strengthen: 1,
  stress: 1,
  stretch: 1,
  strike: 1,
  string: 1,
  strip: 1,
  stroke: 1,
  strong: 1,
  strongly: 1,
  structure: 1,
  struggle: 1,
  student: 1,
  studio: 1,
  study: 1,
  stuff: 1,
  stupid: 1,
  style: 1,
  subject: 1,
  submit: 1,
  subsequent: 1,
  substance: 1,
  substantial: 1,
  succeed: 1,
  success: 1,
  successful: 1,
  successfully: 1,
  such: 1,
  sudden: 1,
  suddenly: 1,
  sue: 1,
  suffer: 1,
  sufficient: 1,
  sugar: 1,
  suggest: 1,
  suggestion: 1,
  suicide: 1,
  suit: 1,
  summer: 1,
  summit: 1,
  sun: 1,
  super: 1,
  supply: 1,
  support: 1,
  supporter: 1,
  suppose: 1,
  supposed: 1,
  Supreme: 1,
  sure: 1,
  surely: 1,
  surface: 1,
  surgery: 1,
  surprise: 1,
  surprised: 1,
  surprising: 1,
  surprisingly: 1,
  surround: 1,
  survey: 1,
  survival: 1,
  survive: 1,
  survivor: 1,
  suspect: 1,
  sustain: 1,
  swear: 1,
  sweep: 1,
  sweet: 1,
  swim: 1,
  swing: 1,
  switch: 1,
  symbol: 1,
  symptom: 1,
  system: 1,
  table: 1,
  tablespoon: 1,
  tactic: 1,
  tail: 1,
  take: 1,
  tale: 1,
  talent: 1,
  talk: 1,
  tall: 1,
  tank: 1,
  tap: 1,
  tape: 1,
  target: 1,
  task: 1,
  taste: 1,
  tax: 1,
  taxpayer: 1,
  tea: 1,
  teach: 1,
  teacher: 1,
  teaching: 1,
  team: 1,
  tear: 1,
  teaspoon: 1,
  technical: 1,
  technique: 1,
  technology: 1,
  teen: 1,
  teenager: 1,
  telephone: 1,
  telescope: 1,
  television: 1,
  tell: 1,
  temperature: 1,
  temporary: 1,
  ten: 1,
  tend: 1,
  tendency: 1,
  tennis: 1,
  tension: 1,
  tent: 1,
  term: 1,
  terms: 1,
  terrible: 1,
  territory: 1,
  terror: 1,
  terrorism: 1,
  terrorist: 1,
  test: 1,
  testify: 1,
  testimony: 1,
  testing: 1,
  text: 1,
  than: 1,
  thank: 1,
  thanks: 1,
  that: 1,
  the: 1,
  theater: 1,
  their: 1,
  them: 1,
  theme: 1,
  themselves: 1,
  then: 1,
  theory: 1,
  therapy: 1,
  there: 1,
  therefore: 1,
  these: 1,
  they: 1,
  thick: 1,
  thin: 1,
  thing: 1,
  think: 1,
  thinking: 1,
  third: 1,
  thirty: 1,
  this: 1,
  those: 1,
  though: 1,
  thought: 1,
  thousand: 1,
  threat: 1,
  threaten: 1,
  three: 1,
  throat: 1,
  through: 1,
  throughout: 1,
  throw: 1,
  thus: 1,
  ticket: 1,
  tie: 1,
  tight: 1,
  time: 1,
  tiny: 1,
  tip: 1,
  tire: 1,
  tired: 1,
  tissue: 1,
  title: 1,
  to: 1,
  tobacco: 1,
  today: 1,
  toe: 1,
  together: 1,
  tomato: 1,
  tomorrow: 1,
  tone: 1,
  tongue: 1,
  tonight: 1,
  too: 1,
  tool: 1,
  tooth: 1,
  top: 1,
  topic: 1,
  toss: 1,
  total: 1,
  totally: 1,
  touch: 1,
  tough: 1,
  tour: 1,
  tourist: 1,
  tournament: 1,
  toward: 1,
  towards: 1,
  tower: 1,
  town: 1,
  toy: 1,
  trace: 1,
  track: 1,
  trade: 1,
  tradition: 1,
  traditional: 1,
  traffic: 1,
  tragedy: 1,
  trail: 1,
  train: 1,
  training: 1,
  transfer: 1,
  transform: 1,
  transformation: 1,
  transition: 1,
  translate: 1,
  transportation: 1,
  travel: 1,
  treat: 1,
  treatment: 1,
  treaty: 1,
  tree: 1,
  tremendous: 1,
  trend: 1,
  trial: 1,
  tribe: 1,
  trick: 1,
  trip: 1,
  troop: 1,
  trouble: 1,
  truck: 1,
  true: 1,
  truly: 1,
  trust: 1,
  truth: 1,
  try: 1,
  tube: 1,
  tunnel: 1,
  turn: 1,
  TV: 1,
  twelve: 1,
  twenty: 1,
  twice: 1,
  twin: 1,
  two: 1,
  type: 1,
  typical: 1,
  typically: 1,
  ugly: 1,
  ultimate: 1,
  ultimately: 1,
  unable: 1,
  uncle: 1,
  under: 1,
  undergo: 1,
  understand: 1,
  understanding: 1,
  unfortunately: 1,
  uniform: 1,
  union: 1,
  unique: 1,
  unit: 1,
  United: 1,
  universal: 1,
  universe: 1,
  university: 1,
  unknown: 1,
  unless: 1,
  unlike: 1,
  unlikely: 1,
  until: 1,
  unusual: 1,
  up: 1,
  upon: 1,
  upper: 1,
  urban: 1,
  urge: 1,
  us: 1,
  use: 1,
  used: 1,
  useful: 1,
  user: 1,
  usual: 1,
  usually: 1,
  utility: 1,
  vacation: 1,
  valley: 1,
  valuable: 1,
  value: 1,
  variable: 1,
  variation: 1,
  variety: 1,
  various: 1,
  vary: 1,
  vast: 1,
  vegetable: 1,
  vehicle: 1,
  venture: 1,
  version: 1,
  versus: 1,
  very: 1,
  vessel: 1,
  veteran: 1,
  via: 1,
  victim: 1,
  victory: 1,
  video: 1,
  view: 1,
  viewer: 1,
  village: 1,
  violate: 1,
  violation: 1,
  violence: 1,
  violent: 1,
  virtually: 1,
  virtue: 1,
  virus: 1,
  visible: 1,
  vision: 1,
  visit: 1,
  visitor: 1,
  visual: 1,
  vital: 1,
  voice: 1,
  volume: 1,
  volunteer: 1,
  vote: 1,
  voter: 1,
  vs: 1,
  vulnerable: 1,
  wage: 1,
  wait: 1,
  wake: 1,
  walk: 1,
  wall: 1,
  wander: 1,
  want: 1,
  war: 1,
  warm: 1,
  warn: 1,
  warning: 1,
  wash: 1,
  waste: 1,
  watch: 1,
  water: 1,
  wave: 1,
  way: 1,
  we: 1,
  weak: 1,
  wealth: 1,
  wealthy: 1,
  weapon: 1,
  wear: 1,
  weather: 1,
  wedding: 1,
  week: 1,
  weekend: 1,
  weekly: 1,
  weigh: 1,
  weight: 1,
  welcome: 1,
  welfare: 1,
  well: 1,
  west: 1,
  western: 1,
  wet: 1,
  what: 1,
  whatever: 1,
  wheel: 1,
  when: 1,
  whenever: 1,
  where: 1,
  whereas: 1,
  whether: 1,
  which: 1,
  while: 1,
  whisper: 1,
  white: 1,
  who: 1,
  whole: 1,
  whom: 1,
  whose: 1,
  why: 1,
  wide: 1,
  widely: 1,
  widespread: 1,
  wife: 1,
  wild: 1,
  will: 1,
  willing: 1,
  win: 1,
  wind: 1,
  window: 1,
  wine: 1,
  wing: 1,
  winner: 1,
  winter: 1,
  wipe: 1,
  wire: 1,
  wisdom: 1,
  wise: 1,
  wish: 1,
  with: 1,
  withdraw: 1,
  within: 1,
  without: 1,
  witness: 1,
  woman: 1,
  wonder: 1,
  wonderful: 1,
  wood: 1,
  wooden: 1,
  word: 1,
  work: 1,
  worker: 1,
  working: 1,
  works: 1,
  workshop: 1,
  world: 1,
  worried: 1,
  worry: 1,
  worth: 1,
  would: 1,
  wound: 1,
  wrap: 1,
  write: 1,
  writer: 1,
  writing: 1,
  wrong: 1,
  yard: 1,
  yeah: 1,
  year: 1,
  yell: 1,
  yellow: 1,
  yes: 1,
  yesterday: 1,
  yet: 1,
  yield: 1,
  you: 1,
  young: 1,
  your: 1,
  yours: 1,
  yourself: 1,
  youth: 1,
  zone: 1
};

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon10000", function() { return TheMostCommon10000; });
// https://englishgrammarhere.com/vocabulary/10000-most-common-words-in-english-part-5/
const TheMostCommon10000 = {
  a: 1,
  aa: 1,
  aaa: 1,
  aaron: 1,
  ab: 1,
  abandoned: 1,
  abc: 1,
  aberdeen: 1,
  abilities: 1,
  ability: 1,
  able: 1,
  aboriginal: 1,
  abortion: 1,
  about: 1,
  above: 1,
  abraham: 1,
  abroad: 1,
  abs: 1,
  absence: 1,
  absent: 1,
  absolute: 1,
  absolutely: 1,
  absorption: 1,
  abstract: 1,
  abstracts: 1,
  abu: 1,
  abuse: 1,
  ac: 1,
  academic: 1,
  academics: 1,
  academy: 1,
  acc: 1,
  accent: 1,
  accept: 1,
  acceptable: 1,
  acceptance: 1,
  accepted: 1,
  accepting: 1,
  accepts: 1,
  access: 1,
  accessed: 1,
  accessibility: 1,
  accessible: 1,
  accessing: 1,
  accessories: 1,
  accessory: 1,
  accident: 1,
  accidents: 1,
  accommodate: 1,
  accommodation: 1,
  accommodations: 1,
  accompanied: 1,
  accompanying: 1,
  accomplish: 1,
  accomplished: 1,
  accordance: 1,
  according: 1,
  accordingly: 1,
  account: 1,
  accountability: 1,
  accounting: 1,
  accounts: 1,
  accreditation: 1,
  accredited: 1,
  accuracy: 1,
  accurate: 1,
  accurately: 1,
  accused: 1,
  acdbentity: 1,
  ace: 1,
  acer: 1,
  achieve: 1,
  achieved: 1,
  achievement: 1,
  achievements: 1,
  achieving: 1,
  acid: 1,
  acids: 1,
  acknowledge: 1,
  acknowledged: 1,
  acm: 1,
  acne: 1,
  acoustic: 1,
  acquire: 1,
  acquired: 1,
  acquisition: 1,
  acquisitions: 1,
  acre: 1,
  acres: 1,
  acrobat: 1,
  across: 1,
  acrylic: 1,
  act: 1,
  acting: 1,
  action: 1,
  actions: 1,
  activated: 1,
  activation: 1,
  active: 1,
  actively: 1,
  activists: 1,
  activities: 1,
  activity: 1,
  actor: 1,
  actors: 1,
  actress: 1,
  acts: 1,
  actual: 1,
  actually: 1,
  acute: 1,
  ad: 1,
  ada: 1,
  adam: 1,
  adams: 1,
  adaptation: 1,
  adapted: 1,
  adapter: 1,
  adapters: 1,
  adaptive: 1,
  adaptor: 1,
  add: 1,
  added: 1,
  addiction: 1,
  adding: 1,
  addition: 1,
  additional: 1,
  additionally: 1,
  additions: 1,
  address: 1,
  addressed: 1,
  addresses: 1,
  addressing: 1,
  adds: 1,
  adelaide: 1,
  adequate: 1,
  adidas: 1,
  adipex: 1,
  adjacent: 1,
  adjust: 1,
  adjustable: 1,
  adjusted: 1,
  adjustment: 1,
  adjustments: 1,
  admin: 1,
  administered: 1,
  administration: 1,
  administrative: 1,
  administrator: 1,
  administrators: 1,
  admission: 1,
  admissions: 1,
  admit: 1,
  admitted: 1,
  adobe: 1,
  adolescent: 1,
  adopt: 1,
  adopted: 1,
  adoption: 1,
  adrian: 1,
  ads: 1,
  adsl: 1,
  adult: 1,
  adults: 1,
  advance: 1,
  advanced: 1,
  advancement: 1,
  advances: 1,
  advantage: 1,
  advantages: 1,
  adventure: 1,
  adventures: 1,
  adverse: 1,
  advert: 1,
  advertise: 1,
  advertisement: 1,
  advertisements: 1,
  advertiser: 1,
  advertisers: 1,
  advertising: 1,
  advice: 1,
  advise: 1,
  advised: 1,
  advisor: 1,
  advisors: 1,
  advisory: 1,
  advocacy: 1,
  advocate: 1,
  adware: 1,
  ae: 1,
  aerial: 1,
  aerospace: 1,
  af: 1,
  affair: 1,
  affairs: 1,
  affect: 1,
  affected: 1,
  affecting: 1,
  affects: 1,
  affiliate: 1,
  affiliated: 1,
  affiliates: 1,
  affiliation: 1,
  afford: 1,
  affordable: 1,
  afghanistan: 1,
  afraid: 1,
  africa: 1,
  african: 1,
  after: 1,
  afternoon: 1,
  afterwards: 1,
  ag: 1,
  again: 1,
  against: 1,
  age: 1,
  aged: 1,
  agencies: 1,
  agency: 1,
  agenda: 1,
  agent: 1,
  agents: 1,
  ages: 1,
  aggregate: 1,
  aggressive: 1,
  aging: 1,
  ago: 1,
  agree: 1,
  agreed: 1,
  agreement: 1,
  agreements: 1,
  agrees: 1,
  agricultural: 1,
  agriculture: 1,
  ah: 1,
  ahead: 1,
  ai: 1,
  aid: 1,
  aids: 1,
  aim: 1,
  aimed: 1,
  aims: 1,
  air: 1,
  aircraft: 1,
  airfare: 1,
  airline: 1,
  airlines: 1,
  airplane: 1,
  airport: 1,
  airports: 1,
  aj: 1,
  ak: 1,
  aka: 1,
  al: 1,
  ala: 1,
  alabama: 1,
  alan: 1,
  alarm: 1,
  alaska: 1,
  albania: 1,
  albany: 1,
  albert: 1,
  alberta: 1,
  album: 1,
  albums: 1,
  albuquerque: 1,
  alcohol: 1,
  alert: 1,
  alerts: 1,
  alex: 1,
  alexander: 1,
  alexandria: 1,
  alfred: 1,
  algebra: 1,
  algeria: 1,
  algorithm: 1,
  algorithms: 1,
  ali: 1,
  alias: 1,
  alice: 1,
  alien: 1,
  align: 1,
  alignment: 1,
  alike: 1,
  alive: 1,
  all: 1,
  allah: 1,
  allan: 1,
  alleged: 1,
  allen: 1,
  allergy: 1,
  alliance: 1,
  allied: 1,
  allocated: 1,
  allocation: 1,
  allow: 1,
  allowance: 1,
  allowed: 1,
  allowing: 1,
  allows: 1,
  alloy: 1,
  almost: 1,
  alone: 1,
  along: 1,
  alot: 1,
  alpha: 1,
  alphabetical: 1,
  alpine: 1,
  already: 1,
  also: 1,
  alt: 1,
  alter: 1,
  altered: 1,
  alternate: 1,
  alternative: 1,
  alternatively: 1,
  alternatives: 1,
  although: 1,
  alto: 1,
  aluminium: 1,
  aluminum: 1,
  alumni: 1,
  always: 1,
  am: 1,
  amanda: 1,
  amateur: 1,
  amazing: 1,
  amazon: 1,
  ambassador: 1,
  amber: 1,
  ambien: 1,
  ambient: 1,
  amd: 1,
  amend: 1,
  amended: 1,
  amendment: 1,
  amendments: 1,
  amenities: 1,
  america: 1,
  american: 1,
  americans: 1,
  americas: 1,
  amino: 1,
  among: 1,
  amongst: 1,
  amount: 1,
  amounts: 1,
  amp: 1,
  ampland: 1,
  amplifier: 1,
  amsterdam: 1,
  amy: 1,
  an: 1,
  ana: 1,
  anaheim: 1,
  anal: 1,
  analog: 1,
  analyses: 1,
  analysis: 1,
  analyst: 1,
  analysts: 1,
  analytical: 1,
  analyze: 1,
  analyzed: 1,
  anatomy: 1,
  anchor: 1,
  ancient: 1,
  and: 1,
  andale: 1,
  anderson: 1,
  andorra: 1,
  andrea: 1,
  andreas: 1,
  andrew: 1,
  andrews: 1,
  andy: 1,
  angel: 1,
  angela: 1,
  angeles: 1,
  angels: 1,
  anger: 1,
  angle: 1,
  angola: 1,
  angry: 1,
  animal: 1,
  animals: 1,
  animated: 1,
  animation: 1,
  anime: 1,
  ann: 1,
  anna: 1,
  anne: 1,
  annex: 1,
  annie: 1,
  anniversary: 1,
  annotated: 1,
  annotation: 1,
  announce: 1,
  announced: 1,
  announcement: 1,
  announcements: 1,
  announces: 1,
  annoying: 1,
  annual: 1,
  annually: 1,
  anonymous: 1,
  another: 1,
  answer: 1,
  answered: 1,
  answering: 1,
  answers: 1,
  ant: 1,
  antarctica: 1,
  antenna: 1,
  anthony: 1,
  anthropology: 1,
  anti: 1,
  antibodies: 1,
  antibody: 1,
  anticipated: 1,
  antigua: 1,
  antique: 1,
  antiques: 1,
  antivirus: 1,
  antonio: 1,
  anxiety: 1,
  any: 1,
  anybody: 1,
  anymore: 1,
  anyone: 1,
  anything: 1,
  anytime: 1,
  anyway: 1,
  anywhere: 1,
  aol: 1,
  ap: 1,
  apache: 1,
  apart: 1,
  apartment: 1,
  apartments: 1,
  api: 1,
  apnic: 1,
  apollo: 1,
  app: 1,
  apparatus: 1,
  apparel: 1,
  apparent: 1,
  apparently: 1,
  appeal: 1,
  appeals: 1,
  appear: 1,
  appearance: 1,
  appeared: 1,
  appearing: 1,
  appears: 1,
  appendix: 1,
  apple: 1,
  appliance: 1,
  appliances: 1,
  applicable: 1,
  applicant: 1,
  applicants: 1,
  application: 1,
  applications: 1,
  applied: 1,
  applies: 1,
  apply: 1,
  applying: 1,
  appointed: 1,
  appointment: 1,
  appointments: 1,
  appraisal: 1,
  appreciate: 1,
  appreciated: 1,
  appreciation: 1,
  approach: 1,
  approaches: 1,
  appropriate: 1,
  appropriations: 1,
  approval: 1,
  approve: 1,
  approved: 1,
  approx: 1,
  approximate: 1,
  approximately: 1,
  apps: 1,
  apr: 1,
  april: 1,
  apt: 1,
  aqua: 1,
  aquarium: 1,
  aquatic: 1,
  ar: 1,
  arab: 1,
  arabia: 1,
  arabic: 1,
  arbitrary: 1,
  arbitration: 1,
  arbor: 1,
  arc: 1,
  arcade: 1,
  arch: 1,
  architect: 1,
  architects: 1,
  architectural: 1,
  architecture: 1,
  archive: 1,
  archived: 1,
  archives: 1,
  arctic: 1,
  are: 1,
  area: 1,
  areas: 1,
  arena: 1,
  arg: 1,
  argentina: 1,
  argue: 1,
  argued: 1,
  argument: 1,
  arguments: 1,
  arise: 1,
  arising: 1,
  arizona: 1,
  arkansas: 1,
  arlington: 1,
  arm: 1,
  armed: 1,
  armenia: 1,
  armor: 1,
  arms: 1,
  armstrong: 1,
  army: 1,
  arnold: 1,
  around: 1,
  arrange: 1,
  arranged: 1,
  arrangement: 1,
  arrangements: 1,
  array: 1,
  arrest: 1,
  arrested: 1,
  arrival: 1,
  arrivals: 1,
  arrive: 1,
  arrived: 1,
  arrives: 1,
  arrow: 1,
  art: 1,
  arthritis: 1,
  arthur: 1,
  article: 1,
  articles: 1,
  artificial: 1,
  artist: 1,
  artistic: 1,
  artists: 1,
  arts: 1,
  artwork: 1,
  aruba: 1,
  as: 1,
  asbestos: 1,
  ascii: 1,
  ash: 1,
  ashley: 1,
  asia: 1,
  asian: 1,
  aside: 1,
  asin: 1,
  ask: 1,
  asked: 1,
  asking: 1,
  asks: 1,
  asn: 1,
  asp: 1,
  aspect: 1,
  aspects: 1,
  ass: 1,
  assault: 1,
  assembled: 1,
  assembly: 1,
  assess: 1,
  assessed: 1,
  assessing: 1,
  assessment: 1,
  assessments: 1,
  asset: 1,
  assets: 1,
  assign: 1,
  assigned: 1,
  assignment: 1,
  assignments: 1,
  assist: 1,
  assistance: 1,
  assistant: 1,
  assisted: 1,
  assists: 1,
  associate: 1,
  associated: 1,
  associates: 1,
  association: 1,
  associations: 1,
  assume: 1,
  assumed: 1,
  assumes: 1,
  assuming: 1,
  assumption: 1,
  assumptions: 1,
  assurance: 1,
  assure: 1,
  assured: 1,
  asthma: 1,
  astrology: 1,
  astronomy: 1,
  asus: 1,
  asylum: 1,
  at: 1,
  ata: 1,
  ate: 1,
  athens: 1,
  athletes: 1,
  athletic: 1,
  athletics: 1,
  ati: 1,
  atlanta: 1,
  atlantic: 1,
  atlas: 1,
  atm: 1,
  atmosphere: 1,
  atmospheric: 1,
  atom: 1,
  atomic: 1,
  attach: 1,
  attached: 1,
  attachment: 1,
  attachments: 1,
  attack: 1,
  attacked: 1,
  attacks: 1,
  attempt: 1,
  attempted: 1,
  attempting: 1,
  attempts: 1,
  attend: 1,
  attendance: 1,
  attended: 1,
  attending: 1,
  attention: 1,
  attitude: 1,
  attitudes: 1,
  attorney: 1,
  attorneys: 1,
  attract: 1,
  attraction: 1,
  attractions: 1,
  attractive: 1,
  attribute: 1,
  attributes: 1,
  au: 1,
  auburn: 1,
  auckland: 1,
  auction: 1,
  auctions: 1,
  aud: 1,
  audi: 1,
  audience: 1,
  audio: 1,
  audit: 1,
  auditor: 1,
  aug: 1,
  august: 1,
  aurora: 1,
  aus: 1,
  austin: 1,
  australia: 1,
  australian: 1,
  austria: 1,
  authentic: 1,
  authentication: 1,
  author: 1,
  authorities: 1,
  authority: 1,
  authorization: 1,
  authorized: 1,
  authors: 1,
  auto: 1,
  automated: 1,
  automatic: 1,
  automatically: 1,
  automation: 1,
  automobile: 1,
  automobiles: 1,
  automotive: 1,
  autos: 1,
  autumn: 1,
  av: 1,
  availability: 1,
  available: 1,
  avatar: 1,
  ave: 1,
  avenue: 1,
  average: 1,
  avg: 1,
  avi: 1,
  aviation: 1,
  avoid: 1,
  avoiding: 1,
  avon: 1,
  aw: 1,
  award: 1,
  awarded: 1,
  awards: 1,
  aware: 1,
  awareness: 1,
  away: 1,
  awesome: 1,
  awful: 1,
  axis: 1,
  aye: 1,
  az: 1,
  azerbaijan: 1,
  b: 1,
  ba: 1,
  babe: 1,
  babes: 1,
  babies: 1,
  baby: 1,
  bachelor: 1,
  back: 1,
  backed: 1,
  background: 1,
  backgrounds: 1,
  backing: 1,
  backup: 1,
  bacon: 1,
  bacteria: 1,
  bacterial: 1,
  bad: 1,
  badge: 1,
  badly: 1,
  bag: 1,
  baghdad: 1,
  bags: 1,
  bahamas: 1,
  bahrain: 1,
  bailey: 1,
  baker: 1,
  baking: 1,
  balance: 1,
  balanced: 1,
  bald: 1,
  bali: 1,
  ball: 1,
  ballet: 1,
  balloon: 1,
  ballot: 1,
  balls: 1,
  baltimore: 1,
  ban: 1,
  banana: 1,
  band: 1,
  bands: 1,
  bandwidth: 1,
  bang: 1,
  bangbus: 1,
  bangkok: 1,
  bangladesh: 1,
  bank: 1,
  banking: 1,
  bankruptcy: 1,
  banks: 1,
  banned: 1,
  banner: 1,
  banners: 1,
  baptist: 1,
  bar: 1,
  barbados: 1,
  barbara: 1,
  barbie: 1,
  barcelona: 1,
  bare: 1,
  barely: 1,
  bargain: 1,
  bargains: 1,
  barn: 1,
  barnes: 1,
  barrel: 1,
  barrier: 1,
  barriers: 1,
  barry: 1,
  bars: 1,
  base: 1,
  baseball: 1,
  based: 1,
  baseline: 1,
  basement: 1,
  basename: 1,
  bases: 1,
  basic: 1,
  basically: 1,
  basics: 1,
  basin: 1,
  basis: 1,
  basket: 1,
  basketball: 1,
  baskets: 1,
  bass: 1,
  bat: 1,
  batch: 1,
  bath: 1,
  bathroom: 1,
  bathrooms: 1,
  baths: 1,
  batman: 1,
  batteries: 1,
  battery: 1,
  battle: 1,
  battlefield: 1,
  bay: 1,
  bb: 1,
  bbc: 1,
  bbs: 1,
  bbw: 1,
  bc: 1,
  bd: 1,
  bdsm: 1,
  be: 1,
  beach: 1,
  beaches: 1,
  beads: 1,
  beam: 1,
  bean: 1,
  beans: 1,
  bear: 1,
  bearing: 1,
  bears: 1,
  beast: 1,
  beastality: 1,
  beastiality: 1,
  beat: 1,
  beatles: 1,
  beats: 1,
  beautiful: 1,
  beautifully: 1,
  beauty: 1,
  beaver: 1,
  became: 1,
  because: 1,
  become: 1,
  becomes: 1,
  becoming: 1,
  bed: 1,
  bedding: 1,
  bedford: 1,
  bedroom: 1,
  bedrooms: 1,
  beds: 1,
  bee: 1,
  beef: 1,
  been: 1,
  beer: 1,
  before: 1,
  began: 1,
  begin: 1,
  beginner: 1,
  beginners: 1,
  beginning: 1,
  begins: 1,
  begun: 1,
  behalf: 1,
  behavior: 1,
  behavioral: 1,
  behaviour: 1,
  behind: 1,
  beijing: 1,
  being: 1,
  beings: 1,
  belarus: 1,
  belfast: 1,
  belgium: 1,
  belief: 1,
  beliefs: 1,
  believe: 1,
  believed: 1,
  believes: 1,
  belize: 1,
  belkin: 1,
  bell: 1,
  belle: 1,
  belly: 1,
  belong: 1,
  belongs: 1,
  below: 1,
  belt: 1,
  belts: 1,
  ben: 1,
  bench: 1,
  benchmark: 1,
  bend: 1,
  beneath: 1,
  beneficial: 1,
  benefit: 1,
  benefits: 1,
  benjamin: 1,
  bennett: 1,
  bent: 1,
  benz: 1,
  berkeley: 1,
  berlin: 1,
  bermuda: 1,
  bernard: 1,
  berry: 1,
  beside: 1,
  besides: 1,
  best: 1,
  bestiality: 1,
  bestsellers: 1,
  bet: 1,
  beta: 1,
  beth: 1,
  better: 1,
  betting: 1,
  betty: 1,
  between: 1,
  beverage: 1,
  beverages: 1,
  beverly: 1,
  beyond: 1,
  bg: 1,
  bhutan: 1,
  bi: 1,
  bias: 1,
  bible: 1,
  biblical: 1,
  bibliographic: 1,
  bibliography: 1,
  bicycle: 1,
  bid: 1,
  bidder: 1,
  bidding: 1,
  bids: 1,
  big: 1,
  bigger: 1,
  biggest: 1,
  bike: 1,
  bikes: 1,
  bikini: 1,
  bill: 1,
  billing: 1,
  billion: 1,
  bills: 1,
  billy: 1,
  bin: 1,
  binary: 1,
  bind: 1,
  binding: 1,
  bingo: 1,
  bio: 1,
  biodiversity: 1,
  biographies: 1,
  biography: 1,
  biol: 1,
  biological: 1,
  biology: 1,
  bios: 1,
  biotechnology: 1,
  bird: 1,
  birds: 1,
  birmingham: 1,
  birth: 1,
  birthday: 1,
  bishop: 1,
  bit: 1,
  bitch: 1,
  bite: 1,
  bits: 1,
  biz: 1,
  bizarre: 1,
  bizrate: 1,
  bk: 1,
  bl: 1,
  black: 1,
  blackberry: 1,
  blackjack: 1,
  blacks: 1,
  blade: 1,
  blades: 1,
  blah: 1,
  blair: 1,
  blake: 1,
  blame: 1,
  blank: 1,
  blanket: 1,
  blast: 1,
  bleeding: 1,
  blend: 1,
  bless: 1,
  blessed: 1,
  blind: 1,
  blink: 1,
  block: 1,
  blocked: 1,
  blocking: 1,
  blocks: 1,
  blog: 1,
  blogger: 1,
  bloggers: 1,
  blogging: 1,
  blogs: 1,
  blond: 1,
  blonde: 1,
  blood: 1,
  bloody: 1,
  bloom: 1,
  bloomberg: 1,
  blow: 1,
  blowing: 1,
  blowjob: 1,
  blowjobs: 1,
  blue: 1,
  blues: 1,
  bluetooth: 1,
  blvd: 1,
  bm: 1,
  bmw: 1,
  bo: 1,
  board: 1,
  boards: 1,
  boat: 1,
  boating: 1,
  boats: 1,
  bob: 1,
  bobby: 1,
  boc: 1,
  bodies: 1,
  body: 1,
  bold: 1,
  bolivia: 1,
  bolt: 1,
  bomb: 1,
  bon: 1,
  bond: 1,
  bondage: 1,
  bonds: 1,
  bone: 1,
  bones: 1,
  bonus: 1,
  boob: 1,
  boobs: 1,
  book: 1,
  booking: 1,
  bookings: 1,
  bookmark: 1,
  bookmarks: 1,
  books: 1,
  bookstore: 1,
  bool: 1,
  boolean: 1,
  boom: 1,
  boost: 1,
  boot: 1,
  booth: 1,
  boots: 1,
  booty: 1,
  border: 1,
  borders: 1,
  bored: 1,
  boring: 1,
  born: 1,
  borough: 1,
  bosnia: 1,
  boss: 1,
  boston: 1,
  both: 1,
  bother: 1,
  botswana: 1,
  bottle: 1,
  bottles: 1,
  bottom: 1,
  bought: 1,
  boulder: 1,
  boulevard: 1,
  bound: 1,
  boundaries: 1,
  boundary: 1,
  bouquet: 1,
  boutique: 1,
  bow: 1,
  bowl: 1,
  bowling: 1,
  box: 1,
  boxed: 1,
  boxes: 1,
  boxing: 1,
  boy: 1,
  boys: 1,
  bp: 1,
  br: 1,
  bra: 1,
  bracelet: 1,
  bracelets: 1,
  bracket: 1,
  brad: 1,
  bradford: 1,
  bradley: 1,
  brain: 1,
  brake: 1,
  brakes: 1,
  branch: 1,
  branches: 1,
  brand: 1,
  brandon: 1,
  brands: 1,
  bras: 1,
  brass: 1,
  brave: 1,
  brazil: 1,
  brazilian: 1,
  breach: 1,
  bread: 1,
  break: 1,
  breakdown: 1,
  breakfast: 1,
  breaking: 1,
  breaks: 1,
  breast: 1,
  breasts: 1,
  breath: 1,
  breathing: 1,
  breed: 1,
  breeding: 1,
  breeds: 1,
  brian: 1,
  brick: 1,
  bridal: 1,
  bride: 1,
  bridge: 1,
  bridges: 1,
  brief: 1,
  briefing: 1,
  briefly: 1,
  briefs: 1,
  bright: 1,
  brighton: 1,
  brilliant: 1,
  bring: 1,
  bringing: 1,
  brings: 1,
  brisbane: 1,
  bristol: 1,
  britain: 1,
  britannica: 1,
  british: 1,
  britney: 1,
  broad: 1,
  broadband: 1,
  broadcast: 1,
  broadcasting: 1,
  broader: 1,
  broadway: 1,
  brochure: 1,
  brochures: 1,
  broke: 1,
  broken: 1,
  broker: 1,
  brokers: 1,
  bronze: 1,
  brook: 1,
  brooklyn: 1,
  brooks: 1,
  brother: 1,
  brothers: 1,
  brought: 1,
  brown: 1,
  browse: 1,
  browser: 1,
  browsers: 1,
  browsing: 1,
  bruce: 1,
  brunei: 1,
  brunette: 1,
  brunswick: 1,
  brush: 1,
  brussels: 1,
  brutal: 1,
  bryan: 1,
  bryant: 1,
  bs: 1,
  bt: 1,
  bubble: 1,
  buck: 1,
  bucks: 1,
  budapest: 1,
  buddy: 1,
  budget: 1,
  budgets: 1,
  buf: 1,
  buffalo: 1,
  buffer: 1,
  bufing: 1,
  bug: 1,
  bugs: 1,
  build: 1,
  builder: 1,
  builders: 1,
  building: 1,
  buildings: 1,
  builds: 1,
  built: 1,
  bukkake: 1,
  bulgaria: 1,
  bulgarian: 1,
  bulk: 1,
  bull: 1,
  bullet: 1,
  bulletin: 1,
  bumper: 1,
  bunch: 1,
  bundle: 1,
  bunny: 1,
  burden: 1,
  bureau: 1,
  buried: 1,
  burke: 1,
  burlington: 1,
  burn: 1,
  burner: 1,
  burning: 1,
  burns: 1,
  burst: 1,
  burton: 1,
  bus: 1,
  buses: 1,
  bush: 1,
  business: 1,
  businesses: 1,
  busty: 1,
  busy: 1,
  but: 1,
  butler: 1,
  butt: 1,
  butter: 1,
  butterfly: 1,
  button: 1,
  buttons: 1,
  butts: 1,
  buy: 1,
  buyer: 1,
  buyers: 1,
  buying: 1,
  buys: 1,
  buzz: 1,
  bw: 1,
  by: 1,
  bye: 1,
  byte: 1,
  bytes: 1,
  c: 1,
  ca: 1,
  cab: 1,
  cabin: 1,
  cabinet: 1,
  cabinets: 1,
  cable: 1,
  cables: 1,
  cache: 1,
  cached: 1,
  cad: 1,
  cadillac: 1,
  cafe: 1,
  cage: 1,
  cake: 1,
  cakes: 1,
  cal: 1,
  calcium: 1,
  calculate: 1,
  calculated: 1,
  calculation: 1,
  calculations: 1,
  calculator: 1,
  calculators: 1,
  calendar: 1,
  calendars: 1,
  calgary: 1,
  calibration: 1,
  california: 1,
  call: 1,
  called: 1,
  calling: 1,
  calls: 1,
  calm: 1,
  calvin: 1,
  cam: 1,
  cambodia: 1,
  cambridge: 1,
  camcorder: 1,
  camcorders: 1,
  came: 1,
  camel: 1,
  camera: 1,
  cameras: 1,
  cameron: 1,
  cameroon: 1,
  camp: 1,
  campaign: 1,
  campaigns: 1,
  campbell: 1,
  camping: 1,
  camps: 1,
  campus: 1,
  cams: 1,
  can: 1,
  canada: 1,
  canadian: 1,
  canal: 1,
  canberra: 1,
  cancel: 1,
  cancellation: 1,
  cancelled: 1,
  cancer: 1,
  candidate: 1,
  candidates: 1,
  candle: 1,
  candles: 1,
  candy: 1,
  cannon: 1,
  canon: 1,
  cant: 1,
  canvas: 1,
  canyon: 1,
  cap: 1,
  capabilities: 1,
  capability: 1,
  capable: 1,
  capacity: 1,
  cape: 1,
  capital: 1,
  capitol: 1,
  caps: 1,
  captain: 1,
  capture: 1,
  captured: 1,
  car: 1,
  carb: 1,
  carbon: 1,
  card: 1,
  cardiac: 1,
  cardiff: 1,
  cardiovascular: 1,
  cards: 1,
  care: 1,
  career: 1,
  careers: 1,
  careful: 1,
  carefully: 1,
  carey: 1,
  cargo: 1,
  caribbean: 1,
  caring: 1,
  carl: 1,
  carlo: 1,
  carlos: 1,
  carmen: 1,
  carnival: 1,
  carol: 1,
  carolina: 1,
  caroline: 1,
  carpet: 1,
  carried: 1,
  carrier: 1,
  carriers: 1,
  carries: 1,
  carroll: 1,
  carry: 1,
  carrying: 1,
  cars: 1,
  cart: 1,
  carter: 1,
  cartoon: 1,
  cartoons: 1,
  cartridge: 1,
  cartridges: 1,
  cas: 1,
  casa: 1,
  case: 1,
  cases: 1,
  casey: 1,
  cash: 1,
  cashiers: 1,
  casino: 1,
  casinos: 1,
  casio: 1,
  cassette: 1,
  cast: 1,
  casting: 1,
  castle: 1,
  casual: 1,
  cat: 1,
  catalog: 1,
  catalogs: 1,
  catalogue: 1,
  catalyst: 1,
  catch: 1,
  categories: 1,
  category: 1,
  catering: 1,
  cathedral: 1,
  catherine: 1,
  catholic: 1,
  cats: 1,
  cattle: 1,
  caught: 1,
  cause: 1,
  caused: 1,
  causes: 1,
  causing: 1,
  caution: 1,
  cave: 1,
  cayman: 1,
  cb: 1,
  cbs: 1,
  cc: 1,
  ccd: 1,
  cd: 1,
  cdna: 1,
  cds: 1,
  cdt: 1,
  ce: 1,
  cedar: 1,
  ceiling: 1,
  celebrate: 1,
  celebration: 1,
  celebrities: 1,
  celebrity: 1,
  celebs: 1,
  cell: 1,
  cells: 1,
  cellular: 1,
  celtic: 1,
  cement: 1,
  cemetery: 1,
  census: 1,
  cent: 1,
  center: 1,
  centered: 1,
  centers: 1,
  central: 1,
  centre: 1,
  centres: 1,
  cents: 1,
  centuries: 1,
  century: 1,
  ceo: 1,
  ceramic: 1,
  ceremony: 1,
  certain: 1,
  certainly: 1,
  certificate: 1,
  certificates: 1,
  certification: 1,
  certified: 1,
  cet: 1,
  cf: 1,
  cfr: 1,
  cg: 1,
  cgi: 1,
  ch: 1,
  chad: 1,
  chain: 1,
  chains: 1,
  chair: 1,
  chairman: 1,
  chairs: 1,
  challenge: 1,
  challenged: 1,
  challenges: 1,
  challenging: 1,
  chamber: 1,
  chambers: 1,
  champagne: 1,
  champion: 1,
  champions: 1,
  championship: 1,
  championships: 1,
  chan: 1,
  chance: 1,
  chancellor: 1,
  chances: 1,
  change: 1,
  changed: 1,
  changelog: 1,
  changes: 1,
  changing: 1,
  channel: 1,
  channels: 1,
  chaos: 1,
  chapel: 1,
  chapter: 1,
  chapters: 1,
  char: 1,
  character: 1,
  characteristic: 1,
  characteristics: 1,
  characterization: 1,
  characterized: 1,
  characters: 1,
  charge: 1,
  charged: 1,
  charger: 1,
  chargers: 1,
  charges: 1,
  charging: 1,
  charitable: 1,
  charity: 1,
  charles: 1,
  charleston: 1,
  charlie: 1,
  charlotte: 1,
  charm: 1,
  charming: 1,
  charms: 1,
  chart: 1,
  charter: 1,
  charts: 1,
  chase: 1,
  chassis: 1,
  chat: 1,
  cheap: 1,
  cheaper: 1,
  cheapest: 1,
  cheat: 1,
  cheats: 1,
  check: 1,
  checked: 1,
  checking: 1,
  checklist: 1,
  checkout: 1,
  checks: 1,
  cheers: 1,
  cheese: 1,
  chef: 1,
  chelsea: 1,
  chem: 1,
  chemical: 1,
  chemicals: 1,
  chemistry: 1,
  chen: 1,
  cheque: 1,
  cherry: 1,
  chess: 1,
  chest: 1,
  chester: 1,
  chevrolet: 1,
  chevy: 1,
  chi: 1,
  chicago: 1,
  chick: 1,
  chicken: 1,
  chicks: 1,
  chief: 1,
  child: 1,
  childhood: 1,
  children: 1,
  childrens: 1,
  chile: 1,
  china: 1,
  chinese: 1,
  chip: 1,
  chips: 1,
  cho: 1,
  chocolate: 1,
  choice: 1,
  choices: 1,
  choir: 1,
  cholesterol: 1,
  choose: 1,
  choosing: 1,
  chorus: 1,
  chose: 1,
  chosen: 1,
  chris: 1,
  christ: 1,
  christian: 1,
  christianity: 1,
  christians: 1,
  christina: 1,
  christine: 1,
  christmas: 1,
  christopher: 1,
  chrome: 1,
  chronic: 1,
  chronicle: 1,
  chronicles: 1,
  chrysler: 1,
  chubby: 1,
  chuck: 1,
  church: 1,
  churches: 1,
  ci: 1,
  cia: 1,
  cialis: 1,
  ciao: 1,
  cigarette: 1,
  cigarettes: 1,
  cincinnati: 1,
  cindy: 1,
  cinema: 1,
  cingular: 1,
  cio: 1,
  cir: 1,
  circle: 1,
  circles: 1,
  circuit: 1,
  circuits: 1,
  circular: 1,
  circulation: 1,
  circumstances: 1,
  circus: 1,
  cisco: 1,
  citation: 1,
  citations: 1,
  cite: 1,
  cited: 1,
  cities: 1,
  citizen: 1,
  citizens: 1,
  citizenship: 1,
  city: 1,
  citysearch: 1,
  civic: 1,
  civil: 1,
  civilian: 1,
  civilization: 1,
  cj: 1,
  cl: 1,
  claim: 1,
  claimed: 1,
  claims: 1,
  claire: 1,
  clan: 1,
  clara: 1,
  clarity: 1,
  clark: 1,
  clarke: 1,
  class: 1,
  classes: 1,
  classic: 1,
  classical: 1,
  classics: 1,
  classification: 1,
  classified: 1,
  classifieds: 1,
  classroom: 1,
  clause: 1,
  clay: 1,
  clean: 1,
  cleaner: 1,
  cleaners: 1,
  cleaning: 1,
  cleanup: 1,
  clear: 1,
  clearance: 1,
  cleared: 1,
  clearing: 1,
  clearly: 1,
  clerk: 1,
  cleveland: 1,
  click: 1,
  clicking: 1,
  clicks: 1,
  client: 1,
  clients: 1,
  cliff: 1,
  climate: 1,
  climb: 1,
  climbing: 1,
  clinic: 1,
  clinical: 1,
  clinics: 1,
  clinton: 1,
  clip: 1,
  clips: 1,
  clock: 1,
  clocks: 1,
  clone: 1,
  close: 1,
  closed: 1,
  closely: 1,
  closer: 1,
  closes: 1,
  closest: 1,
  closing: 1,
  closure: 1,
  cloth: 1,
  clothes: 1,
  clothing: 1,
  cloud: 1,
  clouds: 1,
  cloudy: 1,
  club: 1,
  clubs: 1,
  cluster: 1,
  clusters: 1,
  cm: 1,
  cms: 1,
  cn: 1,
  cnet: 1,
  cnn: 1,
  co: 1,
  coach: 1,
  coaches: 1,
  coaching: 1,
  coal: 1,
  coalition: 1,
  coast: 1,
  coastal: 1,
  coat: 1,
  coated: 1,
  coating: 1,
  cock: 1,
  cocks: 1,
  cocktail: 1,
  cod: 1,
  code: 1,
  codes: 1,
  coding: 1,
  coffee: 1,
  cognitive: 1,
  cohen: 1,
  coin: 1,
  coins: 1,
  col: 1,
  cold: 1,
  cole: 1,
  coleman: 1,
  colin: 1,
  collaboration: 1,
  collaborative: 1,
  collapse: 1,
  collar: 1,
  colleague: 1,
  colleagues: 1,
  collect: 1,
  collectables: 1,
  collected: 1,
  collectible: 1,
  collectibles: 1,
  collecting: 1,
  collection: 1,
  collections: 1,
  collective: 1,
  collector: 1,
  collectors: 1,
  college: 1,
  colleges: 1,
  collins: 1,
  cologne: 1,
  colombia: 1,
  colon: 1,
  colonial: 1,
  colony: 1,
  color: 1,
  colorado: 1,
  colored: 1,
  colors: 1,
  colour: 1,
  colours: 1,
  columbia: 1,
  columbus: 1,
  column: 1,
  columnists: 1,
  columns: 1,
  com: 1,
  combat: 1,
  combination: 1,
  combinations: 1,
  combine: 1,
  combined: 1,
  combines: 1,
  combining: 1,
  combo: 1,
  come: 1,
  comedy: 1,
  comes: 1,
  comfort: 1,
  comfortable: 1,
  comic: 1,
  comics: 1,
  coming: 1,
  comm: 1,
  command: 1,
  commander: 1,
  commands: 1,
  comment: 1,
  commentary: 1,
  commented: 1,
  comments: 1,
  commerce: 1,
  commercial: 1,
  commission: 1,
  commissioner: 1,
  commissioners: 1,
  commissions: 1,
  commit: 1,
  commitment: 1,
  commitments: 1,
  committed: 1,
  committee: 1,
  committees: 1,
  commodities: 1,
  commodity: 1,
  common: 1,
  commonly: 1,
  commons: 1,
  commonwealth: 1,
  communicate: 1,
  communication: 1,
  communications: 1,
  communist: 1,
  communities: 1,
  community: 1,
  comp: 1,
  compact: 1,
  companies: 1,
  companion: 1,
  company: 1,
  compaq: 1,
  comparable: 1,
  comparative: 1,
  compare: 1,
  compared: 1,
  comparing: 1,
  comparison: 1,
  comparisons: 1,
  compatibility: 1,
  compatible: 1,
  compensation: 1,
  compete: 1,
  competent: 1,
  competing: 1,
  competition: 1,
  competitions: 1,
  competitive: 1,
  competitors: 1,
  compilation: 1,
  compile: 1,
  compiled: 1,
  compiler: 1,
  complaint: 1,
  complaints: 1,
  complement: 1,
  complete: 1,
  completed: 1,
  completely: 1,
  completing: 1,
  completion: 1,
  complex: 1,
  complexity: 1,
  compliance: 1,
  compliant: 1,
  complicated: 1,
  complications: 1,
  complimentary: 1,
  comply: 1,
  component: 1,
  components: 1,
  composed: 1,
  composer: 1,
  composite: 1,
  composition: 1,
  compound: 1,
  compounds: 1,
  comprehensive: 1,
  compressed: 1,
  compression: 1,
  compromise: 1,
  computation: 1,
  computational: 1,
  compute: 1,
  computed: 1,
  computer: 1,
  computers: 1,
  computing: 1,
  con: 1,
  concentrate: 1,
  concentration: 1,
  concentrations: 1,
  concept: 1,
  concepts: 1,
  conceptual: 1,
  concern: 1,
  concerned: 1,
  concerning: 1,
  concerns: 1,
  concert: 1,
  concerts: 1,
  conclude: 1,
  concluded: 1,
  conclusion: 1,
  conclusions: 1,
  concord: 1,
  concrete: 1,
  condition: 1,
  conditional: 1,
  conditioning: 1,
  conditions: 1,
  condo: 1,
  condos: 1,
  conduct: 1,
  conducted: 1,
  conducting: 1,
  conf: 1,
  conference: 1,
  conferences: 1,
  conferencing: 1,
  confidence: 1,
  confident: 1,
  confidential: 1,
  confidentiality: 1,
  config: 1,
  configuration: 1,
  configurations: 1,
  configure: 1,
  configured: 1,
  configuring: 1,
  confirm: 1,
  confirmation: 1,
  confirmed: 1,
  conflict: 1,
  conflicts: 1,
  confused: 1,
  confusion: 1,
  congo: 1,
  congratulations: 1,
  congress: 1,
  congressional: 1,
  conjunction: 1,
  connect: 1,
  connected: 1,
  connecticut: 1,
  connecting: 1,
  connection: 1,
  connections: 1,
  connectivity: 1,
  connector: 1,
  connectors: 1,
  cons: 1,
  conscious: 1,
  consciousness: 1,
  consecutive: 1,
  consensus: 1,
  consent: 1,
  consequence: 1,
  consequences: 1,
  consequently: 1,
  conservation: 1,
  conservative: 1,
  consider: 1,
  considerable: 1,
  consideration: 1,
  considerations: 1,
  considered: 1,
  considering: 1,
  considers: 1,
  consist: 1,
  consistency: 1,
  consistent: 1,
  consistently: 1,
  consisting: 1,
  consists: 1,
  console: 1,
  consoles: 1,
  consolidated: 1,
  consolidation: 1,
  consortium: 1,
  conspiracy: 1,
  const: 1,
  constant: 1,
  constantly: 1,
  constitute: 1,
  constitutes: 1,
  constitution: 1,
  constitutional: 1,
  constraint: 1,
  constraints: 1,
  construct: 1,
  constructed: 1,
  construction: 1,
  consult: 1,
  consultancy: 1,
  consultant: 1,
  consultants: 1,
  consultation: 1,
  consulting: 1,
  consumer: 1,
  consumers: 1,
  consumption: 1,
  contact: 1,
  contacted: 1,
  contacting: 1,
  contacts: 1,
  contain: 1,
  contained: 1,
  container: 1,
  containers: 1,
  containing: 1,
  contains: 1,
  contamination: 1,
  contemporary: 1,
  content: 1,
  contents: 1,
  contest: 1,
  contests: 1,
  context: 1,
  continent: 1,
  continental: 1,
  continually: 1,
  continue: 1,
  continued: 1,
  continues: 1,
  continuing: 1,
  continuity: 1,
  continuous: 1,
  continuously: 1,
  contract: 1,
  contracting: 1,
  contractor: 1,
  contractors: 1,
  contracts: 1,
  contrary: 1,
  contrast: 1,
  contribute: 1,
  contributed: 1,
  contributing: 1,
  contribution: 1,
  contributions: 1,
  contributor: 1,
  contributors: 1,
  control: 1,
  controlled: 1,
  controller: 1,
  controllers: 1,
  controlling: 1,
  controls: 1,
  controversial: 1,
  controversy: 1,
  convenience: 1,
  convenient: 1,
  convention: 1,
  conventional: 1,
  conventions: 1,
  convergence: 1,
  conversation: 1,
  conversations: 1,
  conversion: 1,
  convert: 1,
  converted: 1,
  converter: 1,
  convertible: 1,
  convicted: 1,
  conviction: 1,
  convinced: 1,
  cook: 1,
  cookbook: 1,
  cooked: 1,
  cookie: 1,
  cookies: 1,
  cooking: 1,
  cool: 1,
  cooler: 1,
  cooling: 1,
  cooper: 1,
  cooperation: 1,
  cooperative: 1,
  coordinate: 1,
  coordinated: 1,
  coordinates: 1,
  coordination: 1,
  coordinator: 1,
  cop: 1,
  cope: 1,
  copied: 1,
  copies: 1,
  copper: 1,
  copy: 1,
  copying: 1,
  copyright: 1,
  copyrighted: 1,
  copyrights: 1,
  coral: 1,
  cord: 1,
  cordless: 1,
  core: 1,
  cork: 1,
  corn: 1,
  cornell: 1,
  corner: 1,
  corners: 1,
  cornwall: 1,
  corp: 1,
  corporate: 1,
  corporation: 1,
  corporations: 1,
  corps: 1,
  corpus: 1,
  correct: 1,
  corrected: 1,
  correction: 1,
  corrections: 1,
  correctly: 1,
  correlation: 1,
  correspondence: 1,
  corresponding: 1,
  corruption: 1,
  cos: 1,
  cosmetic: 1,
  cosmetics: 1,
  cost: 1,
  costa: 1,
  costs: 1,
  costume: 1,
  costumes: 1,
  cottage: 1,
  cottages: 1,
  cotton: 1,
  could: 1,
  council: 1,
  councils: 1,
  counsel: 1,
  counseling: 1,
  count: 1,
  counted: 1,
  counter: 1,
  counters: 1,
  counties: 1,
  counting: 1,
  countries: 1,
  country: 1,
  counts: 1,
  county: 1,
  couple: 1,
  coupled: 1,
  couples: 1,
  coupon: 1,
  coupons: 1,
  courage: 1,
  courier: 1,
  course: 1,
  courses: 1,
  court: 1,
  courtesy: 1,
  courts: 1,
  cove: 1,
  cover: 1,
  coverage: 1,
  covered: 1,
  covering: 1,
  covers: 1,
  cow: 1,
  cowboy: 1,
  cox: 1,
  cp: 1,
  cpu: 1,
  cr: 1,
  crack: 1,
  cradle: 1,
  craft: 1,
  crafts: 1,
  craig: 1,
  crap: 1,
  craps: 1,
  crash: 1,
  crawford: 1,
  crazy: 1,
  cream: 1,
  create: 1,
  created: 1,
  creates: 1,
  creating: 1,
  creation: 1,
  creations: 1,
  creative: 1,
  creativity: 1,
  creator: 1,
  creature: 1,
  creatures: 1,
  credit: 1,
  credits: 1,
  creek: 1,
  crest: 1,
  crew: 1,
  cricket: 1,
  crime: 1,
  crimes: 1,
  criminal: 1,
  crisis: 1,
  criteria: 1,
  criterion: 1,
  critical: 1,
  criticism: 1,
  critics: 1,
  crm: 1,
  croatia: 1,
  crop: 1,
  crops: 1,
  cross: 1,
  crossing: 1,
  crossword: 1,
  crowd: 1,
  crown: 1,
  crucial: 1,
  crude: 1,
  cruise: 1,
  cruises: 1,
  cruz: 1,
  cry: 1,
  crystal: 1,
  cs: 1,
  css: 1,
  cst: 1,
  ct: 1,
  ctrl: 1,
  cu: 1,
  cuba: 1,
  cube: 1,
  cubic: 1,
  cuisine: 1,
  cult: 1,
  cultural: 1,
  culture: 1,
  cultures: 1,
  cum: 1,
  cumshot: 1,
  cumshots: 1,
  cumulative: 1,
  cunt: 1,
  cup: 1,
  cups: 1,
  cure: 1,
  curious: 1,
  currencies: 1,
  currency: 1,
  current: 1,
  currently: 1,
  curriculum: 1,
  cursor: 1,
  curtis: 1,
  curve: 1,
  curves: 1,
  custody: 1,
  custom: 1,
  customer: 1,
  customers: 1,
  customise: 1,
  customize: 1,
  customized: 1,
  customs: 1,
  cut: 1,
  cute: 1,
  cuts: 1,
  cutting: 1,
  cv: 1,
  cvs: 1,
  cw: 1,
  cyber: 1,
  cycle: 1,
  cycles: 1,
  cycling: 1,
  cylinder: 1,
  cyprus: 1,
  cz: 1,
  czech: 1
};

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon10000", function() { return TheMostCommon10000; });
// https://englishgrammarhere.com/vocabulary/10000-most-common-words-in-english-part-5/
const TheMostCommon10000 = {
  d: 1,
  da: 1,
  dad: 1,
  daddy: 1,
  daily: 1,
  dairy: 1,
  daisy: 1,
  dakota: 1,
  dale: 1,
  dallas: 1,
  dam: 1,
  damage: 1,
  damaged: 1,
  damages: 1,
  dame: 1,
  damn: 1,
  dan: 1,
  dana: 1,
  dance: 1,
  dancing: 1,
  danger: 1,
  dangerous: 1,
  daniel: 1,
  danish: 1,
  danny: 1,
  dans: 1,
  dare: 1,
  dark: 1,
  darkness: 1,
  darwin: 1,
  das: 1,
  dash: 1,
  dat: 1,
  data: 1,
  database: 1,
  databases: 1,
  date: 1,
  dated: 1,
  dates: 1,
  dating: 1,
  daughter: 1,
  daughters: 1,
  dave: 1,
  david: 1,
  davidson: 1,
  davis: 1,
  dawn: 1,
  day: 1,
  days: 1,
  dayton: 1,
  db: 1,
  dc: 1,
  dd: 1,
  ddr: 1,
  de: 1,
  dead: 1,
  deadline: 1,
  deadly: 1,
  deaf: 1,
  deal: 1,
  dealer: 1,
  dealers: 1,
  dealing: 1,
  deals: 1,
  dealt: 1,
  dealtime: 1,
  dean: 1,
  dear: 1,
  death: 1,
  deaths: 1,
  debate: 1,
  debian: 1,
  deborah: 1,
  debt: 1,
  debug: 1,
  debut: 1,
  dec: 1,
  decade: 1,
  decades: 1,
  december: 1,
  decent: 1,
  decide: 1,
  decided: 1,
  decimal: 1,
  decision: 1,
  decisions: 1,
  deck: 1,
  declaration: 1,
  declare: 1,
  declared: 1,
  decline: 1,
  declined: 1,
  decor: 1,
  decorating: 1,
  decorative: 1,
  decrease: 1,
  decreased: 1,
  dedicated: 1,
  dee: 1,
  deemed: 1,
  deep: 1,
  deeper: 1,
  deeply: 1,
  deer: 1,
  def: 1,
  default: 1,
  defeat: 1,
  defects: 1,
  defence: 1,
  defend: 1,
  defendant: 1,
  defense: 1,
  defensive: 1,
  deferred: 1,
  deficit: 1,
  define: 1,
  defined: 1,
  defines: 1,
  defining: 1,
  definitely: 1,
  definition: 1,
  definitions: 1,
  degree: 1,
  degrees: 1,
  del: 1,
  delaware: 1,
  delay: 1,
  delayed: 1,
  delays: 1,
  delegation: 1,
  delete: 1,
  deleted: 1,
  delhi: 1,
  delicious: 1,
  delight: 1,
  deliver: 1,
  delivered: 1,
  delivering: 1,
  delivers: 1,
  delivery: 1,
  dell: 1,
  delta: 1,
  deluxe: 1,
  dem: 1,
  demand: 1,
  demanding: 1,
  demands: 1,
  demo: 1,
  democracy: 1,
  democrat: 1,
  democratic: 1,
  democrats: 1,
  demographic: 1,
  demonstrate: 1,
  demonstrated: 1,
  demonstrates: 1,
  demonstration: 1,
  den: 1,
  denial: 1,
  denied: 1,
  denmark: 1,
  dennis: 1,
  dense: 1,
  density: 1,
  dental: 1,
  dentists: 1,
  denver: 1,
  deny: 1,
  department: 1,
  departmental: 1,
  departments: 1,
  departure: 1,
  depend: 1,
  dependence: 1,
  dependent: 1,
  depending: 1,
  depends: 1,
  deployment: 1,
  deposit: 1,
  deposits: 1,
  depot: 1,
  depression: 1,
  dept: 1,
  depth: 1,
  deputy: 1,
  der: 1,
  derby: 1,
  derek: 1,
  derived: 1,
  des: 1,
  descending: 1,
  describe: 1,
  described: 1,
  describes: 1,
  describing: 1,
  description: 1,
  descriptions: 1,
  desert: 1,
  deserve: 1,
  design: 1,
  designated: 1,
  designation: 1,
  designed: 1,
  designer: 1,
  designers: 1,
  designing: 1,
  designs: 1,
  desirable: 1,
  desire: 1,
  desired: 1,
  desk: 1,
  desktop: 1,
  desktops: 1,
  desperate: 1,
  despite: 1,
  destination: 1,
  destinations: 1,
  destiny: 1,
  destroy: 1,
  destroyed: 1,
  destruction: 1,
  detail: 1,
  detailed: 1,
  details: 1,
  detect: 1,
  detected: 1,
  detection: 1,
  detective: 1,
  detector: 1,
  determination: 1,
  determine: 1,
  determined: 1,
  determines: 1,
  determining: 1,
  detroit: 1,
  deutsch: 1,
  deutsche: 1,
  deutschland: 1,
  dev: 1,
  devel: 1,
  develop: 1,
  developed: 1,
  developer: 1,
  developers: 1,
  developing: 1,
  development: 1,
  developmental: 1,
  developments: 1,
  develops: 1,
  deviant: 1,
  deviation: 1,
  device: 1,
  devices: 1,
  devil: 1,
  devon: 1,
  devoted: 1,
  df: 1,
  dg: 1,
  dh: 1,
  di: 1,
  diabetes: 1,
  diagnosis: 1,
  diagnostic: 1,
  diagram: 1,
  dial: 1,
  dialog: 1,
  dialogue: 1,
  diameter: 1,
  diamond: 1,
  diamonds: 1,
  diana: 1,
  diane: 1,
  diary: 1,
  dice: 1,
  dick: 1,
  dicke: 1,
  dicks: 1,
  dictionaries: 1,
  dictionary: 1,
  did: 1,
  die: 1,
  died: 1,
  diego: 1,
  dies: 1,
  diesel: 1,
  diet: 1,
  dietary: 1,
  diff: 1,
  differ: 1,
  difference: 1,
  differences: 1,
  different: 1,
  differential: 1,
  differently: 1,
  difficult: 1,
  difficulties: 1,
  difficulty: 1,
  diffs: 1,
  dig: 1,
  digest: 1,
  digit: 1,
  digital: 1,
  dildo: 1,
  dildos: 1,
  dim: 1,
  dimension: 1,
  dimensional: 1,
  dimensions: 1,
  dining: 1,
  dinner: 1,
  dip: 1,
  diploma: 1,
  dir: 1,
  direct: 1,
  directed: 1,
  direction: 1,
  directions: 1,
  directive: 1,
  directly: 1,
  director: 1,
  directories: 1,
  directors: 1,
  directory: 1,
  dirt: 1,
  dirty: 1,
  dis: 1,
  disabilities: 1,
  disability: 1,
  disable: 1,
  disabled: 1,
  disagree: 1,
  disappointed: 1,
  disaster: 1,
  disc: 1,
  discharge: 1,
  disciplinary: 1,
  discipline: 1,
  disciplines: 1,
  disclaimer: 1,
  disclaimers: 1,
  disclose: 1,
  disclosure: 1,
  disco: 1,
  discount: 1,
  discounted: 1,
  discounts: 1,
  discover: 1,
  discovered: 1,
  discovery: 1,
  discrete: 1,
  discretion: 1,
  discrimination: 1,
  discs: 1,
  discuss: 1,
  discussed: 1,
  discusses: 1,
  discussing: 1,
  discussion: 1,
  discussions: 1,
  disease: 1,
  diseases: 1,
  dish: 1,
  dishes: 1,
  disk: 1,
  disks: 1,
  disney: 1,
  disorder: 1,
  disorders: 1,
  dispatch: 1,
  dispatched: 1,
  display: 1,
  displayed: 1,
  displaying: 1,
  displays: 1,
  disposal: 1,
  disposition: 1,
  dispute: 1,
  disputes: 1,
  dist: 1,
  distance: 1,
  distances: 1,
  distant: 1,
  distinct: 1,
  distinction: 1,
  distinguished: 1,
  distribute: 1,
  distributed: 1,
  distribution: 1,
  distributions: 1,
  distributor: 1,
  distributors: 1,
  district: 1,
  districts: 1,
  disturbed: 1,
  div: 1,
  dive: 1,
  diverse: 1,
  diversity: 1,
  divide: 1,
  divided: 1,
  dividend: 1,
  divine: 1,
  diving: 1,
  division: 1,
  divisions: 1,
  divorce: 1,
  divx: 1,
  diy: 1,
  dj: 1,
  dk: 1,
  dl: 1,
  dm: 1,
  dna: 1,
  dns: 1,
  do: 1,
  doc: 1,
  dock: 1,
  docs: 1,
  doctor: 1,
  doctors: 1,
  doctrine: 1,
  document: 1,
  documentary: 1,
  documentation: 1,
  documented: 1,
  documents: 1,
  dod: 1,
  dodge: 1,
  doe: 1,
  does: 1,
  dog: 1,
  dogs: 1,
  doing: 1,
  doll: 1,
  dollar: 1,
  dollars: 1,
  dolls: 1,
  dom: 1,
  domain: 1,
  domains: 1,
  dome: 1,
  domestic: 1,
  dominant: 1,
  dominican: 1,
  don: 1,
  donald: 1,
  donate: 1,
  donated: 1,
  donation: 1,
  donations: 1,
  done: 1,
  donna: 1,
  donor: 1,
  donors: 1,
  dont: 1,
  doom: 1,
  door: 1,
  doors: 1,
  dos: 1,
  dosage: 1,
  dose: 1,
  dot: 1,
  double: 1,
  doubt: 1,
  doug: 1,
  douglas: 1,
  dover: 1,
  dow: 1,
  down: 1,
  download: 1,
  downloadable: 1,
  downloaded: 1,
  downloading: 1,
  downloads: 1,
  downtown: 1,
  dozen: 1,
  dozens: 1,
  dp: 1,
  dpi: 1,
  dr: 1,
  draft: 1,
  drag: 1,
  dragon: 1,
  drain: 1,
  drainage: 1,
  drama: 1,
  dramatic: 1,
  dramatically: 1,
  draw: 1,
  drawing: 1,
  drawings: 1,
  drawn: 1,
  draws: 1,
  dream: 1,
  dreams: 1,
  dress: 1,
  dressed: 1,
  dresses: 1,
  dressing: 1,
  drew: 1,
  dried: 1,
  drill: 1,
  drilling: 1,
  drink: 1,
  drinking: 1,
  drinks: 1,
  drive: 1,
  driven: 1,
  driver: 1,
  drivers: 1,
  drives: 1,
  driving: 1,
  drop: 1,
  dropped: 1,
  drops: 1,
  drove: 1,
  drug: 1,
  drugs: 1,
  drum: 1,
  drums: 1,
  drunk: 1,
  dry: 1,
  dryer: 1,
  ds: 1,
  dsc: 1,
  dsl: 1,
  dt: 1,
  dts: 1,
  du: 1,
  dual: 1,
  dubai: 1,
  dublin: 1,
  duck: 1,
  dude: 1,
  due: 1,
  dui: 1,
  duke: 1,
  dumb: 1,
  dump: 1,
  duncan: 1,
  duo: 1,
  duplicate: 1,
  durable: 1,
  duration: 1,
  durham: 1,
  during: 1,
  dust: 1,
  dutch: 1,
  duties: 1,
  duty: 1,
  dv: 1,
  dvd: 1,
  dvds: 1,
  dx: 1,
  dying: 1,
  dylan: 1,
  dynamic: 1,
  dynamics: 1,
  e: 1,
  ea: 1,
  each: 1,
  eagle: 1,
  eagles: 1,
  ear: 1,
  earl: 1,
  earlier: 1,
  earliest: 1,
  early: 1,
  earn: 1,
  earned: 1,
  earning: 1,
  earnings: 1,
  earrings: 1,
  ears: 1,
  earth: 1,
  earthquake: 1,
  ease: 1,
  easier: 1,
  easily: 1,
  east: 1,
  easter: 1,
  eastern: 1,
  easy: 1,
  eat: 1,
  eating: 1,
  eau: 1,
  ebay: 1,
  ebony: 1,
  ebook: 1,
  ebooks: 1,
  ec: 1,
  echo: 1,
  eclipse: 1,
  eco: 1,
  ecological: 1,
  ecology: 1,
  ecommerce: 1,
  economic: 1,
  economics: 1,
  economies: 1,
  economy: 1,
  ecuador: 1,
  ed: 1,
  eddie: 1,
  eden: 1,
  edgar: 1,
  edge: 1,
  edges: 1,
  edinburgh: 1,
  edit: 1,
  edited: 1,
  editing: 1,
  edition: 1,
  editions: 1,
  editor: 1,
  editorial: 1,
  editorials: 1,
  editors: 1,
  edmonton: 1,
  eds: 1,
  edt: 1,
  educated: 1,
  education: 1,
  educational: 1,
  educators: 1,
  edward: 1,
  edwards: 1,
  ee: 1,
  ef: 1,
  effect: 1,
  effective: 1,
  effectively: 1,
  effectiveness: 1,
  effects: 1,
  efficiency: 1,
  efficient: 1,
  efficiently: 1,
  effort: 1,
  efforts: 1,
  eg: 1,
  egg: 1,
  eggs: 1,
  egypt: 1,
  egyptian: 1,
  eh: 1,
  eight: 1,
  either: 1,
  ejaculation: 1,
  el: 1,
  elder: 1,
  elderly: 1,
  elect: 1,
  elected: 1,
  election: 1,
  elections: 1,
  electoral: 1,
  electric: 1,
  electrical: 1,
  electricity: 1,
  electro: 1,
  electron: 1,
  electronic: 1,
  electronics: 1,
  elegant: 1,
  element: 1,
  elementary: 1,
  elements: 1,
  elephant: 1,
  elevation: 1,
  eleven: 1,
  eligibility: 1,
  eligible: 1,
  eliminate: 1,
  elimination: 1,
  elite: 1,
  elizabeth: 1,
  ellen: 1,
  elliott: 1,
  ellis: 1,
  else: 1,
  elsewhere: 1,
  elvis: 1,
  em: 1,
  emacs: 1,
  email: 1,
  emails: 1,
  embassy: 1,
  embedded: 1,
  emerald: 1,
  emergency: 1,
  emerging: 1,
  emily: 1,
  eminem: 1,
  emirates: 1,
  emission: 1,
  emissions: 1,
  emma: 1,
  emotional: 1,
  emotions: 1,
  emperor: 1,
  emphasis: 1,
  empire: 1,
  empirical: 1,
  employ: 1,
  employed: 1,
  employee: 1,
  employees: 1,
  employer: 1,
  employers: 1,
  employment: 1,
  empty: 1,
  en: 1,
  enable: 1,
  enabled: 1,
  enables: 1,
  enabling: 1,
  enb: 1,
  enclosed: 1,
  enclosure: 1,
  encoding: 1,
  encounter: 1,
  encountered: 1,
  encourage: 1,
  encouraged: 1,
  encourages: 1,
  encouraging: 1,
  encryption: 1,
  encyclopedia: 1,
  end: 1,
  endangered: 1,
  ended: 1,
  endif: 1,
  ending: 1,
  endless: 1,
  endorsed: 1,
  endorsement: 1,
  ends: 1,
  enemies: 1,
  enemy: 1,
  energy: 1,
  enforcement: 1,
  eng: 1,
  engage: 1,
  engaged: 1,
  engagement: 1,
  engaging: 1,
  engine: 1,
  engineer: 1,
  engineering: 1,
  engineers: 1,
  engines: 1,
  england: 1,
  english: 1,
  enhance: 1,
  enhanced: 1,
  enhancement: 1,
  enhancements: 1,
  enhancing: 1,
  enjoy: 1,
  enjoyed: 1,
  enjoying: 1,
  enlarge: 1,
  enlargement: 1,
  enormous: 1,
  enough: 1,
  enquiries: 1,
  enquiry: 1,
  enrolled: 1,
  enrollment: 1,
  ensemble: 1,
  ensure: 1,
  ensures: 1,
  ensuring: 1,
  ent: 1,
  enter: 1,
  entered: 1,
  entering: 1,
  enterprise: 1,
  enterprises: 1,
  enters: 1,
  entertaining: 1,
  entertainment: 1,
  entire: 1,
  entirely: 1,
  entities: 1,
  entitled: 1,
  entity: 1,
  entrance: 1,
  entrepreneur: 1,
  entrepreneurs: 1,
  entries: 1,
  entry: 1,
  envelope: 1,
  environment: 1,
  environmental: 1,
  environments: 1,
  enzyme: 1,
  eos: 1,
  ep: 1,
  epa: 1,
  epic: 1,
  epinions: 1,
  episode: 1,
  episodes: 1,
  epson: 1,
  eq: 1,
  equal: 1,
  equality: 1,
  equally: 1,
  equation: 1,
  equations: 1,
  equilibrium: 1,
  equipment: 1,
  equipped: 1,
  equity: 1,
  equivalent: 1,
  er: 1,
  era: 1,
  eric: 1,
  ericsson: 1,
  erik: 1,
  erotic: 1,
  erotica: 1,
  erp: 1,
  error: 1,
  errors: 1,
  es: 1,
  escape: 1,
  escort: 1,
  escorts: 1,
  especially: 1,
  espn: 1,
  essay: 1,
  essays: 1,
  essence: 1,
  essential: 1,
  essentially: 1,
  essentials: 1,
  essex: 1,
  est: 1,
  establish: 1,
  established: 1,
  establishing: 1,
  establishment: 1,
  estate: 1,
  estates: 1,
  estimate: 1,
  estimated: 1,
  estimates: 1,
  estimation: 1,
  estonia: 1,
  et: 1,
  etc: 1,
  eternal: 1,
  ethernet: 1,
  ethical: 1,
  ethics: 1,
  ethiopia: 1,
  ethnic: 1,
  eu: 1,
  eugene: 1,
  eur: 1,
  euro: 1,
  europe: 1,
  european: 1,
  euros: 1,
  ev: 1,
  eva: 1,
  eval: 1,
  evaluate: 1,
  evaluated: 1,
  evaluating: 1,
  evaluation: 1,
  evaluations: 1,
  evanescence: 1,
  evans: 1,
  eve: 1,
  even: 1,
  evening: 1,
  event: 1,
  events: 1,
  eventually: 1,
  ever: 1,
  every: 1,
  everybody: 1,
  everyday: 1,
  everyone: 1,
  everything: 1,
  everywhere: 1,
  evidence: 1,
  evident: 1,
  evil: 1,
  evolution: 1,
  ex: 1,
  exact: 1,
  exactly: 1,
  exam: 1,
  examination: 1,
  examinations: 1,
  examine: 1,
  examined: 1,
  examines: 1,
  examining: 1,
  example: 1,
  examples: 1,
  exams: 1,
  exceed: 1,
  excel: 1,
  excellence: 1,
  excellent: 1,
  except: 1,
  exception: 1,
  exceptional: 1,
  exceptions: 1,
  excerpt: 1,
  excess: 1,
  excessive: 1,
  exchange: 1,
  exchanges: 1,
  excited: 1,
  excitement: 1,
  exciting: 1,
  exclude: 1,
  excluded: 1,
  excluding: 1,
  exclusion: 1,
  exclusive: 1,
  exclusively: 1,
  excuse: 1,
  exec: 1,
  execute: 1,
  executed: 1,
  execution: 1,
  executive: 1,
  executives: 1,
  exempt: 1,
  exemption: 1,
  exercise: 1,
  exercises: 1,
  exhaust: 1,
  exhibit: 1,
  exhibition: 1,
  exhibitions: 1,
  exhibits: 1,
  exist: 1,
  existed: 1,
  existence: 1,
  existing: 1,
  exists: 1,
  exit: 1,
  exotic: 1,
  exp: 1,
  expand: 1,
  expanded: 1,
  expanding: 1,
  expansion: 1,
  expansys: 1,
  expect: 1,
  expectations: 1,
  expected: 1,
  expects: 1,
  expedia: 1,
  expenditure: 1,
  expenditures: 1,
  expense: 1,
  expenses: 1,
  expensive: 1,
  experience: 1,
  experienced: 1,
  experiences: 1,
  experiencing: 1,
  experiment: 1,
  experimental: 1,
  experiments: 1,
  expert: 1,
  expertise: 1,
  experts: 1,
  expiration: 1,
  expired: 1,
  expires: 1,
  explain: 1,
  explained: 1,
  explaining: 1,
  explains: 1,
  explanation: 1,
  explicit: 1,
  explicitly: 1,
  exploration: 1,
  explore: 1,
  explorer: 1,
  exploring: 1,
  explosion: 1,
  expo: 1,
  export: 1,
  exports: 1,
  exposed: 1,
  exposure: 1,
  express: 1,
  expressed: 1,
  expression: 1,
  expressions: 1,
  ext: 1,
  extend: 1,
  extended: 1,
  extending: 1,
  extends: 1,
  extension: 1,
  extensions: 1,
  extensive: 1,
  extent: 1,
  exterior: 1,
  external: 1,
  extra: 1,
  extract: 1,
  extraction: 1,
  extraordinary: 1,
  extras: 1,
  extreme: 1,
  extremely: 1,
  eye: 1,
  eyed: 1,
  eyes: 1,
  ez: 1,
  f: 1,
  fa: 1,
  fabric: 1,
  fabrics: 1,
  fabulous: 1,
  face: 1,
  faced: 1,
  faces: 1,
  facial: 1,
  facilitate: 1,
  facilities: 1,
  facility: 1,
  facing: 1,
  fact: 1,
  factor: 1,
  factors: 1,
  factory: 1,
  facts: 1,
  faculty: 1,
  fail: 1,
  failed: 1,
  failing: 1,
  fails: 1,
  failure: 1,
  failures: 1,
  fair: 1,
  fairfield: 1,
  fairly: 1,
  fairy: 1,
  faith: 1,
  fake: 1,
  fall: 1,
  fallen: 1,
  falling: 1,
  falls: 1,
  false: 1,
  fame: 1,
  familiar: 1,
  families: 1,
  family: 1,
  famous: 1,
  fan: 1,
  fancy: 1,
  fans: 1,
  fantastic: 1,
  fantasy: 1,
  faq: 1,
  faqs: 1,
  far: 1,
  fare: 1,
  fares: 1,
  farm: 1,
  farmer: 1,
  farmers: 1,
  farming: 1,
  farms: 1,
  fascinating: 1,
  fashion: 1,
  fast: 1,
  faster: 1,
  fastest: 1,
  fat: 1,
  fatal: 1,
  fate: 1,
  father: 1,
  fathers: 1,
  fatty: 1,
  fault: 1,
  favor: 1,
  favorite: 1,
  favorites: 1,
  favors: 1,
  favour: 1,
  favourite: 1,
  favourites: 1,
  fax: 1,
  fbi: 1,
  fc: 1,
  fcc: 1,
  fd: 1,
  fda: 1,
  fe: 1,
  fear: 1,
  fears: 1,
  feat: 1,
  feature: 1,
  featured: 1,
  features: 1,
  featuring: 1,
  feb: 1,
  february: 1,
  fed: 1,
  federal: 1,
  federation: 1,
  fee: 1,
  feed: 1,
  feedback: 1,
  feeding: 1,
  feeds: 1,
  feel: 1,
  feeling: 1,
  feelings: 1,
  feels: 1,
  fees: 1,
  feet: 1,
  fell: 1,
  fellow: 1,
  fellowship: 1,
  felt: 1,
  female: 1,
  females: 1,
  fence: 1,
  feof: 1,
  ferrari: 1,
  ferry: 1,
  festival: 1,
  festivals: 1,
  fetish: 1,
  fever: 1,
  few: 1,
  fewer: 1,
  ff: 1,
  fg: 1,
  fi: 1,
  fiber: 1,
  fibre: 1,
  fiction: 1,
  field: 1,
  fields: 1,
  fifteen: 1,
  fifth: 1,
  fifty: 1,
  fig: 1,
  fight: 1,
  fighter: 1,
  fighters: 1,
  fighting: 1,
  figure: 1,
  figured: 1,
  figures: 1,
  fiji: 1,
  file: 1,
  filed: 1,
  filename: 1,
  files: 1,
  filing: 1,
  fill: 1,
  filled: 1,
  filling: 1,
  film: 1,
  filme: 1,
  films: 1,
  filter: 1,
  filtering: 1,
  filters: 1,
  fin: 1,
  final: 1,
  finally: 1,
  finals: 1,
  finance: 1,
  finances: 1,
  financial: 1,
  financing: 1,
  find: 1,
  findarticles: 1,
  finder: 1,
  finding: 1,
  findings: 1,
  findlaw: 1,
  finds: 1,
  fine: 1,
  finest: 1,
  finger: 1,
  fingering: 1,
  fingers: 1,
  finish: 1,
  finished: 1,
  finishing: 1,
  finite: 1,
  finland: 1,
  finnish: 1,
  fioricet: 1,
  fire: 1,
  fired: 1,
  firefox: 1,
  fireplace: 1,
  fires: 1,
  firewall: 1,
  firewire: 1,
  firm: 1,
  firms: 1,
  firmware: 1,
  first: 1,
  fiscal: 1,
  fish: 1,
  fisher: 1,
  fisheries: 1,
  fishing: 1,
  fist: 1,
  fisting: 1,
  fit: 1,
  fitness: 1,
  fits: 1,
  fitted: 1,
  fitting: 1,
  five: 1,
  fix: 1,
  fixed: 1,
  fixes: 1,
  fixtures: 1,
  fl: 1,
  flag: 1,
  flags: 1,
  flame: 1,
  flash: 1,
  flashers: 1,
  flashing: 1,
  flat: 1,
  flavor: 1,
  fleece: 1,
  fleet: 1,
  flesh: 1,
  flex: 1,
  flexibility: 1,
  flexible: 1,
  flickr: 1,
  flight: 1,
  flights: 1,
  flip: 1,
  float: 1,
  floating: 1,
  flood: 1,
  floor: 1,
  flooring: 1,
  floors: 1,
  floppy: 1,
  floral: 1,
  florence: 1,
  florida: 1,
  florist: 1,
  florists: 1,
  flour: 1,
  flow: 1,
  flower: 1,
  flowers: 1,
  flows: 1,
  floyd: 1,
  flu: 1,
  fluid: 1,
  flush: 1,
  flux: 1,
  fly: 1,
  flyer: 1,
  flying: 1,
  fm: 1,
  fo: 1,
  foam: 1,
  focal: 1,
  focus: 1,
  focused: 1,
  focuses: 1,
  focusing: 1,
  fog: 1,
  fold: 1,
  folder: 1,
  folders: 1,
  folding: 1,
  folk: 1,
  folks: 1,
  follow: 1,
  followed: 1,
  following: 1,
  follows: 1,
  font: 1,
  fonts: 1,
  foo: 1,
  food: 1,
  foods: 1,
  fool: 1,
  foot: 1,
  footage: 1,
  football: 1,
  footwear: 1,
  for: 1,
  forbes: 1,
  forbidden: 1,
  force: 1,
  forced: 1,
  forces: 1,
  ford: 1,
  forecast: 1,
  forecasts: 1,
  foreign: 1,
  forest: 1,
  forestry: 1,
  forests: 1,
  forever: 1,
  forge: 1,
  forget: 1,
  forgot: 1,
  forgotten: 1,
  fork: 1,
  form: 1,
  formal: 1,
  format: 1,
  formation: 1,
  formats: 1,
  formatting: 1,
  formed: 1,
  former: 1,
  formerly: 1,
  forming: 1,
  forms: 1,
  formula: 1,
  fort: 1,
  forth: 1,
  fortune: 1,
  forty: 1,
  forum: 1,
  forums: 1,
  forward: 1,
  forwarding: 1,
  fossil: 1,
  foster: 1,
  foto: 1,
  fotos: 1,
  fought: 1,
  foul: 1,
  found: 1,
  foundation: 1,
  foundations: 1,
  founded: 1,
  founder: 1,
  fountain: 1,
  four: 1,
  fourth: 1,
  fox: 1,
  fp: 1,
  fr: 1,
  fraction: 1,
  fragrance: 1,
  fragrances: 1,
  frame: 1,
  framed: 1,
  frames: 1,
  framework: 1,
  framing: 1,
  france: 1,
  franchise: 1,
  francis: 1,
  francisco: 1,
  frank: 1,
  frankfurt: 1,
  franklin: 1,
  fraser: 1,
  fraud: 1,
  fred: 1,
  frederick: 1,
  free: 1,
  freebsd: 1,
  freedom: 1,
  freelance: 1,
  freely: 1,
  freeware: 1,
  freeze: 1,
  freight: 1,
  french: 1,
  frequencies: 1,
  frequency: 1,
  frequent: 1,
  frequently: 1,
  fresh: 1,
  fri: 1,
  friday: 1,
  fridge: 1,
  friend: 1,
  friendly: 1,
  friends: 1,
  friendship: 1,
  frog: 1,
  from: 1,
  front: 1,
  frontier: 1,
  frontpage: 1,
  frost: 1,
  frozen: 1,
  fruit: 1,
  fruits: 1,
  fs: 1,
  ft: 1,
  ftp: 1,
  fu: 1,
  fuck: 1,
  fucked: 1,
  fucking: 1,
  fuel: 1,
  fuji: 1,
  fujitsu: 1,
  full: 1,
  fully: 1,
  fun: 1,
  function: 1,
  functional: 1,
  functionality: 1,
  functioning: 1,
  functions: 1,
  fund: 1,
  fundamental: 1,
  fundamentals: 1,
  funded: 1,
  funding: 1,
  fundraising: 1,
  funds: 1,
  funeral: 1,
  funk: 1,
  funky: 1,
  funny: 1,
  fur: 1,
  furnished: 1,
  furnishings: 1,
  furniture: 1,
  further: 1,
  furthermore: 1,
  fusion: 1,
  future: 1,
  futures: 1,
  fuzzy: 1,
  fw: 1,
  fwd: 1,
  fx: 1,
  fy: 1,
  g: 1,
  ga: 1,
  gabriel: 1,
  gadgets: 1,
  gage: 1,
  gain: 1,
  gained: 1,
  gains: 1,
  galaxy: 1,
  gale: 1,
  galleries: 1,
  gallery: 1,
  gambling: 1,
  game: 1,
  gamecube: 1,
  games: 1,
  gamespot: 1,
  gaming: 1,
  gamma: 1,
  gang: 1,
  gangbang: 1,
  gap: 1,
  gaps: 1,
  garage: 1,
  garbage: 1,
  garcia: 1,
  garden: 1,
  gardening: 1,
  gardens: 1,
  garlic: 1,
  garmin: 1,
  gary: 1,
  gas: 1,
  gasoline: 1,
  gate: 1,
  gates: 1,
  gateway: 1,
  gather: 1,
  gathered: 1,
  gathering: 1,
  gauge: 1,
  gave: 1,
  gay: 1,
  gays: 1,
  gazette: 1,
  gb: 1,
  gba: 1,
  gbp: 1,
  gc: 1,
  gcc: 1,
  gd: 1,
  gdp: 1,
  ge: 1,
  gear: 1,
  geek: 1,
  gel: 1,
  gem: 1,
  gen: 1,
  gender: 1,
  gene: 1,
  genealogy: 1,
  general: 1,
  generally: 1,
  generate: 1,
  generated: 1,
  generates: 1,
  generating: 1,
  generation: 1,
  generations: 1,
  generator: 1,
  generators: 1,
  generic: 1,
  generous: 1,
  genes: 1,
  genesis: 1,
  genetic: 1,
  genetics: 1,
  geneva: 1,
  genius: 1,
  genome: 1,
  genre: 1,
  genres: 1,
  gentle: 1,
  gentleman: 1,
  gently: 1,
  genuine: 1,
  geo: 1,
  geographic: 1,
  geographical: 1,
  geography: 1,
  geological: 1,
  geology: 1,
  geometry: 1,
  george: 1,
  georgia: 1,
  gerald: 1,
  german: 1,
  germany: 1,
  get: 1,
  gets: 1,
  getting: 1,
  gg: 1,
  ghana: 1,
  ghost: 1,
  ghz: 1,
  gi: 1,
  giant: 1,
  giants: 1,
  gibraltar: 1,
  gibson: 1,
  gif: 1,
  gift: 1,
  gifts: 1,
  gig: 1,
  gilbert: 1,
  girl: 1,
  girlfriend: 1,
  girls: 1,
  gis: 1,
  give: 1,
  given: 1,
  gives: 1,
  giving: 1,
  gl: 1,
  glad: 1,
  glance: 1,
  glasgow: 1,
  glass: 1,
  glasses: 1,
  glen: 1,
  glenn: 1,
  global: 1,
  globe: 1,
  glory: 1,
  glossary: 1,
  gloves: 1,
  glow: 1,
  glucose: 1,
  gm: 1,
  gmbh: 1,
  gmc: 1,
  gmt: 1,
  gnome: 1,
  gnu: 1,
  go: 1,
  goal: 1,
  goals: 1,
  goat: 1,
  god: 1,
  gods: 1,
  goes: 1,
  going: 1,
  gold: 1,
  golden: 1,
  golf: 1,
  gone: 1,
  gonna: 1,
  good: 1,
  goods: 1,
  google: 1,
  gordon: 1,
  gore: 1,
  gorgeous: 1,
  gospel: 1,
  gossip: 1,
  got: 1,
  gothic: 1,
  goto: 1,
  gotta: 1,
  gotten: 1,
  gourmet: 1,
  governance: 1,
  governing: 1,
  government: 1,
  governmental: 1,
  governments: 1,
  governor: 1,
  gp: 1,
  gpl: 1,
  gps: 1,
  gr: 1,
  grab: 1,
  grace: 1,
  grad: 1,
  grade: 1,
  grades: 1,
  gradually: 1,
  graduate: 1,
  graduated: 1,
  graduates: 1,
  graduation: 1,
  graham: 1,
  grain: 1,
  grammar: 1,
  grams: 1,
  grand: 1,
  grande: 1,
  granny: 1,
  grant: 1,
  granted: 1,
  grants: 1,
  graph: 1,
  graphic: 1,
  graphical: 1,
  graphics: 1,
  graphs: 1,
  gras: 1,
  grass: 1,
  grateful: 1,
  gratis: 1,
  gratuit: 1,
  grave: 1,
  gravity: 1,
  gray: 1,
  great: 1,
  greater: 1,
  greatest: 1,
  greatly: 1,
  greece: 1,
  greek: 1,
  green: 1,
  greene: 1,
  greenhouse: 1,
  greensboro: 1,
  greeting: 1,
  greetings: 1,
  greg: 1,
  gregory: 1,
  grenada: 1,
  grew: 1,
  grey: 1,
  grid: 1,
  griffin: 1,
  grill: 1,
  grip: 1,
  grocery: 1,
  groove: 1,
  gross: 1,
  ground: 1,
  grounds: 1,
  groundwater: 1,
  group: 1,
  groups: 1,
  grove: 1,
  grow: 1,
  growing: 1,
  grown: 1,
  grows: 1,
  growth: 1,
  gs: 1,
  gsm: 1,
  gst: 1,
  gt: 1,
  gtk: 1,
  guam: 1,
  guarantee: 1,
  guaranteed: 1,
  guarantees: 1,
  guard: 1,
  guardian: 1,
  guards: 1,
  guatemala: 1,
  guess: 1,
  guest: 1,
  guestbook: 1,
  guests: 1,
  gui: 1,
  guidance: 1,
  guide: 1,
  guided: 1,
  guidelines: 1,
  guides: 1,
  guild: 1,
  guilty: 1,
  guinea: 1,
  guitar: 1,
  guitars: 1,
  gulf: 1,
  gun: 1,
  guns: 1,
  guru: 1,
  guy: 1,
  guyana: 1,
  guys: 1,
  gym: 1,
  gzip: 1,
  h: 1,
  ha: 1,
  habitat: 1,
  habits: 1,
  hack: 1,
  hacker: 1,
  had: 1,
  hair: 1,
  hairy: 1,
  haiti: 1,
  half: 1,
  halifax: 1,
  hall: 1,
  halloween: 1,
  halo: 1,
  ham: 1,
  hamburg: 1,
  hamilton: 1,
  hammer: 1,
  hampshire: 1,
  hampton: 1,
  hand: 1,
  handbags: 1,
  handbook: 1,
  handed: 1,
  handheld: 1,
  handhelds: 1,
  handjob: 1,
  handjobs: 1,
  handle: 1,
  handled: 1,
  handles: 1,
  handling: 1,
  handmade: 1,
  hands: 1,
  handy: 1,
  hang: 1,
  hanging: 1,
  hans: 1,
  hansen: 1,
  happen: 1,
  happened: 1,
  happening: 1,
  happens: 1,
  happiness: 1,
  happy: 1,
  harassment: 1,
  harbor: 1,
  harbour: 1,
  hard: 1,
  hardcore: 1,
  hardcover: 1,
  harder: 1,
  hardly: 1,
  hardware: 1,
  hardwood: 1,
  harley: 1,
  harm: 1,
  harmful: 1,
  harmony: 1,
  harold: 1,
  harper: 1,
  harris: 1,
  harrison: 1,
  harry: 1,
  hart: 1,
  hartford: 1,
  harvard: 1,
  harvest: 1,
  harvey: 1,
  has: 1,
  hash: 1,
  hat: 1,
  hate: 1,
  hats: 1,
  have: 1,
  haven: 1,
  having: 1,
  hawaii: 1,
  hawaiian: 1,
  hawk: 1,
  hay: 1,
  hayes: 1,
  hazard: 1,
  hazardous: 1,
  hazards: 1,
  hb: 1,
  hc: 1,
  hd: 1,
  hdtv: 1,
  he: 1,
  head: 1,
  headed: 1,
  header: 1,
  headers: 1,
  heading: 1,
  headline: 1,
  headlines: 1,
  headphones: 1,
  headquarters: 1,
  heads: 1,
  headset: 1,
  healing: 1,
  health: 1,
  healthcare: 1,
  healthy: 1,
  hear: 1,
  heard: 1,
  hearing: 1,
  hearings: 1,
  heart: 1,
  hearts: 1,
  heat: 1,
  heated: 1,
  heater: 1,
  heath: 1,
  heather: 1,
  heating: 1,
  heaven: 1,
  heavily: 1,
  heavy: 1,
  hebrew: 1,
  heel: 1,
  height: 1,
  heights: 1,
  held: 1,
  helen: 1,
  helena: 1,
  helicopter: 1,
  hell: 1,
  hello: 1,
  helmet: 1,
  help: 1,
  helped: 1,
  helpful: 1,
  helping: 1,
  helps: 1,
  hence: 1,
  henderson: 1,
  henry: 1,
  hentai: 1,
  hepatitis: 1,
  her: 1,
  herald: 1,
  herb: 1,
  herbal: 1,
  herbs: 1,
  here: 1,
  hereby: 1,
  herein: 1,
  heritage: 1,
  hero: 1,
  heroes: 1,
  herself: 1,
  hewlett: 1,
  hey: 1,
  hh: 1,
  hi: 1,
  hidden: 1,
  hide: 1,
  hierarchy: 1,
  high: 1,
  higher: 1,
  highest: 1,
  highland: 1,
  highlight: 1,
  highlighted: 1,
  highlights: 1,
  highly: 1,
  highs: 1,
  highway: 1,
  highways: 1,
  hiking: 1,
  hill: 1,
  hills: 1,
  hilton: 1,
  him: 1,
  himself: 1,
  hindu: 1,
  hint: 1,
  hints: 1,
  hip: 1,
  hire: 1,
  hired: 1,
  hiring: 1,
  his: 1,
  hispanic: 1,
  hist: 1,
  historic: 1,
  historical: 1,
  history: 1,
  hit: 1,
  hitachi: 1,
  hits: 1,
  hitting: 1,
  hiv: 1,
  hk: 1,
  hl: 1,
  ho: 1,
  hobbies: 1,
  hobby: 1,
  hockey: 1,
  hold: 1,
  holdem: 1,
  holder: 1,
  holders: 1,
  holding: 1,
  holdings: 1,
  holds: 1,
  hole: 1,
  holes: 1,
  holiday: 1,
  holidays: 1,
  holland: 1,
  hollow: 1,
  holly: 1,
  hollywood: 1,
  holmes: 1,
  holocaust: 1,
  holy: 1,
  home: 1,
  homeland: 1,
  homeless: 1,
  homepage: 1,
  homes: 1,
  hometown: 1,
  homework: 1,
  hon: 1,
  honda: 1,
  honduras: 1,
  honest: 1,
  honey: 1,
  hong: 1,
  honolulu: 1,
  honor: 1,
  honors: 1,
  hood: 1,
  hook: 1,
  hop: 1,
  hope: 1,
  hoped: 1,
  hopefully: 1,
  hopes: 1,
  hoping: 1,
  hopkins: 1,
  horizon: 1,
  horizontal: 1,
  hormone: 1,
  horn: 1,
  horny: 1,
  horrible: 1,
  horror: 1,
  horse: 1,
  horses: 1,
  hose: 1,
  hospital: 1,
  hospitality: 1,
  hospitals: 1,
  host: 1,
  hosted: 1,
  hostel: 1,
  hostels: 1,
  hosting: 1,
  hosts: 1,
  hot: 1,
  hotel: 1,
  hotels: 1,
  hotmail: 1,
  hottest: 1,
  hour: 1,
  hourly: 1,
  hours: 1,
  house: 1,
  household: 1,
  households: 1,
  houses: 1,
  housewares: 1,
  housewives: 1,
  housing: 1,
  houston: 1,
  how: 1,
  howard: 1,
  however: 1,
  howto: 1,
  hp: 1,
  hq: 1,
  hr: 1,
  href: 1,
  hrs: 1,
  hs: 1,
  ht: 1,
  html: 1,
  http: 1,
  hu: 1,
  hub: 1,
  hudson: 1,
  huge: 1,
  hugh: 1,
  hughes: 1,
  hugo: 1,
  hull: 1,
  human: 1,
  humanitarian: 1,
  humanities: 1,
  humanity: 1,
  humans: 1,
  humidity: 1,
  humor: 1,
  hundred: 1,
  hundreds: 1,
  hung: 1,
  hungarian: 1,
  hungary: 1,
  hunger: 1,
  hungry: 1,
  hunt: 1,
  hunter: 1,
  hunting: 1,
  huntington: 1,
  hurricane: 1,
  hurt: 1,
  husband: 1,
  hwy: 1,
  hybrid: 1,
  hydraulic: 1,
  hydrocodone: 1,
  hydrogen: 1,
  hygiene: 1,
  hypothesis: 1,
  hypothetical: 1,
  hyundai: 1,
  hz: 1
};

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon10000", function() { return TheMostCommon10000; });
// https://englishgrammarhere.com/vocabulary/10000-most-common-words-in-english-part-5/
const TheMostCommon10000 = {
  i: 1,
  ia: 1,
  ian: 1,
  ibm: 1,
  ic: 1,
  ice: 1,
  iceland: 1,
  icon: 1,
  icons: 1,
  icq: 1,
  ict: 1,
  id: 1,
  idaho: 1,
  ide: 1,
  idea: 1,
  ideal: 1,
  ideas: 1,
  identical: 1,
  identification: 1,
  identified: 1,
  identifier: 1,
  identifies: 1,
  identify: 1,
  identifying: 1,
  identity: 1,
  idle: 1,
  idol: 1,
  ids: 1,
  ie: 1,
  ieee: 1,
  if: 1,
  ignore: 1,
  ignored: 1,
  ii: 1,
  iii: 1,
  il: 1,
  ill: 1,
  illegal: 1,
  illinois: 1,
  illness: 1,
  illustrated: 1,
  illustration: 1,
  illustrations: 1,
  im: 1,
  image: 1,
  images: 1,
  imagination: 1,
  imagine: 1,
  imaging: 1,
  img: 1,
  immediate: 1,
  immediately: 1,
  immigrants: 1,
  immigration: 1,
  immune: 1,
  immunology: 1,
  impact: 1,
  impacts: 1,
  impaired: 1,
  imperial: 1,
  implement: 1,
  implementation: 1,
  implemented: 1,
  implementing: 1,
  implications: 1,
  implied: 1,
  implies: 1,
  import: 1,
  importance: 1,
  important: 1,
  importantly: 1,
  imported: 1,
  imports: 1,
  impose: 1,
  imposed: 1,
  impossible: 1,
  impressed: 1,
  impression: 1,
  impressive: 1,
  improve: 1,
  improved: 1,
  improvement: 1,
  improvements: 1,
  improving: 1,
  in: 1,
  inappropriate: 1,
  inbox: 1,
  inc: 1,
  incentive: 1,
  incentives: 1,
  incest: 1,
  inch: 1,
  inches: 1,
  incidence: 1,
  incident: 1,
  incidents: 1,
  incl: 1,
  include: 1,
  included: 1,
  includes: 1,
  including: 1,
  inclusion: 1,
  inclusive: 1,
  income: 1,
  incoming: 1,
  incomplete: 1,
  incorporate: 1,
  incorporated: 1,
  incorrect: 1,
  increase: 1,
  increased: 1,
  increases: 1,
  increasing: 1,
  increasingly: 1,
  incredible: 1,
  incurred: 1,
  ind: 1,
  indeed: 1,
  independence: 1,
  independent: 1,
  independently: 1,
  index: 1,
  indexed: 1,
  indexes: 1,
  india: 1,
  indian: 1,
  indiana: 1,
  indianapolis: 1,
  indians: 1,
  indicate: 1,
  indicated: 1,
  indicates: 1,
  indicating: 1,
  indication: 1,
  indicator: 1,
  indicators: 1,
  indices: 1,
  indie: 1,
  indigenous: 1,
  indirect: 1,
  individual: 1,
  individually: 1,
  individuals: 1,
  indonesia: 1,
  indonesian: 1,
  indoor: 1,
  induced: 1,
  induction: 1,
  industrial: 1,
  industries: 1,
  industry: 1,
  inexpensive: 1,
  inf: 1,
  infant: 1,
  infants: 1,
  infected: 1,
  infection: 1,
  infections: 1,
  infectious: 1,
  infinite: 1,
  inflation: 1,
  influence: 1,
  influenced: 1,
  influences: 1,
  info: 1,
  inform: 1,
  informal: 1,
  information: 1,
  informational: 1,
  informative: 1,
  informed: 1,
  infrared: 1,
  infrastructure: 1,
  infringement: 1,
  ing: 1,
  ingredients: 1,
  inherited: 1,
  initial: 1,
  initially: 1,
  initiated: 1,
  initiative: 1,
  initiatives: 1,
  injection: 1,
  injured: 1,
  injuries: 1,
  injury: 1,
  ink: 1,
  inkjet: 1,
  inline: 1,
  inn: 1,
  inner: 1,
  innocent: 1,
  innovation: 1,
  innovations: 1,
  innovative: 1,
  inns: 1,
  input: 1,
  inputs: 1,
  inquire: 1,
  inquiries: 1,
  inquiry: 1,
  ins: 1,
  insects: 1,
  insert: 1,
  inserted: 1,
  insertion: 1,
  inside: 1,
  insider: 1,
  insight: 1,
  insights: 1,
  inspection: 1,
  inspections: 1,
  inspector: 1,
  inspiration: 1,
  inspired: 1,
  install: 1,
  installation: 1,
  installations: 1,
  installed: 1,
  installing: 1,
  instance: 1,
  instances: 1,
  instant: 1,
  instantly: 1,
  instead: 1,
  institute: 1,
  institutes: 1,
  institution: 1,
  institutional: 1,
  institutions: 1,
  instruction: 1,
  instructional: 1,
  instructions: 1,
  instructor: 1,
  instructors: 1,
  instrument: 1,
  instrumental: 1,
  instrumentation: 1,
  instruments: 1,
  insulation: 1,
  insulin: 1,
  insurance: 1,
  insured: 1,
  int: 1,
  intake: 1,
  integer: 1,
  integral: 1,
  integrate: 1,
  integrated: 1,
  integrating: 1,
  integration: 1,
  integrity: 1,
  intel: 1,
  intellectual: 1,
  intelligence: 1,
  intelligent: 1,
  intend: 1,
  intended: 1,
  intense: 1,
  intensity: 1,
  intensive: 1,
  intent: 1,
  intention: 1,
  inter: 1,
  interact: 1,
  interaction: 1,
  interactions: 1,
  interactive: 1,
  interest: 1,
  interested: 1,
  interesting: 1,
  interests: 1,
  interface: 1,
  interfaces: 1,
  interference: 1,
  interim: 1,
  interior: 1,
  intermediate: 1,
  internal: 1,
  international: 1,
  internationally: 1,
  internet: 1,
  internship: 1,
  interpretation: 1,
  interpreted: 1,
  interracial: 1,
  intersection: 1,
  interstate: 1,
  interval: 1,
  intervals: 1,
  intervention: 1,
  interventions: 1,
  interview: 1,
  interviews: 1,
  intimate: 1,
  intl: 1,
  into: 1,
  intranet: 1,
  intro: 1,
  introduce: 1,
  introduced: 1,
  introduces: 1,
  introducing: 1,
  introduction: 1,
  introductory: 1,
  invalid: 1,
  invasion: 1,
  invention: 1,
  inventory: 1,
  invest: 1,
  investigate: 1,
  investigated: 1,
  investigation: 1,
  investigations: 1,
  investigator: 1,
  investigators: 1,
  investing: 1,
  investment: 1,
  investments: 1,
  investor: 1,
  investors: 1,
  invisible: 1,
  invision: 1,
  invitation: 1,
  invitations: 1,
  invite: 1,
  invited: 1,
  invoice: 1,
  involve: 1,
  involved: 1,
  involvement: 1,
  involves: 1,
  involving: 1,
  io: 1,
  ion: 1,
  iowa: 1,
  ip: 1,
  ipaq: 1,
  ipod: 1,
  ips: 1,
  ir: 1,
  ira: 1,
  iran: 1,
  iraq: 1,
  iraqi: 1,
  irc: 1,
  ireland: 1,
  irish: 1,
  iron: 1,
  irrigation: 1,
  irs: 1,
  is: 1,
  isa: 1,
  isaac: 1,
  isbn: 1,
  islam: 1,
  islamic: 1,
  island: 1,
  islands: 1,
  isle: 1,
  iso: 1,
  isolated: 1,
  isolation: 1,
  isp: 1,
  israel: 1,
  israeli: 1,
  issn: 1,
  issue: 1,
  issued: 1,
  issues: 1,
  ist: 1,
  istanbul: 1,
  it: 1,
  italia: 1,
  italian: 1,
  italiano: 1,
  italic: 1,
  italy: 1,
  item: 1,
  items: 1,
  its: 1,
  itself: 1,
  itunes: 1,
  iv: 1,
  ivory: 1,
  ix: 1,
  j: 1,
  ja: 1,
  jack: 1,
  jacket: 1,
  jackets: 1,
  jackie: 1,
  jackson: 1,
  jacksonville: 1,
  jacob: 1,
  jade: 1,
  jaguar: 1,
  jail: 1,
  jake: 1,
  jam: 1,
  jamaica: 1,
  james: 1,
  jamie: 1,
  jan: 1,
  jane: 1,
  janet: 1,
  january: 1,
  japan: 1,
  japanese: 1,
  jar: 1,
  jason: 1,
  java: 1,
  javascript: 1,
  jay: 1,
  jazz: 1,
  jc: 1,
  jd: 1,
  je: 1,
  jean: 1,
  jeans: 1,
  jeep: 1,
  jeff: 1,
  jefferson: 1,
  jeffrey: 1,
  jelsoft: 1,
  jennifer: 1,
  jenny: 1,
  jeremy: 1,
  jerry: 1,
  jersey: 1,
  jerusalem: 1,
  jesse: 1,
  jessica: 1,
  jesus: 1,
  jet: 1,
  jets: 1,
  jewel: 1,
  jewellery: 1,
  jewelry: 1,
  jewish: 1,
  jews: 1,
  jill: 1,
  jim: 1,
  jimmy: 1,
  jj: 1,
  jm: 1,
  jo: 1,
  joan: 1,
  job: 1,
  jobs: 1,
  joe: 1,
  joel: 1,
  john: 1,
  johnny: 1,
  johns: 1,
  johnson: 1,
  johnston: 1,
  join: 1,
  joined: 1,
  joining: 1,
  joins: 1,
  joint: 1,
  joke: 1,
  jokes: 1,
  jon: 1,
  jonathan: 1,
  jones: 1,
  jordan: 1,
  jose: 1,
  joseph: 1,
  josh: 1,
  joshua: 1,
  journal: 1,
  journalism: 1,
  journalist: 1,
  journalists: 1,
  journals: 1,
  journey: 1,
  joy: 1,
  joyce: 1,
  jp: 1,
  jpeg: 1,
  jpg: 1,
  jr: 1,
  js: 1,
  juan: 1,
  judge: 1,
  judges: 1,
  judgment: 1,
  judicial: 1,
  judy: 1,
  juice: 1,
  jul: 1,
  julia: 1,
  julian: 1,
  julie: 1,
  july: 1,
  jump: 1,
  jumping: 1,
  jun: 1,
  junction: 1,
  june: 1,
  jungle: 1,
  junior: 1,
  junk: 1,
  jurisdiction: 1,
  jury: 1,
  just: 1,
  justice: 1,
  justify: 1,
  justin: 1,
  juvenile: 1,
  jvc: 1,
  k: 1,
  ka: 1,
  kai: 1,
  kansas: 1,
  karaoke: 1,
  karen: 1,
  karl: 1,
  karma: 1,
  kate: 1,
  kathy: 1,
  katie: 1,
  katrina: 1,
  kay: 1,
  kazakhstan: 1,
  kb: 1,
  kde: 1,
  keen: 1,
  keep: 1,
  keeping: 1,
  keeps: 1,
  keith: 1,
  kelkoo: 1,
  kelly: 1,
  ken: 1,
  kennedy: 1,
  kenneth: 1,
  kenny: 1,
  keno: 1,
  kent: 1,
  kentucky: 1,
  kenya: 1,
  kept: 1,
  kernel: 1,
  kerry: 1,
  kevin: 1,
  key: 1,
  keyboard: 1,
  keyboards: 1,
  keys: 1,
  keyword: 1,
  keywords: 1,
  kg: 1,
  kick: 1,
  kid: 1,
  kidney: 1,
  kids: 1,
  kijiji: 1,
  kill: 1,
  killed: 1,
  killer: 1,
  killing: 1,
  kills: 1,
  kilometers: 1,
  kim: 1,
  kinase: 1,
  kind: 1,
  kinda: 1,
  kinds: 1,
  king: 1,
  kingdom: 1,
  kings: 1,
  kingston: 1,
  kirk: 1,
  kiss: 1,
  kissing: 1,
  kit: 1,
  kitchen: 1,
  kits: 1,
  kitty: 1,
  klein: 1,
  km: 1,
  knee: 1,
  knew: 1,
  knife: 1,
  knight: 1,
  knights: 1,
  knit: 1,
  knitting: 1,
  knives: 1,
  knock: 1,
  know: 1,
  knowing: 1,
  knowledge: 1,
  knowledgestorm: 1,
  known: 1,
  knows: 1,
  ko: 1,
  kodak: 1,
  kong: 1,
  korea: 1,
  korean: 1,
  kruger: 1,
  ks: 1,
  kurt: 1,
  kuwait: 1,
  kw: 1,
  ky: 1,
  kyle: 1,
  l: 1,
  la: 1,
  lab: 1,
  label: 1,
  labeled: 1,
  labels: 1,
  labor: 1,
  laboratories: 1,
  laboratory: 1,
  labour: 1,
  labs: 1,
  lace: 1,
  lack: 1,
  ladder: 1,
  laden: 1,
  ladies: 1,
  lady: 1,
  lafayette: 1,
  laid: 1,
  lake: 1,
  lakes: 1,
  lamb: 1,
  lambda: 1,
  lamp: 1,
  lamps: 1,
  lan: 1,
  lancaster: 1,
  lance: 1,
  land: 1,
  landing: 1,
  lands: 1,
  landscape: 1,
  landscapes: 1,
  lane: 1,
  lanes: 1,
  lang: 1,
  language: 1,
  languages: 1,
  lanka: 1,
  laos: 1,
  lap: 1,
  laptop: 1,
  laptops: 1,
  large: 1,
  largely: 1,
  larger: 1,
  largest: 1,
  larry: 1,
  las: 1,
  laser: 1,
  last: 1,
  lasting: 1,
  lat: 1,
  late: 1,
  lately: 1,
  later: 1,
  latest: 1,
  latex: 1,
  latin: 1,
  latina: 1,
  latinas: 1,
  latino: 1,
  latitude: 1,
  latter: 1,
  latvia: 1,
  lauderdale: 1,
  laugh: 1,
  laughing: 1,
  launch: 1,
  launched: 1,
  launches: 1,
  laundry: 1,
  laura: 1,
  lauren: 1,
  law: 1,
  lawn: 1,
  lawrence: 1,
  laws: 1,
  lawsuit: 1,
  lawyer: 1,
  lawyers: 1,
  lay: 1,
  layer: 1,
  layers: 1,
  layout: 1,
  lazy: 1,
  lb: 1,
  lbs: 1,
  lc: 1,
  lcd: 1,
  ld: 1,
  le: 1,
  lead: 1,
  leader: 1,
  leaders: 1,
  leadership: 1,
  leading: 1,
  leads: 1,
  leaf: 1,
  league: 1,
  lean: 1,
  learn: 1,
  learned: 1,
  learners: 1,
  learning: 1,
  lease: 1,
  leasing: 1,
  least: 1,
  leather: 1,
  leave: 1,
  leaves: 1,
  leaving: 1,
  lebanon: 1,
  lecture: 1,
  lectures: 1,
  led: 1,
  lee: 1,
  leeds: 1,
  left: 1,
  leg: 1,
  legacy: 1,
  legal: 1,
  legally: 1,
  legend: 1,
  legendary: 1,
  legends: 1,
  legislation: 1,
  legislative: 1,
  legislature: 1,
  legitimate: 1,
  legs: 1,
  leisure: 1,
  lemon: 1,
  len: 1,
  lender: 1,
  lenders: 1,
  lending: 1,
  length: 1,
  lens: 1,
  lenses: 1,
  leo: 1,
  leon: 1,
  leonard: 1,
  leone: 1,
  les: 1,
  lesbian: 1,
  lesbians: 1,
  leslie: 1,
  less: 1,
  lesser: 1,
  lesson: 1,
  lessons: 1,
  let: 1,
  lets: 1,
  letter: 1,
  letters: 1,
  letting: 1,
  leu: 1,
  level: 1,
  levels: 1,
  levitra: 1,
  levy: 1,
  lewis: 1,
  lexington: 1,
  lexmark: 1,
  lexus: 1,
  lf: 1,
  lg: 1,
  li: 1,
  liabilities: 1,
  liability: 1,
  liable: 1,
  lib: 1,
  liberal: 1,
  liberia: 1,
  liberty: 1,
  librarian: 1,
  libraries: 1,
  library: 1,
  libs: 1,
  licence: 1,
  license: 1,
  licensed: 1,
  licenses: 1,
  licensing: 1,
  licking: 1,
  lid: 1,
  lie: 1,
  liechtenstein: 1,
  lies: 1,
  life: 1,
  lifestyle: 1,
  lifetime: 1,
  lift: 1,
  light: 1,
  lightbox: 1,
  lighter: 1,
  lighting: 1,
  lightning: 1,
  lights: 1,
  lightweight: 1,
  like: 1,
  liked: 1,
  likelihood: 1,
  likely: 1,
  likes: 1,
  likewise: 1,
  lil: 1,
  lime: 1,
  limit: 1,
  limitation: 1,
  limitations: 1,
  limited: 1,
  limiting: 1,
  limits: 1,
  limousines: 1,
  lincoln: 1,
  linda: 1,
  lindsay: 1,
  line: 1,
  linear: 1,
  lined: 1,
  lines: 1,
  lingerie: 1,
  link: 1,
  linked: 1,
  linking: 1,
  links: 1,
  linux: 1,
  lion: 1,
  lions: 1,
  lip: 1,
  lips: 1,
  liquid: 1,
  lisa: 1,
  list: 1,
  listed: 1,
  listen: 1,
  listening: 1,
  listing: 1,
  listings: 1,
  listprice: 1,
  lists: 1,
  lit: 1,
  lite: 1,
  literacy: 1,
  literally: 1,
  literary: 1,
  literature: 1,
  lithuania: 1,
  litigation: 1,
  little: 1,
  live: 1,
  livecam: 1,
  lived: 1,
  liver: 1,
  liverpool: 1,
  lives: 1,
  livesex: 1,
  livestock: 1,
  living: 1,
  liz: 1,
  ll: 1,
  llc: 1,
  lloyd: 1,
  llp: 1,
  lm: 1,
  ln: 1,
  lo: 1,
  load: 1,
  loaded: 1,
  loading: 1,
  loads: 1,
  loan: 1,
  loans: 1,
  lobby: 1,
  loc: 1,
  local: 1,
  locale: 1,
  locally: 1,
  locate: 1,
  located: 1,
  location: 1,
  locations: 1,
  locator: 1,
  lock: 1,
  locked: 1,
  locking: 1,
  locks: 1,
  lodge: 1,
  lodging: 1,
  log: 1,
  logan: 1,
  logged: 1,
  logging: 1,
  logic: 1,
  logical: 1,
  login: 1,
  logistics: 1,
  logitech: 1,
  logo: 1,
  logos: 1,
  logs: 1,
  lol: 1,
  lolita: 1,
  london: 1,
  lone: 1,
  lonely: 1,
  long: 1,
  longer: 1,
  longest: 1,
  longitude: 1,
  look: 1,
  looked: 1,
  looking: 1,
  looks: 1,
  looksmart: 1,
  lookup: 1,
  loop: 1,
  loops: 1,
  loose: 1,
  lopez: 1,
  lord: 1,
  los: 1,
  lose: 1,
  losing: 1,
  loss: 1,
  losses: 1,
  lost: 1,
  lot: 1,
  lots: 1,
  lottery: 1,
  lotus: 1,
  lou: 1,
  loud: 1,
  louis: 1,
  louise: 1,
  louisiana: 1,
  louisville: 1,
  lounge: 1,
  love: 1,
  loved: 1,
  lovely: 1,
  lover: 1,
  lovers: 1,
  loves: 1,
  loving: 1,
  low: 1,
  lower: 1,
  lowest: 1,
  lows: 1,
  lp: 1,
  ls: 1,
  lt: 1,
  ltd: 1,
  lu: 1,
  lucas: 1,
  lucia: 1,
  luck: 1,
  lucky: 1,
  lucy: 1,
  luggage: 1,
  luis: 1,
  luke: 1,
  lunch: 1,
  lung: 1,
  luther: 1,
  luxembourg: 1,
  luxury: 1,
  lycos: 1,
  lying: 1,
  lynn: 1,
  lyric: 1,
  lyrics: 1,
  m: 1,
  ma: 1,
  mac: 1,
  macedonia: 1,
  machine: 1,
  machinery: 1,
  machines: 1,
  macintosh: 1,
  macro: 1,
  macromedia: 1,
  mad: 1,
  madagascar: 1,
  made: 1,
  madison: 1,
  madness: 1,
  madonna: 1,
  madrid: 1,
  mae: 1,
  mag: 1,
  magazine: 1,
  magazines: 1,
  magic: 1,
  magical: 1,
  magnet: 1,
  magnetic: 1,
  magnificent: 1,
  magnitude: 1,
  mai: 1,
  maiden: 1,
  mail: 1,
  mailed: 1,
  mailing: 1,
  mailman: 1,
  mails: 1,
  mailto: 1,
  main: 1,
  maine: 1,
  mainland: 1,
  mainly: 1,
  mainstream: 1,
  maintain: 1,
  maintained: 1,
  maintaining: 1,
  maintains: 1,
  maintenance: 1,
  major: 1,
  majority: 1,
  make: 1,
  maker: 1,
  makers: 1,
  makes: 1,
  makeup: 1,
  making: 1,
  malawi: 1,
  malaysia: 1,
  maldives: 1,
  male: 1,
  males: 1,
  mali: 1,
  mall: 1,
  malpractice: 1,
  malta: 1,
  mambo: 1,
  man: 1,
  manage: 1,
  managed: 1,
  management: 1,
  manager: 1,
  managers: 1,
  managing: 1,
  manchester: 1,
  mandate: 1,
  mandatory: 1,
  manga: 1,
  manhattan: 1,
  manitoba: 1,
  manner: 1,
  manor: 1,
  manual: 1,
  manually: 1,
  manuals: 1,
  manufacture: 1,
  manufactured: 1,
  manufacturer: 1,
  manufacturers: 1,
  manufacturing: 1,
  many: 1,
  map: 1,
  maple: 1,
  mapping: 1,
  maps: 1,
  mar: 1,
  marathon: 1,
  marble: 1,
  marc: 1,
  march: 1,
  marco: 1,
  marcus: 1,
  mardi: 1,
  margaret: 1,
  margin: 1,
  maria: 1,
  mariah: 1,
  marie: 1,
  marijuana: 1,
  marilyn: 1,
  marina: 1,
  marine: 1,
  mario: 1,
  marion: 1,
  maritime: 1,
  mark: 1,
  marked: 1,
  marker: 1,
  markers: 1,
  market: 1,
  marketing: 1,
  marketplace: 1,
  markets: 1,
  marking: 1,
  marks: 1,
  marriage: 1,
  married: 1,
  marriott: 1,
  mars: 1,
  marsh: 1,
  marshall: 1,
  mart: 1,
  martha: 1,
  martial: 1,
  martin: 1,
  marvel: 1,
  mary: 1,
  maryland: 1,
  mas: 1,
  mask: 1,
  mason: 1,
  mass: 1,
  massachusetts: 1,
  massage: 1,
  massive: 1,
  master: 1,
  mastercard: 1,
  masters: 1,
  masturbating: 1,
  masturbation: 1,
  mat: 1,
  match: 1,
  matched: 1,
  matches: 1,
  matching: 1,
  mate: 1,
  material: 1,
  materials: 1,
  maternity: 1,
  math: 1,
  mathematical: 1,
  mathematics: 1,
  mating: 1,
  matrix: 1,
  mats: 1,
  matt: 1,
  matter: 1,
  matters: 1,
  matthew: 1,
  mattress: 1,
  mature: 1,
  maui: 1,
  mauritius: 1,
  max: 1,
  maximize: 1,
  maximum: 1,
  may: 1,
  maybe: 1,
  mayor: 1,
  mazda: 1,
  mb: 1,
  mba: 1,
  mc: 1,
  mcdonald: 1,
  md: 1,
  me: 1,
  meal: 1,
  meals: 1,
  mean: 1,
  meaning: 1,
  meaningful: 1,
  means: 1,
  meant: 1,
  meanwhile: 1,
  measure: 1,
  measured: 1,
  measurement: 1,
  measurements: 1,
  measures: 1,
  measuring: 1,
  meat: 1,
  mechanical: 1,
  mechanics: 1,
  mechanism: 1,
  mechanisms: 1,
  med: 1,
  medal: 1,
  media: 1,
  median: 1,
  mediawiki: 1,
  medicaid: 1,
  medical: 1,
  medicare: 1,
  medication: 1,
  medications: 1,
  medicine: 1,
  medicines: 1,
  medieval: 1,
  meditation: 1,
  mediterranean: 1,
  medium: 1,
  medline: 1,
  meet: 1,
  meeting: 1,
  meetings: 1,
  meets: 1,
  meetup: 1,
  mega: 1,
  mel: 1,
  melbourne: 1,
  melissa: 1,
  mem: 1,
  member: 1,
  members: 1,
  membership: 1,
  membrane: 1,
  memo: 1,
  memorabilia: 1,
  memorial: 1,
  memories: 1,
  memory: 1,
  memphis: 1,
  men: 1,
  mens: 1,
  ment: 1,
  mental: 1,
  mention: 1,
  mentioned: 1,
  mentor: 1,
  menu: 1,
  menus: 1,
  mercedes: 1,
  merchandise: 1,
  merchant: 1,
  merchants: 1,
  mercury: 1,
  mercy: 1,
  mere: 1,
  merely: 1,
  merge: 1,
  merger: 1,
  merit: 1,
  merry: 1,
  mesa: 1,
  mesh: 1,
  mess: 1,
  message: 1,
  messages: 1,
  messaging: 1,
  messenger: 1,
  met: 1,
  meta: 1,
  metabolism: 1,
  metadata: 1,
  metal: 1,
  metallic: 1,
  metallica: 1,
  metals: 1,
  meter: 1,
  meters: 1,
  method: 1,
  methodology: 1,
  methods: 1,
  metres: 1,
  metric: 1,
  metro: 1,
  metropolitan: 1,
  mexican: 1,
  mexico: 1,
  meyer: 1,
  mf: 1,
  mg: 1,
  mh: 1,
  mhz: 1,
  mi: 1,
  mia: 1,
  miami: 1,
  mic: 1,
  mice: 1,
  michael: 1,
  michel: 1,
  michelle: 1,
  michigan: 1,
  micro: 1,
  microphone: 1,
  microsoft: 1,
  microwave: 1,
  mid: 1,
  middle: 1,
  midi: 1,
  midlands: 1,
  midnight: 1,
  midwest: 1,
  might: 1,
  mighty: 1,
  migration: 1,
  mike: 1,
  mil: 1,
  milan: 1,
  mild: 1,
  mile: 1,
  mileage: 1,
  miles: 1,
  milf: 1,
  milfhunter: 1,
  milfs: 1,
  military: 1,
  milk: 1,
  mill: 1,
  millennium: 1,
  miller: 1,
  million: 1,
  millions: 1,
  mills: 1,
  milton: 1,
  milwaukee: 1,
  mime: 1,
  min: 1,
  mind: 1,
  minds: 1,
  mine: 1,
  mineral: 1,
  minerals: 1,
  mines: 1,
  mini: 1,
  miniature: 1,
  minimal: 1,
  minimize: 1,
  minimum: 1,
  mining: 1,
  minister: 1,
  ministers: 1,
  ministries: 1,
  ministry: 1,
  minneapolis: 1,
  minnesota: 1,
  minolta: 1,
  minor: 1,
  minority: 1,
  mins: 1,
  mint: 1,
  minus: 1,
  minute: 1,
  minutes: 1,
  miracle: 1,
  mirror: 1,
  mirrors: 1,
  misc: 1,
  miscellaneous: 1,
  miss: 1,
  missed: 1,
  missile: 1,
  missing: 1,
  mission: 1,
  missions: 1,
  mississippi: 1,
  missouri: 1,
  mistake: 1,
  mistakes: 1,
  mistress: 1,
  mit: 1,
  mitchell: 1,
  mitsubishi: 1,
  mix: 1,
  mixed: 1,
  mixer: 1,
  mixing: 1,
  mixture: 1,
  mj: 1,
  ml: 1,
  mlb: 1,
  mls: 1,
  mm: 1,
  mn: 1,
  mo: 1,
  mobile: 1,
  mobiles: 1,
  mobility: 1,
  mod: 1,
  mode: 1,
  model: 1,
  modeling: 1,
  modelling: 1,
  models: 1,
  modem: 1,
  modems: 1,
  moderate: 1,
  moderator: 1,
  moderators: 1,
  modern: 1,
  modes: 1,
  modification: 1,
  modifications: 1,
  modified: 1,
  modify: 1,
  mods: 1,
  modular: 1,
  module: 1,
  modules: 1,
  moisture: 1,
  mold: 1,
  moldova: 1,
  molecular: 1,
  molecules: 1,
  mom: 1,
  moment: 1,
  moments: 1,
  momentum: 1,
  moms: 1,
  mon: 1,
  monaco: 1,
  monday: 1,
  monetary: 1,
  money: 1,
  mongolia: 1,
  monica: 1,
  monitor: 1,
  monitored: 1,
  monitoring: 1,
  monitors: 1,
  monkey: 1,
  mono: 1,
  monroe: 1,
  monster: 1,
  monsters: 1,
  montana: 1,
  monte: 1,
  montgomery: 1,
  month: 1,
  monthly: 1,
  months: 1,
  montreal: 1,
  mood: 1,
  moon: 1,
  moore: 1,
  moral: 1,
  more: 1,
  moreover: 1,
  morgan: 1,
  morning: 1,
  morocco: 1,
  morris: 1,
  morrison: 1,
  mortality: 1,
  mortgage: 1,
  mortgages: 1,
  moscow: 1,
  moses: 1,
  moss: 1,
  most: 1,
  mostly: 1,
  motel: 1,
  motels: 1,
  mother: 1,
  motherboard: 1,
  mothers: 1,
  motion: 1,
  motivated: 1,
  motivation: 1,
  motor: 1,
  motorcycle: 1,
  motorcycles: 1,
  motorola: 1,
  motors: 1,
  mount: 1,
  mountain: 1,
  mountains: 1,
  mounted: 1,
  mounting: 1,
  mounts: 1,
  mouse: 1,
  mouth: 1,
  move: 1,
  moved: 1,
  movement: 1,
  movements: 1,
  movers: 1,
  moves: 1,
  movie: 1,
  movies: 1,
  moving: 1,
  mozambique: 1,
  mozilla: 1,
  mp: 1,
  mpeg: 1,
  mpegs: 1,
  mpg: 1,
  mph: 1,
  mr: 1,
  mrna: 1,
  mrs: 1,
  ms: 1,
  msg: 1,
  msgid: 1,
  msgstr: 1,
  msie: 1,
  msn: 1,
  mt: 1,
  mtv: 1,
  mu: 1,
  much: 1,
  mud: 1,
  mug: 1,
  multi: 1,
  multimedia: 1,
  multiple: 1,
  mumbai: 1,
  munich: 1,
  municipal: 1,
  municipality: 1,
  murder: 1,
  murphy: 1,
  murray: 1,
  muscle: 1,
  muscles: 1,
  museum: 1,
  museums: 1,
  music: 1,
  musical: 1,
  musician: 1,
  musicians: 1,
  muslim: 1,
  muslims: 1,
  must: 1,
  mustang: 1,
  mutual: 1,
  muze: 1,
  mv: 1,
  mw: 1,
  mx: 1,
  my: 1,
  myanmar: 1,
  myers: 1,
  myrtle: 1,
  myself: 1,
  mysimon: 1,
  myspace: 1,
  mysql: 1,
  mysterious: 1,
  mystery: 1,
  myth: 1,
  n: 1,
  na: 1,
  nail: 1,
  nails: 1,
  naked: 1,
  nam: 1,
  name: 1,
  named: 1,
  namely: 1,
  names: 1,
  namespace: 1,
  namibia: 1,
  nancy: 1,
  nano: 1,
  naples: 1,
  narrative: 1,
  narrow: 1,
  nasa: 1,
  nascar: 1,
  nasdaq: 1,
  nashville: 1,
  nasty: 1,
  nat: 1,
  nathan: 1,
  nation: 1,
  national: 1,
  nationally: 1,
  nations: 1,
  nationwide: 1,
  native: 1,
  nato: 1,
  natural: 1,
  naturally: 1,
  naturals: 1,
  nature: 1,
  naughty: 1,
  nav: 1,
  naval: 1,
  navigate: 1,
  navigation: 1,
  navigator: 1,
  navy: 1,
  nb: 1,
  nba: 1,
  nbc: 1,
  nc: 1,
  ncaa: 1,
  nd: 1,
  ne: 1,
  near: 1,
  nearby: 1,
  nearest: 1,
  nearly: 1,
  nebraska: 1,
  nec: 1,
  necessarily: 1,
  necessary: 1,
  necessity: 1,
  neck: 1,
  necklace: 1,
  need: 1,
  needed: 1,
  needle: 1,
  needs: 1,
  negative: 1,
  negotiation: 1,
  negotiations: 1,
  neighbor: 1,
  neighborhood: 1,
  neighbors: 1,
  neil: 1,
  neither: 1,
  nelson: 1,
  neo: 1,
  neon: 1,
  nepal: 1,
  nerve: 1,
  nervous: 1,
  nest: 1,
  nested: 1,
  net: 1,
  netherlands: 1,
  netscape: 1,
  network: 1,
  networking: 1,
  networks: 1,
  neural: 1,
  neutral: 1,
  nevada: 1,
  never: 1,
  nevertheless: 1,
  new: 1,
  newark: 1,
  newbie: 1,
  newcastle: 1,
  newer: 1,
  newest: 1,
  newfoundland: 1,
  newly: 1,
  newman: 1,
  newport: 1,
  news: 1,
  newsletter: 1,
  newsletters: 1,
  newspaper: 1,
  newspapers: 1,
  newton: 1,
  next: 1,
  nextel: 1,
  nfl: 1,
  ng: 1,
  nh: 1,
  nhl: 1,
  nhs: 1,
  ni: 1,
  niagara: 1,
  nicaragua: 1,
  nice: 1,
  nicholas: 1,
  nick: 1,
  nickel: 1,
  nickname: 1,
  nicole: 1,
  niger: 1,
  nigeria: 1,
  night: 1,
  nightlife: 1,
  nightmare: 1,
  nights: 1,
  nike: 1,
  nikon: 1,
  nil: 1,
  nine: 1,
  nintendo: 1,
  nipple: 1,
  nipples: 1,
  nirvana: 1,
  nissan: 1,
  nitrogen: 1,
  nj: 1,
  nl: 1,
  nm: 1,
  nn: 1,
  no: 1,
  noble: 1,
  nobody: 1,
  node: 1,
  nodes: 1,
  noise: 1,
  nokia: 1,
  nominated: 1,
  nomination: 1,
  nominations: 1,
  non: 1,
  none: 1,
  nonprofit: 1,
  noon: 1,
  nor: 1,
  norfolk: 1,
  norm: 1,
  normal: 1,
  normally: 1,
  norman: 1,
  north: 1,
  northeast: 1,
  northern: 1,
  northwest: 1,
  norton: 1,
  norway: 1,
  norwegian: 1,
  nose: 1,
  not: 1,
  note: 1,
  notebook: 1,
  notebooks: 1,
  noted: 1,
  notes: 1,
  nothing: 1,
  notice: 1,
  noticed: 1,
  notices: 1,
  notification: 1,
  notifications: 1,
  notified: 1,
  notify: 1,
  notion: 1,
  notre: 1,
  nottingham: 1,
  nov: 1,
  nova: 1,
  novel: 1,
  novels: 1,
  novelty: 1,
  november: 1,
  now: 1,
  nowhere: 1,
  np: 1,
  nr: 1,
  ns: 1,
  nsw: 1,
  nt: 1,
  ntsc: 1,
  nu: 1,
  nuclear: 1,
  nude: 1,
  nudist: 1,
  nudity: 1,
  nuke: 1,
  null: 1,
  number: 1,
  numbers: 1,
  numeric: 1,
  numerical: 1,
  numerous: 1,
  nurse: 1,
  nursery: 1,
  nurses: 1,
  nursing: 1,
  nut: 1,
  nutrition: 1,
  nutritional: 1,
  nuts: 1,
  nutten: 1,
  nv: 1,
  nvidia: 1,
  nw: 1,
  ny: 1,
  nyc: 1,
  nylon: 1,
  nz: 1,
  o: 1,
  oak: 1,
  oakland: 1,
  oaks: 1,
  oasis: 1,
  ob: 1,
  obesity: 1,
  obituaries: 1,
  obj: 1,
  object: 1,
  objective: 1,
  objectives: 1,
  objects: 1,
  obligation: 1,
  obligations: 1,
  observation: 1,
  observations: 1,
  observe: 1,
  observed: 1,
  observer: 1,
  obtain: 1,
  obtained: 1,
  obtaining: 1,
  obvious: 1,
  obviously: 1,
  oc: 1,
  occasion: 1,
  occasional: 1,
  occasionally: 1,
  occasions: 1,
  occupation: 1,
  occupational: 1,
  occupations: 1,
  occupied: 1,
  occur: 1,
  occurred: 1,
  occurrence: 1,
  occurring: 1,
  occurs: 1,
  ocean: 1,
  oclc: 1,
  oct: 1,
  october: 1,
  odd: 1,
  odds: 1,
  oe: 1,
  oecd: 1,
  oem: 1,
  of: 1,
  off: 1,
  offense: 1,
  offensive: 1,
  offer: 1,
  offered: 1,
  offering: 1,
  offerings: 1,
  offers: 1,
  office: 1,
  officer: 1,
  officers: 1,
  offices: 1,
  official: 1,
  officially: 1,
  officials: 1,
  offline: 1,
  offset: 1,
  offshore: 1,
  often: 1,
  og: 1,
  oh: 1,
  ohio: 1,
  oil: 1,
  oils: 1,
  ok: 1,
  okay: 1,
  oklahoma: 1,
  ol: 1,
  old: 1,
  older: 1,
  oldest: 1,
  olive: 1,
  oliver: 1,
  olympic: 1,
  olympics: 1,
  olympus: 1,
  om: 1,
  omaha: 1,
  oman: 1,
  omega: 1,
  omissions: 1,
  on: 1,
  once: 1,
  one: 1,
  ones: 1,
  ongoing: 1,
  onion: 1,
  online: 1,
  only: 1,
  ons: 1,
  ontario: 1,
  onto: 1,
  oo: 1,
  ooo: 1,
  oops: 1,
  op: 1,
  open: 1,
  opened: 1,
  opening: 1,
  openings: 1,
  opens: 1,
  opera: 1,
  operate: 1,
  operated: 1,
  operates: 1,
  operating: 1,
  operation: 1,
  operational: 1,
  operations: 1,
  operator: 1,
  operators: 1,
  opinion: 1,
  opinions: 1,
  opponent: 1,
  opponents: 1,
  opportunities: 1,
  opportunity: 1,
  opposed: 1,
  opposite: 1,
  opposition: 1,
  opt: 1,
  optical: 1,
  optics: 1,
  optimal: 1,
  optimization: 1,
  optimize: 1,
  optimum: 1,
  option: 1,
  optional: 1,
  options: 1,
  or: 1,
  oracle: 1,
  oral: 1,
  orange: 1,
  orbit: 1,
  orchestra: 1,
  order: 1,
  ordered: 1,
  ordering: 1,
  orders: 1,
  ordinance: 1,
  ordinary: 1,
  oregon: 1,
  org: 1,
  organ: 1,
  organic: 1,
  organisation: 1,
  organisations: 1,
  organised: 1,
  organisms: 1,
  organization: 1,
  organizational: 1,
  organizations: 1,
  organize: 1,
  organized: 1,
  organizer: 1,
  organizing: 1,
  orgasm: 1,
  orgy: 1,
  oriental: 1,
  orientation: 1,
  oriented: 1,
  origin: 1,
  original: 1,
  originally: 1,
  origins: 1,
  orlando: 1,
  orleans: 1,
  os: 1,
  oscar: 1,
  ot: 1,
  other: 1,
  others: 1,
  otherwise: 1,
  ottawa: 1,
  ou: 1,
  ought: 1,
  our: 1,
  ours: 1,
  ourselves: 1,
  out: 1,
  outcome: 1,
  outcomes: 1,
  outdoor: 1,
  outdoors: 1,
  outer: 1,
  outlet: 1,
  outlets: 1,
  outline: 1,
  outlined: 1,
  outlook: 1,
  output: 1,
  outputs: 1,
  outreach: 1,
  outside: 1,
  outsourcing: 1,
  outstanding: 1,
  oval: 1,
  oven: 1,
  over: 1,
  overall: 1,
  overcome: 1,
  overhead: 1,
  overnight: 1,
  overseas: 1,
  overview: 1,
  owen: 1,
  own: 1,
  owned: 1,
  owner: 1,
  owners: 1,
  ownership: 1,
  owns: 1,
  oxford: 1,
  oxide: 1,
  oxygen: 1,
  oz: 1,
  ozone: 1
};

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon10000", function() { return TheMostCommon10000; });
// https://englishgrammarhere.com/vocabulary/10000-most-common-words-in-english-part-5/
const TheMostCommon10000 = {
  p: 1,
  pa: 1,
  pac: 1,
  pace: 1,
  pacific: 1,
  pack: 1,
  package: 1,
  packages: 1,
  packaging: 1,
  packard: 1,
  packed: 1,
  packet: 1,
  packets: 1,
  packing: 1,
  packs: 1,
  pad: 1,
  pads: 1,
  page: 1,
  pages: 1,
  paid: 1,
  pain: 1,
  painful: 1,
  paint: 1,
  paintball: 1,
  painted: 1,
  painting: 1,
  paintings: 1,
  pair: 1,
  pairs: 1,
  pakistan: 1,
  pal: 1,
  palace: 1,
  pale: 1,
  palestine: 1,
  palestinian: 1,
  palm: 1,
  palmer: 1,
  pam: 1,
  pamela: 1,
  pan: 1,
  panama: 1,
  panasonic: 1,
  panel: 1,
  panels: 1,
  panic: 1,
  panties: 1,
  pants: 1,
  pantyhose: 1,
  paper: 1,
  paperback: 1,
  paperbacks: 1,
  papers: 1,
  papua: 1,
  par: 1,
  para: 1,
  parade: 1,
  paradise: 1,
  paragraph: 1,
  paragraphs: 1,
  paraguay: 1,
  parallel: 1,
  parameter: 1,
  parameters: 1,
  parcel: 1,
  parent: 1,
  parental: 1,
  parenting: 1,
  parents: 1,
  paris: 1,
  parish: 1,
  park: 1,
  parker: 1,
  parking: 1,
  parks: 1,
  parliament: 1,
  parliamentary: 1,
  part: 1,
  partial: 1,
  partially: 1,
  participant: 1,
  participants: 1,
  participate: 1,
  participated: 1,
  participating: 1,
  participation: 1,
  particle: 1,
  particles: 1,
  particular: 1,
  particularly: 1,
  parties: 1,
  partition: 1,
  partly: 1,
  partner: 1,
  partners: 1,
  partnership: 1,
  partnerships: 1,
  parts: 1,
  party: 1,
  pas: 1,
  paso: 1,
  pass: 1,
  passage: 1,
  passed: 1,
  passenger: 1,
  passengers: 1,
  passes: 1,
  passing: 1,
  passion: 1,
  passive: 1,
  passport: 1,
  password: 1,
  passwords: 1,
  past: 1,
  pasta: 1,
  paste: 1,
  pastor: 1,
  pat: 1,
  patch: 1,
  patches: 1,
  patent: 1,
  patents: 1,
  path: 1,
  pathology: 1,
  paths: 1,
  patient: 1,
  patients: 1,
  patio: 1,
  patricia: 1,
  patrick: 1,
  patrol: 1,
  pattern: 1,
  patterns: 1,
  paul: 1,
  pavilion: 1,
  paxil: 1,
  pay: 1,
  payable: 1,
  payday: 1,
  paying: 1,
  payment: 1,
  payments: 1,
  paypal: 1,
  payroll: 1,
  pays: 1,
  pb: 1,
  pc: 1,
  pci: 1,
  pcs: 1,
  pct: 1,
  pd: 1,
  pda: 1,
  pdas: 1,
  pdf: 1,
  pdt: 1,
  pe: 1,
  peace: 1,
  peaceful: 1,
  peak: 1,
  pearl: 1,
  peas: 1,
  pediatric: 1,
  pee: 1,
  peeing: 1,
  peer: 1,
  peers: 1,
  pen: 1,
  penalties: 1,
  penalty: 1,
  pencil: 1,
  pendant: 1,
  pending: 1,
  penetration: 1,
  penguin: 1,
  peninsula: 1,
  penis: 1,
  penn: 1,
  pennsylvania: 1,
  penny: 1,
  pens: 1,
  pension: 1,
  pensions: 1,
  pentium: 1,
  people: 1,
  peoples: 1,
  pepper: 1,
  per: 1,
  perceived: 1,
  percent: 1,
  percentage: 1,
  perception: 1,
  perfect: 1,
  perfectly: 1,
  perform: 1,
  performance: 1,
  performances: 1,
  performed: 1,
  performer: 1,
  performing: 1,
  performs: 1,
  perfume: 1,
  perhaps: 1,
  period: 1,
  periodic: 1,
  periodically: 1,
  periods: 1,
  peripheral: 1,
  peripherals: 1,
  perl: 1,
  permalink: 1,
  permanent: 1,
  permission: 1,
  permissions: 1,
  permit: 1,
  permits: 1,
  permitted: 1,
  perry: 1,
  persian: 1,
  persistent: 1,
  person: 1,
  personal: 1,
  personality: 1,
  personalized: 1,
  personally: 1,
  personals: 1,
  personnel: 1,
  persons: 1,
  perspective: 1,
  perspectives: 1,
  perth: 1,
  peru: 1,
  pest: 1,
  pet: 1,
  pete: 1,
  peter: 1,
  petersburg: 1,
  peterson: 1,
  petite: 1,
  petition: 1,
  petroleum: 1,
  pets: 1,
  pf: 1,
  pg: 1,
  pgp: 1,
  ph: 1,
  phantom: 1,
  pharmaceutical: 1,
  pharmaceuticals: 1,
  pharmacies: 1,
  pharmacology: 1,
  pharmacy: 1,
  phase: 1,
  phases: 1,
  phd: 1,
  phenomenon: 1,
  phentermine: 1,
  phi: 1,
  phil: 1,
  philadelphia: 1,
  philip: 1,
  philippines: 1,
  philips: 1,
  phillips: 1,
  philosophy: 1,
  phoenix: 1,
  phone: 1,
  phones: 1,
  photo: 1,
  photograph: 1,
  photographer: 1,
  photographers: 1,
  photographic: 1,
  photographs: 1,
  photography: 1,
  photos: 1,
  photoshop: 1,
  php: 1,
  phpbb: 1,
  phrase: 1,
  phrases: 1,
  phys: 1,
  physical: 1,
  physically: 1,
  physician: 1,
  physicians: 1,
  physics: 1,
  physiology: 1,
  pi: 1,
  piano: 1,
  pic: 1,
  pichunter: 1,
  pick: 1,
  picked: 1,
  picking: 1,
  picks: 1,
  pickup: 1,
  picnic: 1,
  pics: 1,
  picture: 1,
  pictures: 1,
  pie: 1,
  piece: 1,
  pieces: 1,
  pierce: 1,
  pierre: 1,
  pig: 1,
  pike: 1,
  pill: 1,
  pillow: 1,
  pills: 1,
  pilot: 1,
  pin: 1,
  pine: 1,
  ping: 1,
  pink: 1,
  pins: 1,
  pioneer: 1,
  pipe: 1,
  pipeline: 1,
  pipes: 1,
  pirates: 1,
  piss: 1,
  pissing: 1,
  pit: 1,
  pitch: 1,
  pittsburgh: 1,
  pix: 1,
  pixel: 1,
  pixels: 1,
  pizza: 1,
  pj: 1,
  pk: 1,
  pl: 1,
  place: 1,
  placed: 1,
  placement: 1,
  places: 1,
  placing: 1,
  plain: 1,
  plains: 1,
  plaintiff: 1,
  plan: 1,
  plane: 1,
  planes: 1,
  planet: 1,
  planets: 1,
  planned: 1,
  planner: 1,
  planners: 1,
  planning: 1,
  plans: 1,
  plant: 1,
  plants: 1,
  plasma: 1,
  plastic: 1,
  plastics: 1,
  plate: 1,
  plates: 1,
  platform: 1,
  platforms: 1,
  platinum: 1,
  play: 1,
  playback: 1,
  playboy: 1,
  played: 1,
  player: 1,
  players: 1,
  playing: 1,
  playlist: 1,
  plays: 1,
  playstation: 1,
  plaza: 1,
  plc: 1,
  pleasant: 1,
  please: 1,
  pleased: 1,
  pleasure: 1,
  pledge: 1,
  plenty: 1,
  plot: 1,
  plots: 1,
  plug: 1,
  plugin: 1,
  plugins: 1,
  plumbing: 1,
  plus: 1,
  plymouth: 1,
  pm: 1,
  pmc: 1,
  pmid: 1,
  pn: 1,
  po: 1,
  pocket: 1,
  pockets: 1,
  pod: 1,
  podcast: 1,
  podcasts: 1,
  poem: 1,
  poems: 1,
  poet: 1,
  poetry: 1,
  point: 1,
  pointed: 1,
  pointer: 1,
  pointing: 1,
  points: 1,
  poison: 1,
  pokemon: 1,
  poker: 1,
  poland: 1,
  polar: 1,
  pole: 1,
  police: 1,
  policies: 1,
  policy: 1,
  polish: 1,
  polished: 1,
  political: 1,
  politicians: 1,
  politics: 1,
  poll: 1,
  polls: 1,
  pollution: 1,
  polo: 1,
  poly: 1,
  polyester: 1,
  polymer: 1,
  polyphonic: 1,
  pond: 1,
  pontiac: 1,
  pool: 1,
  pools: 1,
  poor: 1,
  pop: 1,
  pope: 1,
  popular: 1,
  popularity: 1,
  population: 1,
  populations: 1,
  por: 1,
  porcelain: 1,
  pork: 1,
  porn: 1,
  porno: 1,
  porsche: 1,
  port: 1,
  portable: 1,
  portal: 1,
  porter: 1,
  portfolio: 1,
  portion: 1,
  portions: 1,
  portland: 1,
  portrait: 1,
  portraits: 1,
  ports: 1,
  portsmouth: 1,
  portugal: 1,
  portuguese: 1,
  pos: 1,
  pose: 1,
  posing: 1,
  position: 1,
  positioning: 1,
  positions: 1,
  positive: 1,
  possess: 1,
  possession: 1,
  possibilities: 1,
  possibility: 1,
  possible: 1,
  possibly: 1,
  post: 1,
  postage: 1,
  postal: 1,
  postcard: 1,
  postcards: 1,
  posted: 1,
  poster: 1,
  posters: 1,
  posting: 1,
  postings: 1,
  postposted: 1,
  posts: 1,
  pot: 1,
  potato: 1,
  potatoes: 1,
  potential: 1,
  potentially: 1,
  potter: 1,
  pottery: 1,
  poultry: 1,
  pound: 1,
  pounds: 1,
  pour: 1,
  poverty: 1,
  powder: 1,
  powell: 1,
  power: 1,
  powered: 1,
  powerful: 1,
  powerpoint: 1,
  powers: 1,
  powerseller: 1,
  pp: 1,
  ppc: 1,
  ppm: 1,
  pr: 1,
  practical: 1,
  practice: 1,
  practices: 1,
  practitioner: 1,
  practitioners: 1,
  prague: 1,
  prairie: 1,
  praise: 1,
  pray: 1,
  prayer: 1,
  prayers: 1,
  pre: 1,
  preceding: 1,
  precious: 1,
  precipitation: 1,
  precise: 1,
  precisely: 1,
  precision: 1,
  predict: 1,
  predicted: 1,
  prediction: 1,
  predictions: 1,
  prefer: 1,
  preference: 1,
  preferences: 1,
  preferred: 1,
  prefers: 1,
  prefix: 1,
  pregnancy: 1,
  pregnant: 1,
  preliminary: 1,
  premier: 1,
  premiere: 1,
  premises: 1,
  premium: 1,
  prep: 1,
  prepaid: 1,
  preparation: 1,
  prepare: 1,
  prepared: 1,
  preparing: 1,
  prerequisite: 1,
  prescribed: 1,
  prescription: 1,
  presence: 1,
  present: 1,
  presentation: 1,
  presentations: 1,
  presented: 1,
  presenting: 1,
  presently: 1,
  presents: 1,
  preservation: 1,
  preserve: 1,
  president: 1,
  presidential: 1,
  press: 1,
  pressed: 1,
  pressing: 1,
  pressure: 1,
  preston: 1,
  pretty: 1,
  prev: 1,
  prevent: 1,
  preventing: 1,
  prevention: 1,
  preview: 1,
  previews: 1,
  previous: 1,
  previously: 1,
  price: 1,
  priced: 1,
  prices: 1,
  pricing: 1,
  pride: 1,
  priest: 1,
  primarily: 1,
  primary: 1,
  prime: 1,
  prince: 1,
  princess: 1,
  princeton: 1,
  principal: 1,
  principle: 1,
  principles: 1,
  print: 1,
  printable: 1,
  printed: 1,
  printer: 1,
  printers: 1,
  printing: 1,
  prints: 1,
  prior: 1,
  priorities: 1,
  priority: 1,
  prison: 1,
  prisoner: 1,
  prisoners: 1,
  privacy: 1,
  private: 1,
  privilege: 1,
  privileges: 1,
  prix: 1,
  prize: 1,
  prizes: 1,
  pro: 1,
  probability: 1,
  probably: 1,
  probe: 1,
  problem: 1,
  problems: 1,
  proc: 1,
  procedure: 1,
  procedures: 1,
  proceed: 1,
  proceeding: 1,
  proceedings: 1,
  proceeds: 1,
  process: 1,
  processed: 1,
  processes: 1,
  processing: 1,
  processor: 1,
  processors: 1,
  procurement: 1,
  produce: 1,
  produced: 1,
  producer: 1,
  producers: 1,
  produces: 1,
  producing: 1,
  product: 1,
  production: 1,
  productions: 1,
  productive: 1,
  productivity: 1,
  products: 1,
  profession: 1,
  professional: 1,
  professionals: 1,
  professor: 1,
  profile: 1,
  profiles: 1,
  profit: 1,
  profits: 1,
  program: 1,
  programme: 1,
  programmer: 1,
  programmers: 1,
  programmes: 1,
  programming: 1,
  programs: 1,
  progress: 1,
  progressive: 1,
  prohibited: 1,
  project: 1,
  projected: 1,
  projection: 1,
  projector: 1,
  projectors: 1,
  projects: 1,
  prominent: 1,
  promise: 1,
  promised: 1,
  promises: 1,
  promising: 1,
  promo: 1,
  promote: 1,
  promoted: 1,
  promotes: 1,
  promoting: 1,
  promotion: 1,
  promotional: 1,
  promotions: 1,
  prompt: 1,
  promptly: 1,
  proof: 1,
  propecia: 1,
  proper: 1,
  properly: 1,
  properties: 1,
  property: 1,
  prophet: 1,
  proportion: 1,
  proposal: 1,
  proposals: 1,
  propose: 1,
  proposed: 1,
  proposition: 1,
  proprietary: 1,
  pros: 1,
  prospect: 1,
  prospective: 1,
  prospects: 1,
  prostate: 1,
  prostores: 1,
  prot: 1,
  protect: 1,
  protected: 1,
  protecting: 1,
  protection: 1,
  protective: 1,
  protein: 1,
  proteins: 1,
  protest: 1,
  protocol: 1,
  protocols: 1,
  prototype: 1,
  proud: 1,
  proudly: 1,
  prove: 1,
  proved: 1,
  proven: 1,
  provide: 1,
  provided: 1,
  providence: 1,
  provider: 1,
  providers: 1,
  provides: 1,
  providing: 1,
  province: 1,
  provinces: 1,
  provincial: 1,
  provision: 1,
  provisions: 1,
  proxy: 1,
  prozac: 1,
  ps: 1,
  psi: 1,
  psp: 1,
  pst: 1,
  psychiatry: 1,
  psychological: 1,
  psychology: 1,
  pt: 1,
  pts: 1,
  pty: 1,
  pub: 1,
  public: 1,
  publication: 1,
  publications: 1,
  publicity: 1,
  publicly: 1,
  publish: 1,
  published: 1,
  publisher: 1,
  publishers: 1,
  publishing: 1,
  pubmed: 1,
  pubs: 1,
  puerto: 1,
  pull: 1,
  pulled: 1,
  pulling: 1,
  pulse: 1,
  pump: 1,
  pumps: 1,
  punch: 1,
  punishment: 1,
  punk: 1,
  pupils: 1,
  puppy: 1,
  purchase: 1,
  purchased: 1,
  purchases: 1,
  purchasing: 1,
  pure: 1,
  purple: 1,
  purpose: 1,
  purposes: 1,
  purse: 1,
  pursuant: 1,
  pursue: 1,
  pursuit: 1,
  push: 1,
  pushed: 1,
  pushing: 1,
  pussy: 1,
  put: 1,
  puts: 1,
  putting: 1,
  puzzle: 1,
  puzzles: 1,
  pvc: 1,
  python: 1,
  q: 1,
  qatar: 1,
  qc: 1,
  qld: 1,
  qt: 1,
  qty: 1,
  quad: 1,
  qualification: 1,
  qualifications: 1,
  qualified: 1,
  qualify: 1,
  qualifying: 1,
  qualities: 1,
  quality: 1,
  quantitative: 1,
  quantities: 1,
  quantity: 1,
  quantum: 1,
  quarter: 1,
  quarterly: 1,
  quarters: 1,
  que: 1,
  quebec: 1,
  queen: 1,
  queens: 1,
  queensland: 1,
  queries: 1,
  query: 1,
  quest: 1,
  question: 1,
  questionnaire: 1,
  questions: 1,
  queue: 1,
  qui: 1,
  quick: 1,
  quickly: 1,
  quiet: 1,
  quilt: 1,
  quit: 1,
  quite: 1,
  quiz: 1,
  quizzes: 1,
  quotations: 1,
  quote: 1,
  quoted: 1,
  quotes: 1,
  r: 1,
  ra: 1,
  rabbit: 1,
  race: 1,
  races: 1,
  rachel: 1,
  racial: 1,
  racing: 1,
  rack: 1,
  racks: 1,
  radar: 1,
  radiation: 1,
  radical: 1,
  radio: 1,
  radios: 1,
  radius: 1,
  rage: 1,
  raid: 1,
  rail: 1,
  railroad: 1,
  railway: 1,
  rain: 1,
  rainbow: 1,
  raise: 1,
  raised: 1,
  raises: 1,
  raising: 1,
  raleigh: 1,
  rally: 1,
  ralph: 1,
  ram: 1,
  ran: 1,
  ranch: 1,
  rand: 1,
  random: 1,
  randy: 1,
  range: 1,
  ranger: 1,
  rangers: 1,
  ranges: 1,
  ranging: 1,
  rank: 1,
  ranked: 1,
  ranking: 1,
  rankings: 1,
  ranks: 1,
  rap: 1,
  rape: 1,
  rapid: 1,
  rapidly: 1,
  rapids: 1,
  rare: 1,
  rarely: 1,
  rat: 1,
  rate: 1,
  rated: 1,
  rates: 1,
  rather: 1,
  rating: 1,
  ratings: 1,
  ratio: 1,
  rational: 1,
  ratios: 1,
  rats: 1,
  raw: 1,
  ray: 1,
  raymond: 1,
  rays: 1,
  rb: 1,
  rc: 1,
  rca: 1,
  rd: 1,
  re: 1,
  reach: 1,
  reached: 1,
  reaches: 1,
  reaching: 1,
  reaction: 1,
  reactions: 1,
  read: 1,
  reader: 1,
  readers: 1,
  readily: 1,
  reading: 1,
  readings: 1,
  reads: 1,
  ready: 1,
  real: 1,
  realistic: 1,
  reality: 1,
  realize: 1,
  realized: 1,
  really: 1,
  realm: 1,
  realtor: 1,
  realtors: 1,
  realty: 1,
  rear: 1,
  reason: 1,
  reasonable: 1,
  reasonably: 1,
  reasoning: 1,
  reasons: 1,
  rebate: 1,
  rebates: 1,
  rebecca: 1,
  rebel: 1,
  rebound: 1,
  rec: 1,
  recall: 1,
  receipt: 1,
  receive: 1,
  received: 1,
  receiver: 1,
  receivers: 1,
  receives: 1,
  receiving: 1,
  recent: 1,
  recently: 1,
  reception: 1,
  receptor: 1,
  receptors: 1,
  recipe: 1,
  recipes: 1,
  recipient: 1,
  recipients: 1,
  recognised: 1,
  recognition: 1,
  recognize: 1,
  recognized: 1,
  recommend: 1,
  recommendation: 1,
  recommendations: 1,
  recommended: 1,
  recommends: 1,
  reconstruction: 1,
  record: 1,
  recorded: 1,
  recorder: 1,
  recorders: 1,
  recording: 1,
  recordings: 1,
  records: 1,
  recover: 1,
  recovered: 1,
  recovery: 1,
  recreation: 1,
  recreational: 1,
  recruiting: 1,
  recruitment: 1,
  recycling: 1,
  red: 1,
  redeem: 1,
  redhead: 1,
  reduce: 1,
  reduced: 1,
  reduces: 1,
  reducing: 1,
  reduction: 1,
  reductions: 1,
  reed: 1,
  reef: 1,
  reel: 1,
  ref: 1,
  refer: 1,
  reference: 1,
  referenced: 1,
  references: 1,
  referral: 1,
  referrals: 1,
  referred: 1,
  referring: 1,
  refers: 1,
  refinance: 1,
  refine: 1,
  refined: 1,
  reflect: 1,
  reflected: 1,
  reflection: 1,
  reflections: 1,
  reflects: 1,
  reform: 1,
  reforms: 1,
  refresh: 1,
  refrigerator: 1,
  refugees: 1,
  refund: 1,
  refurbished: 1,
  refuse: 1,
  refused: 1,
  reg: 1,
  regard: 1,
  regarded: 1,
  regarding: 1,
  regardless: 1,
  regards: 1,
  reggae: 1,
  regime: 1,
  region: 1,
  regional: 1,
  regions: 1,
  register: 1,
  registered: 1,
  registrar: 1,
  registration: 1,
  registry: 1,
  regression: 1,
  regular: 1,
  regularly: 1,
  regulated: 1,
  regulation: 1,
  regulations: 1,
  regulatory: 1,
  rehab: 1,
  rehabilitation: 1,
  reid: 1,
  reject: 1,
  rejected: 1,
  relate: 1,
  related: 1,
  relates: 1,
  relating: 1,
  relation: 1,
  relations: 1,
  relationship: 1,
  relationships: 1,
  relative: 1,
  relatively: 1,
  relatives: 1,
  relax: 1,
  relaxation: 1,
  relay: 1,
  release: 1,
  released: 1,
  releases: 1,
  relevance: 1,
  relevant: 1,
  reliability: 1,
  reliable: 1,
  reliance: 1,
  relief: 1,
  religion: 1,
  religions: 1,
  religious: 1,
  reload: 1,
  relocation: 1,
  rely: 1,
  relying: 1,
  remain: 1,
  remainder: 1,
  remained: 1,
  remaining: 1,
  remains: 1,
  remark: 1,
  remarkable: 1,
  remarks: 1,
  remedies: 1,
  remedy: 1,
  remember: 1,
  remembered: 1,
  remind: 1,
  reminder: 1,
  remix: 1,
  remote: 1,
  removable: 1,
  removal: 1,
  remove: 1,
  removed: 1,
  removing: 1,
  renaissance: 1,
  render: 1,
  rendered: 1,
  rendering: 1,
  renew: 1,
  renewable: 1,
  renewal: 1,
  reno: 1,
  rent: 1,
  rental: 1,
  rentals: 1,
  rep: 1,
  repair: 1,
  repairs: 1,
  repeat: 1,
  repeated: 1,
  replace: 1,
  replaced: 1,
  replacement: 1,
  replacing: 1,
  replica: 1,
  replication: 1,
  replied: 1,
  replies: 1,
  reply: 1,
  report: 1,
  reported: 1,
  reporter: 1,
  reporters: 1,
  reporting: 1,
  reports: 1,
  repository: 1,
  represent: 1,
  representation: 1,
  representations: 1,
  representative: 1,
  representatives: 1,
  represented: 1,
  representing: 1,
  represents: 1,
  reprint: 1,
  reprints: 1,
  reproduce: 1,
  reproduced: 1,
  reproduction: 1,
  reproductive: 1,
  republic: 1,
  republican: 1,
  republicans: 1,
  reputation: 1,
  request: 1,
  requested: 1,
  requesting: 1,
  requests: 1,
  require: 1,
  required: 1,
  requirement: 1,
  requirements: 1,
  requires: 1,
  requiring: 1,
  res: 1,
  rescue: 1,
  research: 1,
  researcher: 1,
  researchers: 1,
  reseller: 1,
  reservation: 1,
  reservations: 1,
  reserve: 1,
  reserved: 1,
  reserves: 1,
  reservoir: 1,
  reset: 1,
  residence: 1,
  resident: 1,
  residential: 1,
  residents: 1,
  resist: 1,
  resistance: 1,
  resistant: 1,
  resolution: 1,
  resolutions: 1,
  resolve: 1,
  resolved: 1,
  resort: 1,
  resorts: 1,
  resource: 1,
  resources: 1,
  respect: 1,
  respected: 1,
  respective: 1,
  respectively: 1,
  respiratory: 1,
  respond: 1,
  responded: 1,
  respondent: 1,
  respondents: 1,
  responding: 1,
  response: 1,
  responses: 1,
  responsibilities: 1,
  responsibility: 1,
  responsible: 1,
  rest: 1,
  restaurant: 1,
  restaurants: 1,
  restoration: 1,
  restore: 1,
  restored: 1,
  restrict: 1,
  restricted: 1,
  restriction: 1,
  restrictions: 1,
  restructuring: 1,
  result: 1,
  resulted: 1,
  resulting: 1,
  results: 1,
  resume: 1,
  resumes: 1,
  retail: 1,
  retailer: 1,
  retailers: 1,
  retain: 1,
  retained: 1,
  retention: 1,
  retired: 1,
  retirement: 1,
  retreat: 1,
  retrieval: 1,
  retrieve: 1,
  retrieved: 1,
  retro: 1,
  return: 1,
  returned: 1,
  returning: 1,
  returns: 1,
  reunion: 1,
  reuters: 1,
  rev: 1,
  reveal: 1,
  revealed: 1,
  reveals: 1,
  revelation: 1,
  revenge: 1,
  revenue: 1,
  revenues: 1,
  reverse: 1,
  review: 1,
  reviewed: 1,
  reviewer: 1,
  reviewing: 1,
  reviews: 1,
  revised: 1,
  revision: 1,
  revisions: 1,
  revolution: 1,
  revolutionary: 1,
  reward: 1,
  rewards: 1,
  reynolds: 1,
  rf: 1,
  rfc: 1,
  rg: 1,
  rh: 1,
  rhode: 1,
  rhythm: 1,
  ri: 1,
  ribbon: 1,
  rica: 1,
  rice: 1,
  rich: 1,
  richard: 1,
  richards: 1,
  richardson: 1,
  richmond: 1,
  rick: 1,
  ricky: 1,
  rico: 1,
  rid: 1,
  ride: 1,
  rider: 1,
  riders: 1,
  rides: 1,
  ridge: 1,
  riding: 1,
  right: 1,
  rights: 1,
  rim: 1,
  ring: 1,
  rings: 1,
  ringtone: 1,
  ringtones: 1,
  rio: 1,
  rip: 1,
  ripe: 1,
  rise: 1,
  rising: 1,
  risk: 1,
  risks: 1,
  river: 1,
  rivers: 1,
  riverside: 1,
  rj: 1,
  rl: 1,
  rm: 1,
  rn: 1,
  rna: 1,
  ro: 1,
  road: 1,
  roads: 1,
  rob: 1,
  robbie: 1,
  robert: 1,
  roberts: 1,
  robertson: 1,
  robin: 1,
  robinson: 1,
  robot: 1,
  robots: 1,
  robust: 1,
  rochester: 1,
  rock: 1,
  rocket: 1,
  rocks: 1,
  rocky: 1,
  rod: 1,
  roger: 1,
  rogers: 1,
  roland: 1,
  role: 1,
  roles: 1,
  roll: 1,
  rolled: 1,
  roller: 1,
  rolling: 1,
  rolls: 1,
  rom: 1,
  roman: 1,
  romance: 1,
  romania: 1,
  romantic: 1,
  rome: 1,
  ron: 1,
  ronald: 1,
  roof: 1,
  room: 1,
  roommate: 1,
  roommates: 1,
  rooms: 1,
  root: 1,
  roots: 1,
  rope: 1,
  rosa: 1,
  rose: 1,
  roses: 1,
  ross: 1,
  roster: 1,
  rotary: 1,
  rotation: 1,
  rouge: 1,
  rough: 1,
  roughly: 1,
  roulette: 1,
  round: 1,
  rounds: 1,
  route: 1,
  router: 1,
  routers: 1,
  routes: 1,
  routine: 1,
  routines: 1,
  routing: 1,
  rover: 1,
  row: 1,
  rows: 1,
  roy: 1,
  royal: 1,
  royalty: 1,
  rp: 1,
  rpg: 1,
  rpm: 1,
  rr: 1,
  rrp: 1,
  rs: 1,
  rss: 1,
  rt: 1,
  ru: 1,
  rubber: 1,
  ruby: 1,
  rug: 1,
  rugby: 1,
  rugs: 1,
  rule: 1,
  ruled: 1,
  rules: 1,
  ruling: 1,
  run: 1,
  runner: 1,
  running: 1,
  runs: 1,
  runtime: 1,
  rural: 1,
  rush: 1,
  russell: 1,
  russia: 1,
  russian: 1,
  ruth: 1,
  rv: 1,
  rw: 1,
  rwanda: 1,
  rx: 1,
  ryan: 1
};

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TheMostCommon10000", function() { return TheMostCommon10000; });
// https://englishgrammarhere.com/vocabulary/10000-most-common-words-in-english-part-5/
const TheMostCommon10000 = {
  s: 1,
  sa: 1,
  sacramento: 1,
  sacred: 1,
  sacrifice: 1,
  sad: 1,
  saddam: 1,
  safari: 1,
  safe: 1,
  safely: 1,
  safer: 1,
  safety: 1,
  sage: 1,
  sagem: 1,
  said: 1,
  sail: 1,
  sailing: 1,
  saint: 1,
  saints: 1,
  sake: 1,
  salad: 1,
  salaries: 1,
  salary: 1,
  sale: 1,
  salem: 1,
  sales: 1,
  sally: 1,
  salmon: 1,
  salon: 1,
  salt: 1,
  salvador: 1,
  salvation: 1,
  sam: 1,
  samba: 1,
  same: 1,
  samoa: 1,
  sample: 1,
  samples: 1,
  sampling: 1,
  samsung: 1,
  samuel: 1,
  san: 1,
  sand: 1,
  sandra: 1,
  sandwich: 1,
  sandy: 1,
  sans: 1,
  santa: 1,
  sanyo: 1,
  sao: 1,
  sap: 1,
  sapphire: 1,
  sara: 1,
  sarah: 1,
  sas: 1,
  saskatchewan: 1,
  sat: 1,
  satellite: 1,
  satin: 1,
  satisfaction: 1,
  satisfactory: 1,
  satisfied: 1,
  satisfy: 1,
  saturday: 1,
  saturn: 1,
  sauce: 1,
  saudi: 1,
  savage: 1,
  savannah: 1,
  save: 1,
  saved: 1,
  saver: 1,
  saves: 1,
  saving: 1,
  savings: 1,
  saw: 1,
  say: 1,
  saying: 1,
  says: 1,
  sb: 1,
  sbjct: 1,
  sc: 1,
  scale: 1,
  scales: 1,
  scan: 1,
  scanned: 1,
  scanner: 1,
  scanners: 1,
  scanning: 1,
  scared: 1,
  scary: 1,
  scenario: 1,
  scenarios: 1,
  scene: 1,
  scenes: 1,
  scenic: 1,
  schedule: 1,
  scheduled: 1,
  schedules: 1,
  scheduling: 1,
  schema: 1,
  scheme: 1,
  schemes: 1,
  scholar: 1,
  scholars: 1,
  scholarship: 1,
  scholarships: 1,
  school: 1,
  schools: 1,
  sci: 1,
  science: 1,
  sciences: 1,
  scientific: 1,
  scientist: 1,
  scientists: 1,
  scoop: 1,
  scope: 1,
  score: 1,
  scored: 1,
  scores: 1,
  scoring: 1,
  scotia: 1,
  scotland: 1,
  scott: 1,
  scottish: 1,
  scout: 1,
  scratch: 1,
  screen: 1,
  screening: 1,
  screens: 1,
  screensaver: 1,
  screensavers: 1,
  screenshot: 1,
  screenshots: 1,
  screw: 1,
  script: 1,
  scripting: 1,
  scripts: 1,
  scroll: 1,
  scsi: 1,
  scuba: 1,
  sculpture: 1,
  sd: 1,
  se: 1,
  sea: 1,
  seafood: 1,
  seal: 1,
  sealed: 1,
  sean: 1,
  search: 1,
  searched: 1,
  searches: 1,
  searching: 1,
  seas: 1,
  season: 1,
  seasonal: 1,
  seasons: 1,
  seat: 1,
  seating: 1,
  seats: 1,
  seattle: 1,
  sec: 1,
  second: 1,
  secondary: 1,
  seconds: 1,
  secret: 1,
  secretariat: 1,
  secretary: 1,
  secrets: 1,
  section: 1,
  sections: 1,
  sector: 1,
  sectors: 1,
  secure: 1,
  secured: 1,
  securely: 1,
  securities: 1,
  security: 1,
  see: 1,
  seed: 1,
  seeds: 1,
  seeing: 1,
  seek: 1,
  seeker: 1,
  seekers: 1,
  seeking: 1,
  seeks: 1,
  seem: 1,
  seemed: 1,
  seems: 1,
  seen: 1,
  sees: 1,
  sega: 1,
  segment: 1,
  segments: 1,
  select: 1,
  selected: 1,
  selecting: 1,
  selection: 1,
  selections: 1,
  selective: 1,
  self: 1,
  sell: 1,
  seller: 1,
  sellers: 1,
  selling: 1,
  sells: 1,
  semester: 1,
  semi: 1,
  semiconductor: 1,
  seminar: 1,
  seminars: 1,
  sen: 1,
  senate: 1,
  senator: 1,
  senators: 1,
  send: 1,
  sender: 1,
  sending: 1,
  sends: 1,
  senegal: 1,
  senior: 1,
  seniors: 1,
  sense: 1,
  sensitive: 1,
  sensitivity: 1,
  sensor: 1,
  sensors: 1,
  sent: 1,
  sentence: 1,
  sentences: 1,
  seo: 1,
  sep: 1,
  separate: 1,
  separated: 1,
  separately: 1,
  separation: 1,
  sept: 1,
  september: 1,
  seq: 1,
  sequence: 1,
  sequences: 1,
  ser: 1,
  serbia: 1,
  serial: 1,
  series: 1,
  serious: 1,
  seriously: 1,
  serum: 1,
  serve: 1,
  served: 1,
  server: 1,
  servers: 1,
  serves: 1,
  service: 1,
  services: 1,
  serving: 1,
  session: 1,
  sessions: 1,
  set: 1,
  sets: 1,
  setting: 1,
  settings: 1,
  settle: 1,
  settled: 1,
  settlement: 1,
  setup: 1,
  seven: 1,
  seventh: 1,
  several: 1,
  severe: 1,
  sewing: 1,
  sex: 1,
  sexcam: 1,
  sexo: 1,
  sexual: 1,
  sexuality: 1,
  sexually: 1,
  sexy: 1,
  sf: 1,
  sg: 1,
  sh: 1,
  shade: 1,
  shades: 1,
  shadow: 1,
  shadows: 1,
  shaft: 1,
  shake: 1,
  shakespeare: 1,
  shakira: 1,
  shall: 1,
  shame: 1,
  shanghai: 1,
  shannon: 1,
  shape: 1,
  shaped: 1,
  shapes: 1,
  share: 1,
  shared: 1,
  shareholders: 1,
  shares: 1,
  shareware: 1,
  sharing: 1,
  shark: 1,
  sharon: 1,
  sharp: 1,
  shaved: 1,
  shaw: 1,
  she: 1,
  shed: 1,
  sheep: 1,
  sheer: 1,
  sheet: 1,
  sheets: 1,
  sheffield: 1,
  shelf: 1,
  shell: 1,
  shelter: 1,
  shemale: 1,
  shemales: 1,
  shepherd: 1,
  sheriff: 1,
  sherman: 1,
  shield: 1,
  shift: 1,
  shine: 1,
  ship: 1,
  shipment: 1,
  shipments: 1,
  shipped: 1,
  shipping: 1,
  ships: 1,
  shirt: 1,
  shirts: 1,
  shit: 1,
  shock: 1,
  shoe: 1,
  shoes: 1,
  shoot: 1,
  shooting: 1,
  shop: 1,
  shopper: 1,
  shoppers: 1,
  shopping: 1,
  shops: 1,
  shopzilla: 1,
  shore: 1,
  short: 1,
  shortcuts: 1,
  shorter: 1,
  shortly: 1,
  shorts: 1,
  shot: 1,
  shots: 1,
  should: 1,
  shoulder: 1,
  show: 1,
  showcase: 1,
  showed: 1,
  shower: 1,
  showers: 1,
  showing: 1,
  shown: 1,
  shows: 1,
  showtimes: 1,
  shut: 1,
  shuttle: 1,
  si: 1,
  sic: 1,
  sick: 1,
  side: 1,
  sides: 1,
  sie: 1,
  siemens: 1,
  sierra: 1,
  sig: 1,
  sight: 1,
  sigma: 1,
  sign: 1,
  signal: 1,
  signals: 1,
  signature: 1,
  signatures: 1,
  signed: 1,
  significance: 1,
  significant: 1,
  significantly: 1,
  signing: 1,
  signs: 1,
  signup: 1,
  silence: 1,
  silent: 1,
  silicon: 1,
  silk: 1,
  silly: 1,
  silver: 1,
  sim: 1,
  similar: 1,
  similarly: 1,
  simon: 1,
  simple: 1,
  simplified: 1,
  simply: 1,
  simpson: 1,
  simpsons: 1,
  sims: 1,
  simulation: 1,
  simulations: 1,
  simultaneously: 1,
  sin: 1,
  since: 1,
  sing: 1,
  singapore: 1,
  singer: 1,
  singh: 1,
  singing: 1,
  single: 1,
  singles: 1,
  sink: 1,
  sip: 1,
  sir: 1,
  sister: 1,
  sisters: 1,
  sit: 1,
  site: 1,
  sitemap: 1,
  sites: 1,
  sitting: 1,
  situated: 1,
  situation: 1,
  situations: 1,
  six: 1,
  sixth: 1,
  size: 1,
  sized: 1,
  sizes: 1,
  sk: 1,
  skating: 1,
  ski: 1,
  skiing: 1,
  skill: 1,
  skilled: 1,
  skills: 1,
  skin: 1,
  skins: 1,
  skip: 1,
  skirt: 1,
  skirts: 1,
  sku: 1,
  sky: 1,
  skype: 1,
  sl: 1,
  slave: 1,
  sleep: 1,
  sleeping: 1,
  sleeps: 1,
  sleeve: 1,
  slide: 1,
  slides: 1,
  slideshow: 1,
  slight: 1,
  slightly: 1,
  slim: 1,
  slip: 1,
  slope: 1,
  slot: 1,
  slots: 1,
  slovak: 1,
  slovakia: 1,
  slovenia: 1,
  slow: 1,
  slowly: 1,
  slut: 1,
  sluts: 1,
  sm: 1,
  small: 1,
  smaller: 1,
  smallest: 1,
  smart: 1,
  smell: 1,
  smile: 1,
  smilies: 1,
  smith: 1,
  smithsonian: 1,
  smoke: 1,
  smoking: 1,
  smooth: 1,
  sms: 1,
  smtp: 1,
  sn: 1,
  snake: 1,
  snap: 1,
  snapshot: 1,
  snow: 1,
  snowboard: 1,
  so: 1,
  soa: 1,
  soap: 1,
  soc: 1,
  soccer: 1,
  social: 1,
  societies: 1,
  society: 1,
  sociology: 1,
  socket: 1,
  socks: 1,
  sodium: 1,
  sofa: 1,
  soft: 1,
  softball: 1,
  software: 1,
  soil: 1,
  sol: 1,
  solar: 1,
  solaris: 1,
  sold: 1,
  soldier: 1,
  soldiers: 1,
  sole: 1,
  solely: 1,
  solid: 1,
  solo: 1,
  solomon: 1,
  solution: 1,
  solutions: 1,
  solve: 1,
  solved: 1,
  solving: 1,
  soma: 1,
  somalia: 1,
  some: 1,
  somebody: 1,
  somehow: 1,
  someone: 1,
  somerset: 1,
  something: 1,
  sometimes: 1,
  somewhat: 1,
  somewhere: 1,
  son: 1,
  song: 1,
  songs: 1,
  sonic: 1,
  sons: 1,
  sony: 1,
  soon: 1,
  soonest: 1,
  sophisticated: 1,
  sorry: 1,
  sort: 1,
  sorted: 1,
  sorts: 1,
  sought: 1,
  soul: 1,
  souls: 1,
  sound: 1,
  sounds: 1,
  soundtrack: 1,
  soup: 1,
  source: 1,
  sources: 1,
  south: 1,
  southampton: 1,
  southeast: 1,
  southern: 1,
  southwest: 1,
  soviet: 1,
  sox: 1,
  sp: 1,
  spa: 1,
  space: 1,
  spaces: 1,
  spain: 1,
  spam: 1,
  span: 1,
  spanish: 1,
  spank: 1,
  spanking: 1,
  sparc: 1,
  spare: 1,
  spas: 1,
  spatial: 1,
  speak: 1,
  speaker: 1,
  speakers: 1,
  speaking: 1,
  speaks: 1,
  spears: 1,
  spec: 1,
  special: 1,
  specialist: 1,
  specialists: 1,
  specialized: 1,
  specializing: 1,
  specially: 1,
  specials: 1,
  specialties: 1,
  specialty: 1,
  species: 1,
  specific: 1,
  specifically: 1,
  specification: 1,
  specifications: 1,
  specifics: 1,
  specified: 1,
  specifies: 1,
  specify: 1,
  specs: 1,
  spectacular: 1,
  spectrum: 1,
  speech: 1,
  speeches: 1,
  speed: 1,
  speeds: 1,
  spell: 1,
  spelling: 1,
  spencer: 1,
  spend: 1,
  spending: 1,
  spent: 1,
  sperm: 1,
  sphere: 1,
  spice: 1,
  spider: 1,
  spies: 1,
  spin: 1,
  spine: 1,
  spirit: 1,
  spirits: 1,
  spiritual: 1,
  spirituality: 1,
  split: 1,
  spoke: 1,
  spoken: 1,
  spokesman: 1,
  sponsor: 1,
  sponsored: 1,
  sponsors: 1,
  sponsorship: 1,
  sport: 1,
  sporting: 1,
  sports: 1,
  spot: 1,
  spotlight: 1,
  spots: 1,
  spouse: 1,
  spray: 1,
  spread: 1,
  spreading: 1,
  spring: 1,
  springer: 1,
  springfield: 1,
  springs: 1,
  sprint: 1,
  spy: 1,
  spyware: 1,
  sq: 1,
  sql: 1,
  squad: 1,
  square: 1,
  squirt: 1,
  squirting: 1,
  sr: 1,
  src: 1,
  sri: 1,
  ss: 1,
  ssl: 1,
  st: 1,
  stability: 1,
  stable: 1,
  stack: 1,
  stadium: 1,
  staff: 1,
  staffing: 1,
  stage: 1,
  stages: 1,
  stainless: 1,
  stake: 1,
  stakeholders: 1,
  stamp: 1,
  stamps: 1,
  stan: 1,
  stand: 1,
  standard: 1,
  standards: 1,
  standing: 1,
  standings: 1,
  stands: 1,
  stanford: 1,
  stanley: 1,
  star: 1,
  starring: 1,
  stars: 1,
  starsmerchant: 1,
  start: 1,
  started: 1,
  starter: 1,
  starting: 1,
  starts: 1,
  startup: 1,
  stat: 1,
  state: 1,
  stated: 1,
  statement: 1,
  statements: 1,
  states: 1,
  statewide: 1,
  static: 1,
  stating: 1,
  station: 1,
  stationery: 1,
  stations: 1,
  statistical: 1,
  statistics: 1,
  stats: 1,
  status: 1,
  statute: 1,
  statutes: 1,
  statutory: 1,
  stay: 1,
  stayed: 1,
  staying: 1,
  stays: 1,
  std: 1,
  ste: 1,
  steady: 1,
  steal: 1,
  steam: 1,
  steel: 1,
  steering: 1,
  stem: 1,
  step: 1,
  stephanie: 1,
  stephen: 1,
  steps: 1,
  stereo: 1,
  sterling: 1,
  steve: 1,
  steven: 1,
  stevens: 1,
  stewart: 1,
  stick: 1,
  sticker: 1,
  stickers: 1,
  sticks: 1,
  sticky: 1,
  still: 1,
  stock: 1,
  stockholm: 1,
  stockings: 1,
  stocks: 1,
  stolen: 1,
  stomach: 1,
  stone: 1,
  stones: 1,
  stood: 1,
  stop: 1,
  stopped: 1,
  stopping: 1,
  stops: 1,
  storage: 1,
  store: 1,
  stored: 1,
  stores: 1,
  stories: 1,
  storm: 1,
  story: 1,
  str: 1,
  straight: 1,
  strain: 1,
  strand: 1,
  strange: 1,
  stranger: 1,
  strap: 1,
  strategic: 1,
  strategies: 1,
  strategy: 1,
  stream: 1,
  streaming: 1,
  streams: 1,
  street: 1,
  streets: 1,
  strength: 1,
  strengthen: 1,
  strengthening: 1,
  strengths: 1,
  stress: 1,
  stretch: 1,
  strict: 1,
  strictly: 1,
  strike: 1,
  strikes: 1,
  striking: 1,
  string: 1,
  strings: 1,
  strip: 1,
  stripes: 1,
  strips: 1,
  stroke: 1,
  strong: 1,
  stronger: 1,
  strongly: 1,
  struck: 1,
  struct: 1,
  structural: 1,
  structure: 1,
  structured: 1,
  structures: 1,
  struggle: 1,
  stuart: 1,
  stuck: 1,
  stud: 1,
  student: 1,
  students: 1,
  studied: 1,
  studies: 1,
  studio: 1,
  studios: 1,
  study: 1,
  studying: 1,
  stuff: 1,
  stuffed: 1,
  stunning: 1,
  stupid: 1,
  style: 1,
  styles: 1,
  stylish: 1,
  stylus: 1,
  su: 1,
  sub: 1,
  subaru: 1,
  subcommittee: 1,
  subdivision: 1,
  subject: 1,
  subjective: 1,
  subjects: 1,
  sublime: 1,
  sublimedirectory: 1,
  submission: 1,
  submissions: 1,
  submit: 1,
  submitted: 1,
  submitting: 1,
  subscribe: 1,
  subscriber: 1,
  subscribers: 1,
  subscription: 1,
  subscriptions: 1,
  subsection: 1,
  subsequent: 1,
  subsequently: 1,
  subsidiaries: 1,
  subsidiary: 1,
  substance: 1,
  substances: 1,
  substantial: 1,
  substantially: 1,
  substitute: 1,
  subtle: 1,
  suburban: 1,
  succeed: 1,
  success: 1,
  successful: 1,
  successfully: 1,
  such: 1,
  suck: 1,
  sucking: 1,
  sucks: 1,
  sudan: 1,
  sudden: 1,
  suddenly: 1,
  sue: 1,
  suffer: 1,
  suffered: 1,
  suffering: 1,
  sufficient: 1,
  sufficiently: 1,
  sugar: 1,
  suggest: 1,
  suggested: 1,
  suggesting: 1,
  suggestion: 1,
  suggestions: 1,
  suggests: 1,
  suicide: 1,
  suit: 1,
  suitable: 1,
  suite: 1,
  suited: 1,
  suites: 1,
  suits: 1,
  sullivan: 1,
  sum: 1,
  summaries: 1,
  summary: 1,
  summer: 1,
  summit: 1,
  sun: 1,
  sunday: 1,
  sunglasses: 1,
  sunny: 1,
  sunrise: 1,
  sunset: 1,
  sunshine: 1,
  super: 1,
  superb: 1,
  superintendent: 1,
  superior: 1,
  supervision: 1,
  supervisor: 1,
  supervisors: 1,
  supplement: 1,
  supplemental: 1,
  supplements: 1,
  supplied: 1,
  supplier: 1,
  suppliers: 1,
  supplies: 1,
  supply: 1,
  support: 1,
  supported: 1,
  supporters: 1,
  supporting: 1,
  supports: 1,
  suppose: 1,
  supposed: 1,
  supreme: 1,
  sur: 1,
  sure: 1,
  surely: 1,
  surf: 1,
  surface: 1,
  surfaces: 1,
  surfing: 1,
  surge: 1,
  surgeon: 1,
  surgeons: 1,
  surgery: 1,
  surgical: 1,
  surname: 1,
  surplus: 1,
  surprise: 1,
  surprised: 1,
  surprising: 1,
  surrey: 1,
  surround: 1,
  surrounded: 1,
  surrounding: 1,
  surveillance: 1,
  survey: 1,
  surveys: 1,
  survival: 1,
  survive: 1,
  survivor: 1,
  survivors: 1,
  susan: 1,
  suse: 1,
  suspect: 1,
  suspected: 1,
  suspended: 1,
  suspension: 1,
  sussex: 1,
  sustainability: 1,
  sustainable: 1,
  sustained: 1,
  suzuki: 1,
  sv: 1,
  sw: 1,
  swap: 1,
  swaziland: 1,
  sweden: 1,
  swedish: 1,
  sweet: 1,
  swift: 1,
  swim: 1,
  swimming: 1,
  swing: 1,
  swingers: 1,
  swiss: 1,
  switch: 1,
  switched: 1,
  switches: 1,
  switching: 1,
  switzerland: 1,
  sword: 1,
  sydney: 1,
  symantec: 1,
  symbol: 1,
  symbols: 1,
  sympathy: 1,
  symphony: 1,
  symposium: 1,
  symptoms: 1,
  sync: 1,
  syndicate: 1,
  syndication: 1,
  syndrome: 1,
  synopsis: 1,
  syntax: 1,
  synthesis: 1,
  synthetic: 1,
  syracuse: 1,
  syria: 1,
  sys: 1,
  system: 1,
  systematic: 1,
  systems: 1,
  t: 1,
  ta: 1,
  tab: 1,
  table: 1,
  tables: 1,
  tablet: 1,
  tablets: 1,
  tabs: 1,
  tackle: 1,
  tactics: 1,
  tag: 1,
  tagged: 1,
  tags: 1,
  tahoe: 1,
  tail: 1,
  taiwan: 1,
  take: 1,
  taken: 1,
  takes: 1,
  taking: 1,
  tale: 1,
  talent: 1,
  talented: 1,
  tales: 1,
  talk: 1,
  talked: 1,
  talking: 1,
  talks: 1,
  tall: 1,
  tamil: 1,
  tampa: 1,
  tan: 1,
  tank: 1,
  tanks: 1,
  tanzania: 1,
  tap: 1,
  tape: 1,
  tapes: 1,
  tar: 1,
  target: 1,
  targeted: 1,
  targets: 1,
  tariff: 1,
  task: 1,
  tasks: 1,
  taste: 1,
  tattoo: 1,
  taught: 1,
  tax: 1,
  taxation: 1,
  taxes: 1,
  taxi: 1,
  taylor: 1,
  tb: 1,
  tba: 1,
  tc: 1,
  tcp: 1,
  td: 1,
  te: 1,
  tea: 1,
  teach: 1,
  teacher: 1,
  teachers: 1,
  teaches: 1,
  teaching: 1,
  team: 1,
  teams: 1,
  tear: 1,
  tears: 1,
  tech: 1,
  technical: 1,
  technician: 1,
  technique: 1,
  techniques: 1,
  techno: 1,
  technological: 1,
  technologies: 1,
  technology: 1,
  techrepublic: 1,
  ted: 1,
  teddy: 1,
  tee: 1,
  teen: 1,
  teenage: 1,
  teens: 1,
  teeth: 1,
  tel: 1,
  telecharger: 1,
  telecom: 1,
  telecommunications: 1,
  telephone: 1,
  telephony: 1,
  telescope: 1,
  television: 1,
  televisions: 1,
  tell: 1,
  telling: 1,
  tells: 1,
  temp: 1,
  temperature: 1,
  temperatures: 1,
  template: 1,
  templates: 1,
  temple: 1,
  temporal: 1,
  temporarily: 1,
  temporary: 1,
  ten: 1,
  tenant: 1,
  tend: 1,
  tender: 1,
  tennessee: 1,
  tennis: 1,
  tension: 1,
  tent: 1,
  term: 1,
  terminal: 1,
  terminals: 1,
  termination: 1,
  terminology: 1,
  terms: 1,
  terrace: 1,
  terrain: 1,
  terrible: 1,
  territories: 1,
  territory: 1,
  terror: 1,
  terrorism: 1,
  terrorist: 1,
  terrorists: 1,
  terry: 1,
  test: 1,
  testament: 1,
  tested: 1,
  testimonials: 1,
  testimony: 1,
  testing: 1,
  tests: 1,
  tex: 1,
  texas: 1,
  text: 1,
  textbook: 1,
  textbooks: 1,
  textile: 1,
  textiles: 1,
  texts: 1,
  texture: 1,
  tf: 1,
  tft: 1,
  tgp: 1,
  th: 1,
  thai: 1,
  thailand: 1,
  than: 1,
  thank: 1,
  thanks: 1,
  thanksgiving: 1,
  that: 1,
  thats: 1,
  the: 1,
  theater: 1,
  theaters: 1,
  theatre: 1,
  thee: 1,
  theft: 1,
  thehun: 1,
  their: 1,
  them: 1,
  theme: 1,
  themes: 1,
  themselves: 1,
  then: 1,
  theology: 1,
  theorem: 1,
  theoretical: 1,
  theories: 1,
  theory: 1,
  therapeutic: 1,
  therapist: 1,
  therapy: 1,
  there: 1,
  thereafter: 1,
  thereby: 1,
  therefore: 1,
  thereof: 1,
  thermal: 1,
  thesaurus: 1,
  these: 1,
  thesis: 1,
  theta: 1,
  they: 1,
  thick: 1,
  thickness: 1,
  thin: 1,
  thing: 1,
  things: 1,
  think: 1,
  thinking: 1,
  thinkpad: 1,
  thinks: 1,
  third: 1,
  thirty: 1,
  this: 1,
  thomas: 1,
  thompson: 1,
  thomson: 1,
  thong: 1,
  thongs: 1,
  thorough: 1,
  thoroughly: 1,
  those: 1,
  thou: 1,
  though: 1,
  thought: 1,
  thoughts: 1,
  thousand: 1,
  thousands: 1,
  thread: 1,
  threaded: 1,
  threads: 1,
  threat: 1,
  threatened: 1,
  threatening: 1,
  threats: 1,
  three: 1,
  threesome: 1,
  threshold: 1,
  thriller: 1,
  throat: 1,
  through: 1,
  throughout: 1,
  throw: 1,
  throwing: 1,
  thrown: 1,
  throws: 1,
  thru: 1,
  thu: 1,
  thumb: 1,
  thumbnail: 1,
  thumbnails: 1,
  thumbs: 1,
  thumbzilla: 1,
  thunder: 1,
  thursday: 1,
  thus: 1,
  thy: 1,
  ti: 1,
  ticket: 1,
  tickets: 1,
  tide: 1,
  tie: 1,
  tied: 1,
  tier: 1,
  ties: 1,
  tiffany: 1,
  tiger: 1,
  tigers: 1,
  tight: 1,
  til: 1,
  tile: 1,
  tiles: 1,
  till: 1,
  tim: 1,
  timber: 1,
  time: 1,
  timeline: 1,
  timely: 1,
  timer: 1,
  times: 1,
  timing: 1,
  timothy: 1,
  tin: 1,
  tiny: 1,
  tion: 1,
  tions: 1,
  tip: 1,
  tips: 1,
  tire: 1,
  tired: 1,
  tires: 1,
  tissue: 1,
  tit: 1,
  titanium: 1,
  titans: 1,
  title: 1,
  titled: 1,
  titles: 1,
  tits: 1,
  titten: 1,
  tm: 1,
  tmp: 1,
  tn: 1,
  to: 1,
  tobacco: 1,
  tobago: 1,
  today: 1,
  todd: 1,
  toddler: 1,
  toe: 1,
  together: 1,
  toilet: 1,
  token: 1,
  tokyo: 1,
  told: 1,
  tolerance: 1,
  toll: 1,
  tom: 1,
  tomato: 1,
  tomatoes: 1,
  tommy: 1,
  tomorrow: 1,
  ton: 1,
  tone: 1,
  toner: 1,
  tones: 1,
  tongue: 1,
  tonight: 1,
  tons: 1,
  tony: 1,
  too: 1,
  took: 1,
  tool: 1,
  toolbar: 1,
  toolbox: 1,
  toolkit: 1,
  tools: 1,
  tooth: 1,
  top: 1,
  topic: 1,
  topics: 1,
  topless: 1,
  tops: 1,
  toronto: 1,
  torture: 1,
  toshiba: 1,
  total: 1,
  totally: 1,
  totals: 1,
  touch: 1,
  touched: 1,
  tough: 1,
  tour: 1,
  touring: 1,
  tourism: 1,
  tourist: 1,
  tournament: 1,
  tournaments: 1,
  tours: 1,
  toward: 1,
  towards: 1,
  tower: 1,
  towers: 1,
  town: 1,
  towns: 1,
  township: 1,
  toxic: 1,
  toy: 1,
  toyota: 1,
  toys: 1,
  tp: 1,
  tr: 1,
  trace: 1,
  track: 1,
  trackback: 1,
  trackbacks: 1,
  tracked: 1,
  tracker: 1,
  tracking: 1,
  tracks: 1,
  tract: 1,
  tractor: 1,
  tracy: 1,
  trade: 1,
  trademark: 1,
  trademarks: 1,
  trader: 1,
  trades: 1,
  trading: 1,
  tradition: 1,
  traditional: 1,
  traditions: 1,
  traffic: 1,
  tragedy: 1,
  trail: 1,
  trailer: 1,
  trailers: 1,
  trails: 1,
  train: 1,
  trained: 1,
  trainer: 1,
  trainers: 1,
  training: 1,
  trains: 1,
  tramadol: 1,
  trance: 1,
  tranny: 1,
  trans: 1,
  transaction: 1,
  transactions: 1,
  transcript: 1,
  transcription: 1,
  transcripts: 1,
  transexual: 1,
  transexuales: 1,
  transfer: 1,
  transferred: 1,
  transfers: 1,
  transform: 1,
  transformation: 1,
  transit: 1,
  transition: 1,
  translate: 1,
  translated: 1,
  translation: 1,
  translations: 1,
  translator: 1,
  transmission: 1,
  transmit: 1,
  transmitted: 1,
  transparency: 1,
  transparent: 1,
  transport: 1,
  transportation: 1,
  transsexual: 1,
  trap: 1,
  trash: 1,
  trauma: 1,
  travel: 1,
  traveler: 1,
  travelers: 1,
  traveling: 1,
  traveller: 1,
  travelling: 1,
  travels: 1,
  travesti: 1,
  travis: 1,
  tray: 1,
  treasure: 1,
  treasurer: 1,
  treasures: 1,
  treasury: 1,
  treat: 1,
  treated: 1,
  treating: 1,
  treatment: 1,
  treatments: 1,
  treaty: 1,
  tree: 1,
  trees: 1,
  trek: 1,
  trembl: 1,
  tremendous: 1,
  trend: 1,
  trends: 1,
  treo: 1,
  tri: 1,
  trial: 1,
  trials: 1,
  triangle: 1,
  tribal: 1,
  tribe: 1,
  tribes: 1,
  tribunal: 1,
  tribune: 1,
  tribute: 1,
  trick: 1,
  tricks: 1,
  tried: 1,
  tries: 1,
  trigger: 1,
  trim: 1,
  trinidad: 1,
  trinity: 1,
  trio: 1,
  trip: 1,
  tripadvisor: 1,
  triple: 1,
  trips: 1,
  triumph: 1,
  trivia: 1,
  troops: 1,
  tropical: 1,
  trouble: 1,
  troubleshooting: 1,
  trout: 1,
  troy: 1,
  truck: 1,
  trucks: 1,
  true: 1,
  truly: 1,
  trunk: 1,
  trust: 1,
  trusted: 1,
  trustee: 1,
  trustees: 1,
  trusts: 1,
  truth: 1,
  try: 1,
  trying: 1,
  ts: 1,
  tsunami: 1,
  tt: 1,
  tu: 1,
  tub: 1,
  tube: 1,
  tubes: 1,
  tucson: 1,
  tue: 1,
  tuesday: 1,
  tuition: 1,
  tulsa: 1,
  tumor: 1,
  tune: 1,
  tuner: 1,
  tunes: 1,
  tuning: 1,
  tunisia: 1,
  tunnel: 1,
  turbo: 1,
  turkey: 1,
  turkish: 1,
  turn: 1,
  turned: 1,
  turner: 1,
  turning: 1,
  turns: 1,
  turtle: 1,
  tutorial: 1,
  tutorials: 1,
  tv: 1,
  tvs: 1,
  twelve: 1,
  twenty: 1,
  twice: 1,
  twiki: 1,
  twin: 1,
  twinks: 1,
  twins: 1,
  twist: 1,
  twisted: 1,
  two: 1,
  tx: 1,
  ty: 1,
  tyler: 1,
  type: 1,
  types: 1,
  typical: 1,
  typically: 1,
  typing: 1,
  u: 1,
  uc: 1,
  uganda: 1,
  ugly: 1,
  uh: 1,
  ui: 1,
  uk: 1,
  ukraine: 1,
  ul: 1,
  ultimate: 1,
  ultimately: 1,
  ultra: 1,
  ultram: 1,
  um: 1,
  un: 1,
  una: 1,
  unable: 1,
  unauthorized: 1,
  unavailable: 1,
  uncertainty: 1,
  uncle: 1,
  und: 1,
  undefined: 1,
  under: 1,
  undergraduate: 1,
  underground: 1,
  underlying: 1,
  understand: 1,
  understanding: 1,
  understood: 1,
  undertake: 1,
  undertaken: 1,
  underwear: 1,
  undo: 1,
  une: 1,
  unemployment: 1,
  unexpected: 1,
  unfortunately: 1,
  uni: 1,
  unified: 1,
  uniform: 1,
  union: 1,
  unions: 1,
  uniprotkb: 1,
  unique: 1,
  unit: 1,
  united: 1,
  units: 1,
  unity: 1,
  univ: 1,
  universal: 1,
  universe: 1,
  universities: 1,
  university: 1,
  unix: 1,
  unknown: 1,
  unless: 1,
  unlike: 1,
  unlikely: 1,
  unlimited: 1,
  unlock: 1,
  unnecessary: 1,
  unsigned: 1,
  unsubscribe: 1,
  until: 1,
  untitled: 1,
  unto: 1,
  unusual: 1,
  unwrap: 1,
  up: 1,
  upc: 1,
  upcoming: 1,
  update: 1,
  updated: 1,
  updates: 1,
  updating: 1,
  upgrade: 1,
  upgrades: 1,
  upgrading: 1,
  upload: 1,
  uploaded: 1,
  upon: 1,
  upper: 1,
  ups: 1,
  upset: 1,
  upskirt: 1,
  upskirts: 1,
  ur: 1,
  urban: 1,
  urge: 1,
  urgent: 1,
  uri: 1,
  url: 1,
  urls: 1,
  uruguay: 1,
  urw: 1,
  us: 1,
  usa: 1,
  usage: 1,
  usb: 1,
  usc: 1,
  usd: 1,
  usda: 1,
  use: 1,
  used: 1,
  useful: 1,
  user: 1,
  username: 1,
  users: 1,
  uses: 1,
  usgs: 1,
  using: 1,
  usps: 1,
  usr: 1,
  usual: 1,
  usually: 1,
  ut: 1,
  utah: 1,
  utc: 1,
  utilities: 1,
  utility: 1,
  utilization: 1,
  utilize: 1,
  utils: 1,
  uv: 1,
  uw: 1,
  uzbekistan: 1,
  v: 1,
  va: 1,
  vacancies: 1,
  vacation: 1,
  vacations: 1,
  vaccine: 1,
  vacuum: 1,
  vagina: 1,
  val: 1,
  valentine: 1,
  valid: 1,
  validation: 1,
  validity: 1,
  valium: 1,
  valley: 1,
  valuable: 1,
  valuation: 1,
  value: 1,
  valued: 1,
  values: 1,
  valve: 1,
  valves: 1,
  vampire: 1,
  van: 1,
  vancouver: 1,
  vanilla: 1,
  var: 1,
  variable: 1,
  variables: 1,
  variance: 1,
  variation: 1,
  variations: 1,
  varied: 1,
  varies: 1,
  varieties: 1,
  variety: 1,
  various: 1,
  vary: 1,
  varying: 1,
  vast: 1,
  vat: 1,
  vatican: 1,
  vault: 1,
  vb: 1,
  vbulletin: 1,
  vc: 1,
  vcr: 1,
  ve: 1,
  vector: 1,
  vegas: 1,
  vegetable: 1,
  vegetables: 1,
  vegetarian: 1,
  vegetation: 1,
  vehicle: 1,
  vehicles: 1,
  velocity: 1,
  velvet: 1,
  vendor: 1,
  vendors: 1,
  venezuela: 1,
  venice: 1,
  venture: 1,
  ventures: 1,
  venue: 1,
  venues: 1,
  ver: 1,
  verbal: 1,
  verde: 1,
  verification: 1,
  verified: 1,
  verify: 1,
  verizon: 1,
  vermont: 1,
  vernon: 1,
  verse: 1,
  version: 1,
  versions: 1,
  versus: 1,
  vertex: 1,
  vertical: 1,
  very: 1,
  verzeichnis: 1,
  vessel: 1,
  vessels: 1,
  veteran: 1,
  veterans: 1,
  veterinary: 1,
  vg: 1,
  vhs: 1,
  vi: 1,
  via: 1,
  viagra: 1,
  vibrator: 1,
  vibrators: 1,
  vic: 1,
  vice: 1,
  victim: 1,
  victims: 1,
  victor: 1,
  victoria: 1,
  victorian: 1,
  victory: 1,
  vid: 1,
  video: 1,
  videos: 1,
  vids: 1,
  vienna: 1,
  vietnam: 1,
  vietnamese: 1,
  view: 1,
  viewed: 1,
  viewer: 1,
  viewers: 1,
  viewing: 1,
  viewpicture: 1,
  views: 1,
  vii: 1,
  viii: 1,
  viking: 1,
  villa: 1,
  village: 1,
  villages: 1,
  villas: 1,
  vincent: 1,
  vintage: 1,
  vinyl: 1,
  violation: 1,
  violations: 1,
  violence: 1,
  violent: 1,
  violin: 1,
  vip: 1,
  viral: 1,
  virgin: 1,
  virginia: 1,
  virtual: 1,
  virtually: 1,
  virtue: 1,
  virus: 1,
  viruses: 1,
  visa: 1,
  visibility: 1,
  visible: 1,
  vision: 1,
  visit: 1,
  visited: 1,
  visiting: 1,
  visitor: 1,
  visitors: 1,
  visits: 1,
  vista: 1,
  visual: 1,
  vital: 1,
  vitamin: 1,
  vitamins: 1,
  vocabulary: 1,
  vocal: 1,
  vocals: 1,
  vocational: 1,
  voice: 1,
  voices: 1,
  void: 1,
  voip: 1,
  vol: 1,
  volkswagen: 1,
  volleyball: 1,
  volt: 1,
  voltage: 1,
  volume: 1,
  volumes: 1,
  voluntary: 1,
  volunteer: 1,
  volunteers: 1,
  volvo: 1,
  von: 1,
  vote: 1,
  voted: 1,
  voters: 1,
  votes: 1,
  voting: 1,
  voyeur: 1,
  voyeurweb: 1,
  voyuer: 1,
  vp: 1,
  vpn: 1,
  vs: 1,
  vsnet: 1,
  vt: 1,
  vulnerability: 1,
  vulnerable: 1,
  w: 1,
  wa: 1,
  wage: 1,
  wages: 1,
  wagner: 1,
  wagon: 1,
  wait: 1,
  waiting: 1,
  waiver: 1,
  wake: 1,
  wal: 1,
  wales: 1,
  walk: 1,
  walked: 1,
  walker: 1,
  walking: 1,
  walks: 1,
  wall: 1,
  wallace: 1,
  wallet: 1,
  wallpaper: 1,
  wallpapers: 1,
  walls: 1,
  walnut: 1,
  walt: 1,
  walter: 1,
  wan: 1,
  wang: 1,
  wanna: 1,
  want: 1,
  wanted: 1,
  wanting: 1,
  wants: 1,
  war: 1,
  warcraft: 1,
  ward: 1,
  ware: 1,
  warehouse: 1,
  warm: 1,
  warming: 1,
  warned: 1,
  warner: 1,
  warning: 1,
  warnings: 1,
  warrant: 1,
  warranties: 1,
  warranty: 1,
  warren: 1,
  warrior: 1,
  warriors: 1,
  wars: 1,
  was: 1,
  wash: 1,
  washer: 1,
  washing: 1,
  washington: 1,
  waste: 1,
  watch: 1,
  watched: 1,
  watches: 1,
  watching: 1,
  water: 1,
  waterproof: 1,
  waters: 1,
  watershed: 1,
  watson: 1,
  watt: 1,
  watts: 1,
  wav: 1,
  wave: 1,
  waves: 1,
  wax: 1,
  way: 1,
  wayne: 1,
  ways: 1,
  wb: 1,
  wc: 1,
  we: 1,
  weak: 1,
  wealth: 1,
  weapon: 1,
  weapons: 1,
  wear: 1,
  wearing: 1,
  weather: 1,
  web: 1,
  webcam: 1,
  webcams: 1,
  webcast: 1,
  weblog: 1,
  weblogs: 1,
  webmaster: 1,
  webmasters: 1,
  webpage: 1,
  webshots: 1,
  website: 1,
  websites: 1,
  webster: 1,
  wed: 1,
  wedding: 1,
  weddings: 1,
  wednesday: 1,
  weed: 1,
  week: 1,
  weekend: 1,
  weekends: 1,
  weekly: 1,
  weeks: 1,
  weight: 1,
  weighted: 1,
  weights: 1,
  weird: 1,
  welcome: 1,
  welding: 1,
  welfare: 1,
  well: 1,
  wellington: 1,
  wellness: 1,
  wells: 1,
  welsh: 1,
  wendy: 1,
  went: 1,
  were: 1,
  wesley: 1,
  west: 1,
  western: 1,
  westminster: 1,
  wet: 1,
  whale: 1,
  what: 1,
  whatever: 1,
  whats: 1,
  wheat: 1,
  wheel: 1,
  wheels: 1,
  when: 1,
  whenever: 1,
  where: 1,
  whereas: 1,
  wherever: 1,
  whether: 1,
  which: 1,
  while: 1,
  whilst: 1,
  white: 1,
  who: 1,
  whole: 1,
  wholesale: 1,
  whom: 1,
  whore: 1,
  whose: 1,
  why: 1,
  wi: 1,
  wichita: 1,
  wicked: 1,
  wide: 1,
  widely: 1,
  wider: 1,
  widescreen: 1,
  widespread: 1,
  width: 1,
  wife: 1,
  wifi: 1,
  wiki: 1,
  wikipedia: 1,
  wild: 1,
  wilderness: 1,
  wildlife: 1,
  wiley: 1,
  will: 1,
  william: 1,
  williams: 1,
  willing: 1,
  willow: 1,
  wilson: 1,
  win: 1,
  wind: 1,
  window: 1,
  windows: 1,
  winds: 1,
  windsor: 1,
  wine: 1,
  wines: 1,
  wing: 1,
  wings: 1,
  winner: 1,
  winners: 1,
  winning: 1,
  wins: 1,
  winston: 1,
  winter: 1,
  wire: 1,
  wired: 1,
  wireless: 1,
  wires: 1,
  wiring: 1,
  wisconsin: 1,
  wisdom: 1,
  wise: 1,
  wish: 1,
  wishes: 1,
  wishing: 1,
  wishlist: 1,
  wit: 1,
  witch: 1,
  with: 1,
  withdrawal: 1,
  within: 1,
  without: 1,
  witness: 1,
  witnesses: 1,
  wives: 1,
  wizard: 1,
  wm: 1,
  wma: 1,
  wn: 1,
  wolf: 1,
  woman: 1,
  women: 1,
  womens: 1,
  won: 1,
  wonder: 1,
  wonderful: 1,
  wondering: 1,
  wood: 1,
  wooden: 1,
  woods: 1,
  wool: 1,
  worcester: 1,
  word: 1,
  wordpress: 1,
  words: 1,
  work: 1,
  worked: 1,
  worker: 1,
  workers: 1,
  workflow: 1,
  workforce: 1,
  working: 1,
  workout: 1,
  workplace: 1,
  works: 1,
  workshop: 1,
  workshops: 1,
  workstation: 1,
  world: 1,
  worldcat: 1,
  worlds: 1,
  worldsex: 1,
  worldwide: 1,
  worm: 1,
  worn: 1,
  worried: 1,
  worry: 1,
  worse: 1,
  worship: 1,
  worst: 1,
  worth: 1,
  worthy: 1,
  would: 1,
  wound: 1,
  wow: 1,
  wp: 1,
  wr: 1,
  wrap: 1,
  wrapped: 1,
  wrapping: 1,
  wrestling: 1,
  wright: 1,
  wrist: 1,
  write: 1,
  writer: 1,
  writers: 1,
  writes: 1,
  writing: 1,
  writings: 1,
  written: 1,
  wrong: 1,
  wrote: 1,
  ws: 1,
  wt: 1,
  wto: 1,
  wu: 1,
  wv: 1,
  ww: 1,
  www: 1,
  wx: 1,
  wy: 1,
  wyoming: 1,
  x: 1,
  xanax: 1,
  xbox: 1,
  xerox: 1,
  xhtml: 1,
  xi: 1,
  xl: 1,
  xml: 1,
  xnxx: 1,
  xp: 1,
  xx: 1,
  xxx: 1,
  y: 1,
  ya: 1,
  yacht: 1,
  yahoo: 1,
  yale: 1,
  yamaha: 1,
  yang: 1,
  yard: 1,
  yards: 1,
  yarn: 1,
  ye: 1,
  yea: 1,
  yeah: 1,
  year: 1,
  yearly: 1,
  years: 1,
  yeast: 1,
  yellow: 1,
  yemen: 1,
  yen: 1,
  yes: 1,
  yesterday: 1,
  yet: 1,
  yield: 1,
  yields: 1,
  yn: 1,
  yo: 1,
  yoga: 1,
  york: 1,
  yorkshire: 1,
  you: 1,
  young: 1,
  younger: 1,
  your: 1,
  yours: 1,
  yourself: 1,
  youth: 1,
  yr: 1,
  yrs: 1,
  yu: 1,
  yugoslavia: 1,
  yukon: 1,
  z: 1,
  za: 1,
  zambia: 1,
  zdnet: 1,
  zealand: 1,
  zen: 1,
  zero: 1,
  zimbabwe: 1,
  zinc: 1,
  zip: 1,
  zoloft: 1,
  zone: 1,
  zones: 1,
  zoning: 1,
  zoo: 1,
  zoom: 1,
  zoophilia: 1,
  zope: 1,
  zshops: 1,
  zu: 1,
  zum: 1,
  zus: 1
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var normalizeHeaderName = __webpack_require__(33);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(34);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(40);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(2);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(35);
var combineURLs = __webpack_require__(36);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var url = __webpack_require__(20);
var http = __webpack_require__(17);
var https = __webpack_require__(18);
var assert = __webpack_require__(41);
var Writable = __webpack_require__(42).Writable;
var debug = __webpack_require__(43)("follow-redirects");

// RFC7231§4.2.1: Of the request methods defined by this specification,
// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.
var SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };

// Create handlers that pass events from native requests
var eventHandlers = Object.create(null);
["abort", "aborted", "error", "socket", "timeout"].forEach(function (event) {
  eventHandlers[event] = function (arg) {
    this._redirectable.emit(event, arg);
  };
});

// An HTTP(S) request that can be redirected
function RedirectableRequest(options, responseCallback) {
  // Initialize the request
  Writable.call(this);
  options.headers = options.headers || {};
  this._options = options;
  this._redirectCount = 0;
  this._redirects = [];
  this._requestBodyLength = 0;
  this._requestBodyBuffers = [];

  // Since http.request treats host as an alias of hostname,
  // but the url module interprets host as hostname plus port,
  // eliminate the host property to avoid confusion.
  if (options.host) {
    // Use hostname if set, because it has precedence
    if (!options.hostname) {
      options.hostname = options.host;
    }
    delete options.host;
  }

  // Attach a callback if passed
  if (responseCallback) {
    this.on("response", responseCallback);
  }

  // React to responses of native requests
  var self = this;
  this._onNativeResponse = function (response) {
    self._processResponse(response);
  };

  // Complete the URL object when necessary
  if (!options.pathname && options.path) {
    var searchPos = options.path.indexOf("?");
    if (searchPos < 0) {
      options.pathname = options.path;
    }
    else {
      options.pathname = options.path.substring(0, searchPos);
      options.search = options.path.substring(searchPos);
    }
  }

  // Perform the first request
  this._performRequest();
}
RedirectableRequest.prototype = Object.create(Writable.prototype);

// Writes buffered data to the current native request
RedirectableRequest.prototype.write = function (data, encoding, callback) {
  // Validate input and shift parameters if necessary
  if (!(typeof data === "string" || typeof data === "object" && ("length" in data))) {
    throw new Error("data should be a string, Buffer or Uint8Array");
  }
  if (typeof encoding === "function") {
    callback = encoding;
    encoding = null;
  }

  // Ignore empty buffers, since writing them doesn't invoke the callback
  // https://github.com/nodejs/node/issues/22066
  if (data.length === 0) {
    if (callback) {
      callback();
    }
    return;
  }
  // Only write when we don't exceed the maximum body length
  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
    this._requestBodyLength += data.length;
    this._requestBodyBuffers.push({ data: data, encoding: encoding });
    this._currentRequest.write(data, encoding, callback);
  }
  // Error when we exceed the maximum body length
  else {
    this.emit("error", new Error("Request body larger than maxBodyLength limit"));
    this.abort();
  }
};

// Ends the current native request
RedirectableRequest.prototype.end = function (data, encoding, callback) {
  // Shift parameters if necessary
  if (typeof data === "function") {
    callback = data;
    data = encoding = null;
  }
  else if (typeof encoding === "function") {
    callback = encoding;
    encoding = null;
  }

  // Write data and end
  var currentRequest = this._currentRequest;
  this.write(data || "", encoding, function () {
    currentRequest.end(null, null, callback);
  });
};

// Sets a header value on the current native request
RedirectableRequest.prototype.setHeader = function (name, value) {
  this._options.headers[name] = value;
  this._currentRequest.setHeader(name, value);
};

// Clears a header value on the current native request
RedirectableRequest.prototype.removeHeader = function (name) {
  delete this._options.headers[name];
  this._currentRequest.removeHeader(name);
};

// Proxy all other public ClientRequest methods
[
  "abort", "flushHeaders", "getHeader",
  "setNoDelay", "setSocketKeepAlive", "setTimeout",
].forEach(function (method) {
  RedirectableRequest.prototype[method] = function (a, b) {
    return this._currentRequest[method](a, b);
  };
});

// Proxy all public ClientRequest properties
["aborted", "connection", "socket"].forEach(function (property) {
  Object.defineProperty(RedirectableRequest.prototype, property, {
    get: function () { return this._currentRequest[property]; },
  });
});

// Executes the next native request (initial or redirect)
RedirectableRequest.prototype._performRequest = function () {
  // Load the native protocol
  var protocol = this._options.protocol;
  var nativeProtocol = this._options.nativeProtocols[protocol];
  if (!nativeProtocol) {
    this.emit("error", new Error("Unsupported protocol " + protocol));
    return;
  }

  // If specified, use the agent corresponding to the protocol
  // (HTTP and HTTPS use different types of agents)
  if (this._options.agents) {
    var scheme = protocol.substr(0, protocol.length - 1);
    this._options.agent = this._options.agents[scheme];
  }

  // Create the native request
  var request = this._currentRequest =
        nativeProtocol.request(this._options, this._onNativeResponse);
  this._currentUrl = url.format(this._options);

  // Set up event handlers
  request._redirectable = this;
  for (var event in eventHandlers) {
    /* istanbul ignore else */
    if (event) {
      request.on(event, eventHandlers[event]);
    }
  }

  // End a redirected request
  // (The first request must be ended explicitly with RedirectableRequest#end)
  if (this._isRedirect) {
    // Write the request entity and end.
    var i = 0;
    var buffers = this._requestBodyBuffers;
    (function writeNext() {
      if (i < buffers.length) {
        var buffer = buffers[i++];
        request.write(buffer.data, buffer.encoding, writeNext);
      }
      else {
        request.end();
      }
    }());
  }
};

// Processes a response from the current native request
RedirectableRequest.prototype._processResponse = function (response) {
  // Store the redirected response
  if (this._options.trackRedirects) {
    this._redirects.push({
      url: this._currentUrl,
      headers: response.headers,
      statusCode: response.statusCode,
    });
  }

  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
  // that further action needs to be taken by the user agent in order to
  // fulfill the request. If a Location header field is provided,
  // the user agent MAY automatically redirect its request to the URI
  // referenced by the Location field value,
  // even if the specific status code is not understood.
  var location = response.headers.location;
  if (location && this._options.followRedirects !== false &&
      response.statusCode >= 300 && response.statusCode < 400) {
    // RFC7231§6.4: A client SHOULD detect and intervene
    // in cyclical redirections (i.e., "infinite" redirection loops).
    if (++this._redirectCount > this._options.maxRedirects) {
      this.emit("error", new Error("Max redirects exceeded."));
      return;
    }

    // RFC7231§6.4: Automatic redirection needs to done with
    // care for methods not known to be safe […],
    // since the user might not wish to redirect an unsafe request.
    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates
    // that the target resource resides temporarily under a different URI
    // and the user agent MUST NOT change the request method
    // if it performs an automatic redirection to that URI.
    var header;
    var headers = this._options.headers;
    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {
      this._options.method = "GET";
      // Drop a possible entity and headers related to it
      this._requestBodyBuffers = [];
      for (header in headers) {
        if (/^content-/i.test(header)) {
          delete headers[header];
        }
      }
    }

    // Drop the Host header, as the redirect might lead to a different host
    if (!this._isRedirect) {
      for (header in headers) {
        if (/^host$/i.test(header)) {
          delete headers[header];
        }
      }
    }

    // Perform the redirected request
    var redirectUrl = url.resolve(this._currentUrl, location);
    debug("redirecting to", redirectUrl);
    Object.assign(this._options, url.parse(redirectUrl));
    this._isRedirect = true;
    this._performRequest();

    // Discard the remainder of the response to avoid waiting for data
    response.destroy();
  }
  else {
    // The response is not a redirect; return it as-is
    response.responseUrl = this._currentUrl;
    response.redirects = this._redirects;
    this.emit("response", response);

    // Clean up
    this._requestBodyBuffers = [];
  }
};

// Wraps the key/value object of protocols with redirect functionality
function wrap(protocols) {
  // Default settings
  var exports = {
    maxRedirects: 21,
    maxBodyLength: 10 * 1024 * 1024,
  };

  // Wrap each protocol
  var nativeProtocols = {};
  Object.keys(protocols).forEach(function (scheme) {
    var protocol = scheme + ":";
    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);

    // Executes a request, following redirects
    wrappedProtocol.request = function (options, callback) {
      if (typeof options === "string") {
        options = url.parse(options);
        options.maxRedirects = exports.maxRedirects;
      }
      else {
        options = Object.assign({
          protocol: protocol,
          maxRedirects: exports.maxRedirects,
          maxBodyLength: exports.maxBodyLength,
        }, options);
      }
      options.nativeProtocols = nativeProtocols;
      assert.equal(options.protocol, protocol, "protocol mismatch");
      debug("options", options);
      return new RedirectableRequest(options, callback);
    };

    // Executes a GET request, following redirects
    wrappedProtocol.get = function (options, callback) {
      var request = wrappedProtocol.request(options, callback);
      request.end();
      return request;
    };
  });
  return exports;
}

// Exports
module.exports = wrap({ http: http, https: https });
module.exports.wrap = wrap;


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(45);

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isApiLimitReached", function() { return isApiLimitReached; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCrawler", function() { return initCrawler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "singleWordToDisplay", function() { return singleWordToDisplay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadSingleWord", function() { return loadSingleWord; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefinitionNode", function() { return DefinitionNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClusterDefinitionNode", function() { return ClusterDefinitionNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadDictionaryAndChildren", function() { return loadDictionaryAndChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "traverseCluster", function() { return traverseCluster; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCluster", function() { return loadCluster; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWord", function() { return loadCommonWord; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords", function() { return loadCommonWords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWordsLetter", function() { return loadCommonWordsLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords3000_a_e", function() { return loadCommonWords3000_a_e; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords3000_f_p", function() { return loadCommonWords3000_f_p; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords3000_q_z", function() { return loadCommonWords3000_q_z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000_a_c", function() { return loadCommonWords10000_a_c; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000_d_h", function() { return loadCommonWords10000_d_h; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000_i_o", function() { return loadCommonWords10000_i_o; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000_p_r", function() { return loadCommonWords10000_p_r; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000_s_z", function() { return loadCommonWords10000_s_z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords3000", function() { return loadCommonWords3000; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommonWords10000", function() { return loadCommonWords10000; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadWordsOnly", function() { return loadWordsOnly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommon3000_words", function() { return loadCommon3000_words; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCommon10000_words", function() { return loadCommon10000_words; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadAll_words", function() { return loadAll_words; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMyWords", function() { return loadMyWords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wordsByFrequency", function() { return wordsByFrequency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateIndexes", function() { return generateIndexes; });
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dns__WEBPACK_IMPORTED_MODULE_0__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



const axios = __webpack_require__(27);

const fs = __webpack_require__(24);

const finder = __webpack_require__(56);

const API_LIMIT_EXCEPTION = {
  apiLimitException: 1
};
const TURNING_TIME_GMT = [20, 55];
const MAX_PARALLEL = 20;
let API_DAILY_LIMIT;
let MAX_WORDS;
let MAX_NODE_FREQUENCY;
let TRAVERSE_ALL;
let curtime, turntime;
let cacheInitializerCommon;
let cacheIsInitialized = false;
let pendingParallelRequests = 0;
let admittedParallelRequests = 0;
let totalWordsLastDay = 0;
let cacheInitIsError = false;
let pendingObjects = {};

function timeoutAsPromise(millis) {
  return new Promise((a, r) => {
    setTimeout(a, millis);
  });
}

async function parallelBottleneck() {
  pendingParallelRequests++;

  if (!(pendingParallelRequests % 1000)) {
    console.log("++pendingParallelRequests:" + pendingParallelRequests + " admittedParallelRequests:" + admittedParallelRequests);
  }

  while (admittedParallelRequests >= MAX_PARALLEL) {
    await timeoutAsPromise(20);
  }

  admittedParallelRequests++;
}

async function remoteInitBottleneck() {
  await parallelBottleneck();

  if (!cacheIsInitialized) {
    if (!cacheInitializerCommon) {
      cacheInitializerCommon = finder.findFiles("cache/words", turntime);
      totalWordsLastDay = await cacheInitializerCommon;
      cacheIsInitialized = true;
      console.log("remoteInitBottleneck  turntime:" + turntime.toUTCString() + "  totalWordsLastDay:" + totalWordsLastDay + " errors:" + finder.errors + " pendingParallelRequests:" + pendingParallelRequests + " admittedParallelRequests:" + admittedParallelRequests);
    } else {
      await cacheInitializerCommon;
    }
  }

  if (isApiLimitReached()) {
    if (!cacheInitIsError) {
      console.error("Could not proxy more request to API file/single  totalWordsLastDay+" + pendingParallelRequests + " >= API_DAILY_LIMIT :  " + (totalWordsLastDay + pendingParallelRequests) + " >= " + API_DAILY_LIMIT + "\n");
    }

    cacheInitIsError = true;
    return false;
  } else {
    totalWordsLastDay++;
    return true;
  }
}

function isApiLimitReached(pendingBeforeRequest = 0) {
  if (cacheIsInitialized) {
    if (cacheInitializerCommon) {
      return totalWordsLastDay + pendingParallelRequests + pendingBeforeRequest >= API_DAILY_LIMIT;
    } else {
      return false;
    }
  } else {
    return pendingParallelRequests + pendingBeforeRequest >= API_DAILY_LIMIT;
  }
}
async function initCrawler(_API_DAILY_LIMIT, _MAX_WORDS, _MAX_NODE_FREQUENCY, _TRAVERSE_ALL) {
  API_DAILY_LIMIT = _API_DAILY_LIMIT;
  MAX_WORDS = _MAX_WORDS;
  MAX_NODE_FREQUENCY = _MAX_NODE_FREQUENCY;
  TRAVERSE_ALL = _TRAVERSE_ALL;

  if (!fs.existsSync("cache/words")) {
    fs.mkdirSync("cache/words", {
      recursive: true
    });
  }

  if (!fs.existsSync("cache/clusters")) {
    fs.mkdirSync("cache/clusters");
  }

  if (!fs.existsSync("cache/index")) {
    fs.mkdirSync("cache/index");
  }

  curtime = new Date();
  turntime = Date.UTC(curtime.getUTCFullYear(), curtime.getUTCMonth(), curtime.getUTCDate(), TURNING_TIME_GMT[0], TURNING_TIME_GMT[1]); // 86400000 milliseconds (24 hours)

  if (curtime < turntime) {
    turntime = new Date(turntime - 86400000);
  } else {
    turntime = new Date(turntime);
  }

  console.log("initCrawler  curtime:" + curtime.toUTCString() + "  turntime:" + turntime.toUTCString());
}
function singleWordToDisplay(data) {
  // create new array to push data to
  let results = [];
  let result = {
    word: data.word,
    frequency: data.frequency,
    pronunciation: data.pronunciation,
    results,
    etc: ""
  };
  if (data.results) data.results.map(def => {
    let definitionArray = [];
    let definition = {
      partOfSpeech: def.partOfSpeech,
      properties: definitionArray
    }; // creates array of keys in object

    const keys = Object.keys(def);
    keys.map(key => {
      // builds regex that looks for capital letters
      // The response parameters are in camelCase, so we need to ID
      // the capital letters and add spaces instead so the 
      // front end can easily display the parameter labels
      const regex = /(?=[A-Z])/; // creates presentable label

      const label = key.split(regex).join(' ').toLowerCase(); // grabs the value for the parameter from the
      // definition object in response

      const value = def[key]; // constructs new object to send to frontend

      let newObj = {
        label,
        value,
        isString: typeof value === 'string' ? true : false
      };
      definitionArray.push(newObj);
    });
    results.push(definition);
  });
  return result;
}
async function loadSingleWord(word, asobject, cachedonly = false) {
  let fileword = word.replace(/[.,/']/g, "$").toLowerCase();
  const wfpath = `cache/words/${fileword}`;

  if (fs.existsSync(wfpath)) {
    //console.log("From cache file/single "+wfpath+"  asobject:"+asobject+"...\n");
    let ijson = fs.readFileSync(wfpath).toString();

    try {
      let data = JSON.parse(ijson);

      if (asobject) {
        data.fromCache = true;
        return data;
      } else {
        let result = singleWordToDisplay(data);
        const ojson = JSON.stringify(result); // modified

        return ojson;
      }
    } catch (e) {
      console.warn("Delete invalid file : " + wfpath, e);
      fs.unlinkSync(wfpath);
    }
  }

  try {
    if (pendingObjects[word]) {
      if (asobject) {
        return pendingObjects[word];
      } else {
        let result = singleWordToDisplay(pendingObjects[word]);
        const ojson = JSON.stringify(result); // modified

        return ojson;
      }
    }
  } catch (e) {
    console.warn("Error (", word, ") ", e && e.message ? e.message : "?");
    return null;
  }

  if (cachedonly) {
    return null;
  }

  try {
    let success = await remoteInitBottleneck();

    if (!success) {
      return null;
    }

    console.error(`ENTER     ${word} axios pending:${pendingParallelRequests} admitted:${admittedParallelRequests}`); // send request to the WordsAPI

    const response = await axios({
      "method": "GET",
      "url": `https://wordsapiv1.p.rapidapi.com/words/${word}`,
      "headers": {
        "content-type": "application/octet-stream",
        "x-rapidapi-host": "wordsapiv1.p.rapidapi.com",
        "x-rapidapi-key": process.env.RAPIDAPI_KEY
      }
    });
    console.error(`DONE      ${word} axios pending:${pendingParallelRequests} admitted:${admittedParallelRequests}`);

    var copy = _extends({}, response.data);

    copy.fromCache = false;
    pendingObjects[word] = copy;
    const djson = JSON.stringify(response.data); // original

    fs.writeFile(wfpath, djson, err => {
      if (err) {
        console.error("Cache file/single " + wfpath + "  asobject:" + asobject + " pendingParallelRequests:" + pendingParallelRequests + " admittedParallelRequests:" + admittedParallelRequests + " write failure : " + err + "\n");
      } else {
        console.log("Cache file/single " + wfpath + "  asobject:" + asobject + " pendingParallelRequests:" + pendingParallelRequests + " admittedParallelRequests:" + admittedParallelRequests + " written successfully\n");
      }

      delete pendingObjects[word];
    });

    if (asobject) {
      response.data.fromCache = false;
      return response.data;
    } else {
      let result = singleWordToDisplay(response.data);
      const ojson = JSON.stringify(result); // modified

      return ojson;
    }
  } catch (e) {
    console.warn("API error (", word, ") ", e && e.message ? e.message : "?");
    return null;
  } finally {
    pendingParallelRequests--;
    admittedParallelRequests--;

    if (pendingParallelRequests && !(pendingParallelRequests % 1000)) {
      console.log("--pendingParallelRequests:" + pendingParallelRequests + " admittedParallelRequests:" + admittedParallelRequests);
    }
  }
}
class DefinitionNode {
  constructor(entry, val) {
    _defineProperty(this, "entry", void 0);

    _defineProperty(this, "val", void 0);

    _defineProperty(this, "partOfSpeech", void 0);

    _defineProperty(this, "definition", void 0);

    _defineProperty(this, "synonyms", void 0);

    _defineProperty(this, "similar", void 0);

    _defineProperty(this, "word", void 0);

    _defineProperty(this, "examples", void 0);

    _defineProperty(this, "examplesTmp", void 0);

    _defineProperty(this, "key", void 0);

    this.entry = entry;
    this.val = val;
    this.definition = val.definition;
    this.synonyms = [];
    this.similar = [];
    this.examplesTmp = {};
    this.word = this.entry.word;
    this.partOfSpeech = this.val.partOfSpeech;
    this.synonyms.push.apply(this.synonyms, this.val.synonyms);
    this.synonyms.push(this.word);
    this.synonyms.sort();
    this.similar.push.apply(this.similar, this.val.similarTo);
    this.similar.sort();
    this.addExamples(this.val.examples);
    this.key = this.word + ":::::::" + this.synonyms.length + ":::::::" + this.synonyms.join(", ");
  }

  addExamples(examples) {
    if (examples) for (let x of examples) {
      this.examplesTmp[x] = 1;
    }
  }

  compress() {
    delete this.entry;
    delete this.val;
    delete this.key;
    this.examples = [];

    for (let x of Object.keys(this.examplesTmp)) {
      this.examples.push(x);
    }

    this.examples.sort();
    delete this.examplesTmp;
  }

}
class ClusterDefinitionNode extends DefinitionNode {
  constructor(by_def, entry, val, level) {
    super(entry, val);

    _defineProperty(this, "level", void 0);

    _defineProperty(this, "defkey", void 0);

    _defineProperty(this, "words", void 0);

    this.level = level;
    this.words = [];

    if (TRAVERSE_ALL) {
      appendTo(this.words, val.synonyms);
      appendTo(this.words, val.similarTo);
      appendTo(this.words, val.antonyms);
      appendTo(this.words, val.typeOf);
      appendTo(this.words, val.hasTypes);
      appendTo(this.words, val.partOf);
      appendTo(this.words, val.hasParts);
      appendTo(this.words, val.instanceOf);
      appendTo(this.words, val.hasInstances);
      appendTo(this.words, val.also);
      appendTo(this.words, val.entails);
      appendTo(this.words, val.memberOf);
      appendTo(this.words, val.hasMembers);
      appendTo(this.words, val.substanceOf);
      appendTo(this.words, val.hasSubstances);
      appendTo(this.words, val.inCategory);
      appendTo(this.words, val.hasCategories);
      appendTo(this.words, val.usageOf);
      appendTo(this.words, val.hasUsages);
      appendTo(this.words, val.inRegion);
      appendTo(this.words, val.regionOf);
      appendTo(this.words, val.pertainsTo);
    } else {
      appendTo(this.words, val.synonyms);
    }

    this.defkey = this.synonyms.length + "::::::" + this.synonyms.join(", ");
    this.key = this.level + ":::::::" + this.defkey;

    if (!by_def[this.defkey]) {
      by_def[this.defkey] = this;
    }
  }

  compress() {
    super.compress();
    delete this.words;
    delete this.defkey;
  }

}
;

function appendTo(array, itemOrArray) {
  if (Array.isArray(itemOrArray)) {
    array.push.apply(array, itemOrArray);
  } else if (itemOrArray) {
    array.push(itemOrArray);
  }
}

async function checkAPIlimitAndFinish(promises) {
  let remainingApiLimit = API_DAILY_LIMIT - (totalWordsLastDay + pendingParallelRequests);

  if (promises.length < remainingApiLimit) {
    return true;
  } else {
    await Promise.all(promises);
    remainingApiLimit = API_DAILY_LIMIT - (totalWordsLastDay + pendingParallelRequests);
    promises = [];
    return remainingApiLimit > 0;
  }
}

async function loadDictionaryAndChildren(tresult, word, traversion, parentNode, loadChildren) {
  if (!parentNode && !loadChildren) {
    return true;
  }

  const by_def = tresult.by_def;
  const entry = await loadSingleWord(word, true);

  if (entry && !entry.fromCache) {
    tresult.newWords++;
  }

  if (!entry || traversion.level > 1 && entry.frequency && entry.frequency >= MAX_NODE_FREQUENCY) {
    return true;
  }

  for (let key in entry.results) {
    const val = entry.results[key];

    if (parentNode && val.definition == parentNode.definition) {
      parentNode.addExamples(val.examples);
      if (!loadChildren) break;
    }

    if (loadChildren) {
      let node = new ClusterDefinitionNode(by_def, entry, val, traversion.level);

      for (let word of node.words) {
        let pair = {
          parent: node,
          word
        };
        traversion.wordsbreadthfirst.push(pair);
      }
    }
  }

  return true;
}
async function traverseCluster(tresult, word, themainabstraction = true, stopwhenallloaded = false) {
  let traversion = {
    level: 1,
    wordsbreadthfirst: [{
      word
    }]
  };

  if (themainabstraction) {
    tresult.noWords = 0;
    tresult.newWords = 0;
  }

  tresult.master = await loadSingleWord(word, true);

  if (!tresult.master) {
    return false;
  }

  do {
    var previouslevelchildwords = traversion.wordsbreadthfirst.concat([]);
    traversion.wordsbreadthfirst = [];
    let promises = [];

    try {
      for (let pair of previouslevelchildwords) {
        let w = pair.word;
        let loadChildren;

        if (tresult.by_w[w]) {
          loadChildren = false;
        } else {
          tresult.noWords++;
          tresult.by_w[w] = 1;
          loadChildren = tresult.noWords < MAX_WORDS;
          if (!(tresult.noWords % 1000)) console.log(tresult.noWords + "/" + MAX_WORDS);
        }

        let nodepromise = loadDictionaryAndChildren(tresult, w, traversion, pair.parent, loadChildren);
        promises.push(nodepromise);

        if (stopwhenallloaded && !(await checkAPIlimitAndFinish(promises))) {
          console.log(word + " Level " + traversion.level + " finished. Stop searching. API Limit reached.");
          return false;
        }

        if (tresult.noWords >= MAX_WORDS) {
          await Promise.all(promises);
          if (themainabstraction) console.log(word + " Level " + traversion.level + " finished. Search limit reached.");
          return true;
        }
      }
    } catch (e) {
      if (e === API_LIMIT_EXCEPTION) {
        console.log(word + " Level " + traversion.level + " finished. API Limit reached (by exception).");
        return false;
      } else {
        throw e;
      }
    }

    await Promise.all(promises);
    if (themainabstraction) console.log(word + " Level " + traversion.level + " finished.");
    traversion.level++;
  } while (traversion.wordsbreadthfirst.length);

  if (themainabstraction) {
    console.log(word + " Completed  Travesred:" + tresult.noWords + " written:" + tresult.newWords);
  }

  return true;
}
async function loadCluster(word, asobject) {
  const by_def = {};
  const by_w = {};
  const by_key = [];
  let tresult = {
    by_def,
    by_w
  };
  await traverseCluster(tresult, word);
  by_key.push.apply(by_key, Object.values(by_def));

  const cmp = (firstEl, secondEl) => {
    return firstEl.key.localeCompare(secondEl.key);
  };

  by_key.sort(cmp);

  for (let node of by_key) {
    node.compress();
  }

  let result = {
    word,
    noClusterEntries: by_key.length,
    results: by_key
  };

  if (tresult.master) {
    result.frequency = tresult.master.frequency;
    result.pronunciation = tresult.master.pronunciation;
  }

  let cjson;

  if (asobject) {
    return result;
  } else {
    cjson = JSON.stringify(result);
    return cjson;
  }
}
async function loadCommonWord(result, word, noWords) {
  const entry = await loadSingleWord(word, true);

  if (entry) {
    if (!entry.fromCache) {
      result.newWords++;
    }

    result.noWords++;
    if (!(result.noWords % 1000)) console.log(result.noWords + "/" + noWords);

    for (let key in entry.results) {
      const val = entry.results[key];
      const definitionNode = new DefinitionNode(entry, val);
      let promises = [];

      try {
        for (let syn of val.synonyms ? val.synonyms : []) {
          let nodepromise = loadDictionaryAndChildren(result, syn, {
            level: 0
          }, definitionNode, false);
          promises.push(nodepromise);
        }

        await Promise.all(promises);
      } catch (e) {
        if (e === API_LIMIT_EXCEPTION) {
          console.log(word + " Level " + traversion.level + " finished. API Limit reached (by exception).");
          return false;
        } else {
          throw e;
        }
      }

      result.noDefinitions++;
      result.results.push(definitionNode);
    }
  }
}
async function loadCommonWords(words, word, asobject) {
  // create new array to push data to
  let results = [];
  let result = {
    word,
    noWords: 0,
    newWords: 0,
    noDefinitions: 0,
    results
  };
  let promises = [];
  let noWords = Object.keys(words).length;

  for (let commonWord in words) {
    let cwpromise = loadCommonWord(result, commonWord, noWords);
    promises.push(cwpromise);
  }

  await Promise.all(promises);

  const cmp = (firstEl, secondEl) => {
    return firstEl.key.localeCompare(secondEl.key);
  };

  result.results.sort(cmp);
  let prevnode;
  let filtered = [];

  for (let node of result.results) {
    if (!prevnode || prevnode.definition != node.definition) {
      filtered.push(node);
      node.compress();
      prevnode = node;
    }
  }

  result.results = filtered;
  result.noDefinitions = filtered.length;
  console.log("Common words query processed  Travesred:" + result.noWords + " written:" + result.newWords);
  let cjson;

  if (asobject) {
    return result;
  } else {
    cjson = JSON.stringify(result);
    return cjson;
  }
}
function loadCommonWordsLetter(words, word, letter, asobject) {
  let ofLetter = {};
  let lc = letter.toLowerCase();

  for (let w of Object.keys(words)) {
    if (w[0].toLowerCase() == lc) {
      ofLetter[w] = 1;
    }
  }

  return loadCommonWords(ofLetter, word, asobject);
}
function loadCommonWords3000_a_e(word, asobject) {
  const cw = __webpack_require__(3);

  return loadCommonWords(cw.TheMostCommon3000, word, asobject);
}
function loadCommonWords3000_f_p(word, asobject) {
  const cw = __webpack_require__(4);

  return loadCommonWords(cw.TheMostCommon3000, word, asobject);
}
function loadCommonWords3000_q_z(word, asobject) {
  const cw = __webpack_require__(5);

  return loadCommonWords(cw.TheMostCommon3000, word, asobject);
}
function loadCommonWords10000_a_c(word, asobject) {
  const cw = __webpack_require__(6);

  return loadCommonWords(cw.TheMostCommon10000, word, asobject);
}
function loadCommonWords10000_d_h(word, asobject) {
  const cw = __webpack_require__(7);

  return loadCommonWords(cw.TheMostCommon10000, word, asobject);
}
function loadCommonWords10000_i_o(word, asobject) {
  const cw = __webpack_require__(8);

  return loadCommonWords(cw.TheMostCommon10000, word, asobject);
}
function loadCommonWords10000_p_r(word, asobject) {
  const cw = __webpack_require__(9);

  return loadCommonWords(cw.TheMostCommon10000, word, asobject);
}
function loadCommonWords10000_s_z(word, asobject) {
  const cw = __webpack_require__(10);

  return loadCommonWords(cw.TheMostCommon10000, word, asobject);
}
function loadCommonWords3000(word, letter, asobject) {
  let lc = letter.toLowerCase(),
      cw;

  if ('a' <= lc && lc <= 'e') {
    cw = __webpack_require__(3);
  } else if ('f' <= lc && lc <= 'p') {
    cw = __webpack_require__(4);
  } else if ('q' <= lc && lc <= 'z') {
    cw = __webpack_require__(5);
  } else {
    cw = {
      TheMostCommon3000: {}
    };
  }

  return loadCommonWordsLetter(cw.TheMostCommon3000, word, letter, asobject);
}
function loadCommonWords10000(word, letter, asobject) {
  let lc = letter.toLowerCase(),
      cw;

  if ('a' <= lc && lc <= 'c') {
    cw = __webpack_require__(6);
  } else if ('d' <= lc && lc <= 'h') {
    cw = __webpack_require__(7);
  } else if ('i' <= lc && lc <= 'o') {
    cw = __webpack_require__(8);
  } else if ('p' <= lc && lc <= 'r') {
    cw = __webpack_require__(9);
  } else if ('s' <= lc && lc <= 'z') {
    cw = __webpack_require__(10);
  } else {
    cw = {
      TheMostCommon10000: {}
    };
  }

  return loadCommonWordsLetter(cw.TheMostCommon10000, word, letter, asobject);
}
function loadWordsOnly(words0, word, asobject) {
  let words;

  if (Array.isArray(words0)) {
    words = words0;
  } else {
    words = [].concat(Object.keys(words0));
  }

  words.sort();
  let result = {
    word,
    noWords: words.length,
    results: words
  };
  let cjson;

  if (asobject) {
    return result;
  } else {
    cjson = JSON.stringify(result);
    return cjson;
  }
}
function loadCommon3000_words(word, asobject) {
  let cw1 = __webpack_require__(3);

  let cw2 = __webpack_require__(4);

  let cw3 = __webpack_require__(5);

  let TheMostCommon3000 = _extends({}, cw1.TheMostCommon3000, cw2.TheMostCommon3000, cw3.TheMostCommon3000);

  return loadWordsOnly(TheMostCommon3000, word, asobject);
}
function loadCommon10000_words(word, asobject) {
  let cw1 = __webpack_require__(6);

  let cw2 = __webpack_require__(7);

  let cw3 = __webpack_require__(8);

  let cw4 = __webpack_require__(9);

  let cw5 = __webpack_require__(10);

  let TheMostCommon10000 = _extends({}, cw1.TheMostCommon10000, cw2.TheMostCommon10000, cw3.TheMostCommon10000, cw4.TheMostCommon10000, cw5.TheMostCommon10000);

  return loadWordsOnly(TheMostCommon10000, word, asobject);
}
async function loadAll_words(word0, asobject) {
  let allwords0 = [];

  function onFile(strPath, stat) {
    let word = strPath.substring(12);
    allwords0.push(word);
  }

  await finder.findFiles("cache/words", 0, onFile);
  return loadWordsOnly(allwords0, word0, asobject);
}
function loadMyWords(word, asobject) {
  let cw1 = __webpack_require__(61);

  return loadWordsOnly(cw1.MyWords, word, asobject);
}
async function wordsByFrequency(word0, ffrom, fto = 1000000, asobject) {
  let files = [];
  const indpath = `cache/index/frequency`;
  let ijson = fs.readFileSync(indpath);
  let find = JSON.parse(ijson);
  let words0 = [];
  let notf = 0,
      fit = 0;

  for (let df in find) {
    let a = find[df];

    if (ffrom <= df && df <= fto) {
      words0.push.apply(words0, a);
      fit += a.length;
    } else {
      notf += a.length;
    }
  }

  console.log("Items fit:" + fit + " nonfit:" + notf + " tot:" + (fit + notf));
  return loadWordsOnly(words0, word0, asobject);
}
async function generateIndexes() {
  let files = [];

  async function onFile(strPath, stat) {
    let word = strPath.substring(12);
    files.push(word);
  }

  let nowords = await finder.findFiles("cache/words", 0, onFile);
  let cntf = 0;
  let byf = {};

  function entry(f) {
    let es = byf[f];

    if (!es) {
      byf[f] = es = [];
      cntf++;
    }

    return es;
  }

  let chkFile = async function (word) {
    let data = await loadSingleWord(word, true, true);

    if (data) {
      let df = data.frequency ? data.frequency : 0;
      entry(df).push(word);
    }
  };

  let promises = [];

  for (let file of files) {
    promises.push(chkFile(file));
  }

  await Promise.all(promises);
  var fkeys = [].concat(Object.keys(byf));
  fkeys.sort((a, b) => Number(a) - Number(b));
  var byfs = {};

  for (let f of fkeys) {
    let es = byf[f];
    byfs[f] = es;
    es.sort();
  }

  console.log("Frequency indexes:" + cntf + "  of no.words:" + nowords);

  function quantilize(size) {
    let lst = 0;
    let buckets = [0];

    for (let f of fkeys) {
      f = Number(f);

      if (f) {
        let es = byfs[f];
        lst += es ? es.length : 0;

        if (lst >= size) {
          let fpl = f + 0.005;
          let ff = fpl.toFixed(3);
          console.log("Frequency:.." + f + " " + ff + "  cnt:" + lst);
          lst = 0;
          buckets.push(ff);
        }
      }
    }

    console.log("Frequency:..  cnt:" + lst);
    console.log("\nvar frqntls" + size + "=[" + buckets.join(", ") + ",100];");
  }

  quantilize(800);
  quantilize(3000);
  quantilize(10000);
  const indpath = `cache/index/frequency`;
  const djson = JSON.stringify(byfs);
  console.log("Saving cache file/index " + indpath);
  fs.writeFileSync(indpath, djson);
}

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("dns");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(28);

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var bind = __webpack_require__(11);
var Axios = __webpack_require__(29);
var mergeConfig = __webpack_require__(22);
var defaults = __webpack_require__(13);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(23);
axios.CancelToken = __webpack_require__(54);
axios.isCancel = __webpack_require__(12);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(55);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var buildURL = __webpack_require__(1);
var InterceptorManager = __webpack_require__(30);
var dispatchRequest = __webpack_require__(31);
var mergeConfig = __webpack_require__(22);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var transformData = __webpack_require__(32);
var isCancel = __webpack_require__(12);
var defaults = __webpack_require__(13);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var settle = __webpack_require__(14);
var buildURL = __webpack_require__(1);
var buildFullPath = __webpack_require__(16);
var parseHeaders = __webpack_require__(37);
var isURLSameOrigin = __webpack_require__(38);
var createError = __webpack_require__(2);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(39);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var settle = __webpack_require__(14);
var buildFullPath = __webpack_require__(16);
var buildURL = __webpack_require__(1);
var http = __webpack_require__(17);
var https = __webpack_require__(18);
var httpFollow = __webpack_require__(19).http;
var httpsFollow = __webpack_require__(19).https;
var url = __webpack_require__(20);
var zlib = __webpack_require__(52);
var pkg = __webpack_require__(53);
var createError = __webpack_require__(2);
var enhanceError = __webpack_require__(15);

var isHttps = /https:?/;

/*eslint consistent-return:0*/
module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
    var resolve = function resolve(value) {
      resolvePromise(value);
    };
    var reject = function reject(value) {
      rejectPromise(value);
    };
    var data = config.data;
    var headers = config.headers;

    // Set User-Agent (required by some servers)
    // Only set header if it hasn't been set in config
    // See https://github.com/axios/axios/issues/69
    if (!headers['User-Agent'] && !headers['user-agent']) {
      headers['User-Agent'] = 'axios/' + pkg.version;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {
        // Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = Buffer.from(data, 'utf-8');
      } else {
        return reject(createError(
          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
          config
        ));
      }

      // Add Content-Length header if data exists
      headers['Content-Length'] = data.length;
    }

    // HTTP basic authentication
    var auth = undefined;
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    }

    // Parse url
    var fullPath = buildFullPath(config.baseURL, config.url);
    var parsed = url.parse(fullPath);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth) {
      delete headers.Authorization;
    }

    var isHttpsRequest = isHttps.test(protocol);
    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;

    var options = {
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method.toUpperCase(),
      headers: headers,
      agent: agent,
      agents: { http: config.httpAgent, https: config.httpsAgent },
      auth: auth
    };

    if (config.socketPath) {
      options.socketPath = config.socketPath;
    } else {
      options.hostname = parsed.hostname;
      options.port = parsed.port;
    }

    var proxy = config.proxy;
    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
        var shouldProxy = true;

        if (noProxyEnv) {
          var noProxy = noProxyEnv.split(',').map(function trim(s) {
            return s.trim();
          });

          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
            if (!proxyElement) {
              return false;
            }
            if (proxyElement === '*') {
              return true;
            }
            if (proxyElement[0] === '.' &&
                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
              return true;
            }

            return parsed.hostname === proxyElement;
          });
        }


        if (shouldProxy) {
          proxy = {
            host: parsedProxyUrl.hostname,
            port: parsedProxyUrl.port
          };

          if (parsedProxyUrl.auth) {
            var proxyUrlAuth = parsedProxyUrl.auth.split(':');
            proxy.auth = {
              username: proxyUrlAuth[0],
              password: proxyUrlAuth[1]
            };
          }
        }
      }
    }

    if (proxy) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      options.port = proxy.port;
      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;

      // Basic proxy authorization
      if (proxy.auth) {
        var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
        options.headers['Proxy-Authorization'] = 'Basic ' + base64;
      }
    }

    var transport;
    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttpsProxy ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }
      transport = isHttpsProxy ? httpsFollow : httpFollow;
    }

    if (config.maxContentLength && config.maxContentLength > -1) {
      options.maxBodyLength = config.maxContentLength;
    }

    // Create the request
    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return;

      // uncompress the response body transparently if required
      var stream = res;
      switch (res.headers['content-encoding']) {
      /*eslint default-case:0*/
      case 'gzip':
      case 'compress':
      case 'deflate':
        // add the unzipper to the body stream processing pipeline
        stream = (res.statusCode === 204) ? stream : stream.pipe(zlib.createUnzip());

        // remove the content-encoding in order to not confuse downstream operations
        delete res.headers['content-encoding'];
        break;
      }

      // return the last request in case of redirects
      var lastRequest = res.req || req;

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);

          // make sure the content length is not over the maxContentLength if specified
          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {
            stream.destroy();
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',
              config, null, lastRequest));
          }
        });

        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });

        stream.on('end', function handleStreamEnd() {
          var responseData = Buffer.concat(responseBuffer);
          if (config.responseType !== 'arraybuffer') {
            responseData = responseData.toString(config.responseEncoding);
          }

          response.data = responseData;
          settle(resolve, reject, response);
        });
      }
    });

    // Handle errors
    req.on('error', function handleRequestError(err) {
      if (req.aborted) return;
      reject(enhanceError(err, config, null, req));
    });

    // Handle request timeout
    if (config.timeout) {
      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.
      // And timer callback will be fired, and abort() will be invoked before connection, then get "socket hang up" and code ECONNRESET.
      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.
      // And then these socket which be hang up will devoring CPU little by little.
      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.
      req.setTimeout(config.timeout, function handleRequestTimeout() {
        req.abort();
        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));
      });
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (req.aborted) return;

        req.abort();
        reject(cancel);
      });
    }

    // Send the request
    if (utils.isStream(data)) {
      data.on('error', function handleStreamError(err) {
        reject(enhanceError(err, config, null, req));
      }).pipe(req);
    } else {
      req.end(data);
    }
  });
};


/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer') {
  module.exports = __webpack_require__(44);
} else {
  module.exports = __webpack_require__(46);
}


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(21);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}


/***/ }),
/* 45 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var tty = __webpack_require__(47);
var util = __webpack_require__(48);

/**
 * This is the Node.js implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(21);
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
 * Colors.
 */

exports.colors = [ 6, 2, 3, 4, 5, 1 ];

try {
  var supportsColor = __webpack_require__(49);
  if (supportsColor && supportsColor.level >= 2) {
    exports.colors = [
      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,
      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,
      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,
      205, 206, 207, 208, 209, 214, 215, 220, 221
    ];
  }
} catch (err) {
  // swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key
    .substring(6)
    .toLowerCase()
    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
  else if (val === 'null') val = null;
  else val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts
    ? Boolean(exports.inspectOpts.colors)
    : tty.isatty(process.stderr.fd);
}

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

exports.formatters.o = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts)
    .split('\n').map(function(str) {
      return str.trim()
    }).join(' ');
};

/**
 * Map %o to `util.inspect()`, allowing multiple lines if needed.
 */

exports.formatters.O = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var colorCode = '\u001b[3' + (c < 8 ? c : '8;5;' + c);
    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\u001b[0m';

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
  } else {
    args[0] = getDate() + name + ' ' + args[0];
  }
}

function getDate() {
  if (exports.inspectOpts.hideDate) {
    return '';
  } else {
    return new Date().toISOString() + ' ';
  }
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log() {
  return process.stderr.write(util.format.apply(util, arguments) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init (debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
 * Enable namespaces listed in `process.env.DEBUG` initially.
 */

exports.enable(load());


/***/ }),
/* 47 */
/***/ (function(module, exports) {

module.exports = require("tty");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const os = __webpack_require__(50);
const hasFlag = __webpack_require__(51);

const env = process.env;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false')) {
	forceColor = false;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = true;
}
if ('FORCE_COLOR' in env) {
	forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === false) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor !== true) {
		return 0;
	}

	const min = forceColor ? 1 : 0;

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	if (env.TERM === 'dumb') {
		return min;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};


/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};


/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = require("zlib");

/***/ }),
/* 53 */
/***/ (function(module) {

module.exports = JSON.parse("{\"_args\":[[\"axios@0.19.2\",\"/home/zsfelber/dev/rapidapi-dictionary-app-example\"]],\"_from\":\"axios@0.19.2\",\"_id\":\"axios@0.19.2\",\"_inBundle\":false,\"_integrity\":\"sha512-fjgm5MvRHLhx+osE2xoekY70AhARk3a6hkN+3Io1jc00jtquGvxYlKlsFUhmUET0V5te6CcZI7lcv2Ym61mjHA==\",\"_location\":\"/axios\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"axios@0.19.2\",\"name\":\"axios\",\"escapedName\":\"axios\",\"rawSpec\":\"0.19.2\",\"saveSpec\":null,\"fetchSpec\":\"0.19.2\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/axios/-/axios-0.19.2.tgz\",\"_spec\":\"0.19.2\",\"_where\":\"/home/zsfelber/dev/rapidapi-dictionary-app-example\",\"author\":{\"name\":\"Matt Zabriskie\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}],\"dependencies\":{\"follow-redirects\":\"1.5.10\"},\"description\":\"Promise based HTTP client for the browser and node.js\",\"devDependencies\":{\"bundlesize\":\"^0.17.0\",\"coveralls\":\"^3.0.0\",\"es6-promise\":\"^4.2.4\",\"grunt\":\"^1.0.2\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.1.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^20.1.0\",\"grunt-karma\":\"^2.0.0\",\"grunt-mocha-test\":\"^0.13.3\",\"grunt-ts\":\"^6.0.0-beta.19\",\"grunt-webpack\":\"^1.0.18\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^1.3.0\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-coverage\":\"^1.1.1\",\"karma-firefox-launcher\":\"^1.1.0\",\"karma-jasmine\":\"^1.1.1\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-opera-launcher\":\"^1.0.0\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^1.2.0\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-webpack\":\"^1.7.0\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"mocha\":\"^5.2.0\",\"sinon\":\"^4.5.0\",\"typescript\":\"^2.8.1\",\"url-search-params\":\"^0.10.0\",\"webpack\":\"^1.13.1\",\"webpack-dev-server\":\"^1.14.1\"},\"homepage\":\"https://github.com/axios/axios\",\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"axios\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/axios/axios.git\"},\"scripts\":{\"build\":\"NODE_ENV=production grunt build\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"examples\":\"node ./examples/server.js\",\"fix\":\"eslint --fix lib/**/*.js\",\"postversion\":\"git push && git push --tags\",\"preversion\":\"npm test\",\"start\":\"node ./sandbox/server.js\",\"test\":\"grunt test && bundlesize\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"},\"typings\":\"./index.d.ts\",\"version\":\"0.19.2\"}");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(23);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cnt", function() { return cnt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errors", function() { return errors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findFiles", function() { return findFiles; });
const FindFiles = __webpack_require__(57);

let cnt = 0,
    errors = 0;
function findFiles(rootFolder, fileModifiedDate, onFile) {
  var finder = new FindFiles({
    rootFolder,
    fileModifiedDate
  });
  var result, resolve, reject;
  cnt = 0;
  errors = 0;
  finder.on("match", function (strPath, stat) {
    if (onFile) onFile(strPath, stat);
    cnt++;
  });
  finder.on("complete", function () {
    resolve(cnt);
  });
  finder.on("patherror", function (err, strPath) {
    console.log("Error for Path " + strPath + " " + err); // Note that an error in accessing a particular file does not stop the whole show

    errors++;
  });
  finder.on("error", function (err) {
    console.log("Global Error " + err);
    errors++;
  });
  result = new Promise((_resolve, _reject) => {
    resolve = _resolve;
    reject = _reject;
    finder.startSearch();
  });
  return result;
}

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const fs_1 = __importDefault(__webpack_require__(24));
const async_1 = __importDefault(__webpack_require__(58));
const path_1 = __importDefault(__webpack_require__(59));
const events_1 = __importDefault(__webpack_require__(60));
var EventEmitter = events_1.default.EventEmitter;
/***
 * This class recursively finds files that match the filter function passed to the constructor
 * An alternative constructor takes a fileModifiedDate and returns all files that have been modified since that date
 * this class emits a number of events
 * on "match" is emitted for every path that matches
 */
class finder extends EventEmitter {
    constructor(options) {
        super();
        if (options.fileModifiedDate) {
            options.filterFunction = (strPath, fsStat) => {
                return (fsStat.mtime > options.fileModifiedDate);
            };
        }
        if (!options.filterFunction) {
            options.filterFunction = () => true;
        }
        this.options = options;
    }
    startSearch() {
        this.recurseFolder(this.options.rootFolder, (err) => {
            if (err) {
                this.emit("error", err);
                return;
            }
            //console.log("This Should Call when everything is finished");
            this.emit("complete");
        });
    }
    recurseFolder(strFolderName, folderCompleteCallback) {
        fs_1.default.readdir(strFolderName, (err, files) => {
            if (err) {
                this.onPathError(err, strFolderName);
                return folderCompleteCallback(err);
            }
            if (!files) {
                return folderCompleteCallback(null); // This is just an empty folder
            }
            async_1.default.each(files, (file, callback) => {
                try {
                    var strPath = path_1.default.join(strFolderName, file);
                }
                catch (e) {
                    this.onPathError(e, strPath);
                    return callback(null); // Don't return error to callback or we will miss other files in directory
                }
                this.onFileFound(strPath, callback);
            }, (err) => {
                if (err) {
                    this.onPathError(err, strFolderName);
                }
                //                    if(strFolderName.length < 20)
                //                        console.log("finished " + strFolderName);
                return folderCompleteCallback(err);
            });
        });
    }
    onFileFound(strPath, callback) {
        fs_1.default.lstat(strPath, (err, stat) => {
            if (err) {
                this.onPathError(err, strPath);
                return callback(null); // Don't return error to callback or we will miss other files in directory
            }
            if (!stat) {
                this.onPathError(new Error("Could not get stat for file " + strPath), strPath);
                return callback(null); // Don't return error to callback or we will miss other files in directory
            }
            if (stat.isDirectory()) {
                this.checkMatch(strPath, stat);
                this.recurseFolder(strPath, (err) => {
                    if (err) {
                        this.onPathError(err, strPath);
                    }
                    return callback(null);
                });
            }
            else {
                this.checkMatch(strPath, stat);
                return callback(null);
            }
        });
    }
    checkMatch(strPath, stat) {
        try {
            if (this.options.filterFunction(strPath, stat)) {
                this.emit("match", strPath, stat);
            }
        }
        catch (e) {
            this.onPathError(e, strPath);
        }
    }
    onPathError(err, strPath) {
        try {
            this.emit("patherror", err, strPath);
        }
        catch (e) {
            //Already emitted a path error and the handler failed must not throw error or other files will fail to process too
            this.emit("error", new Error("Error in path Error Handler" + e));
        }
    }
}
module.exports = finder;
//# sourceMappingURL=node-find-files.js.map

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global setImmediate: false, setTimeout: false, console: false */
(function () {

    var async = {};

    // global on the server, window in the browser
    var root, previous_async;

    root = this;
    if (root != null) {
      previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        var called = false;
        return function() {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }
    }

    //// cross-browser compatiblity functions ////

    var _each = function (arr, iterator) {
        if (arr.forEach) {
            return arr.forEach(iterator);
        }
        for (var i = 0; i < arr.length; i += 1) {
            iterator(arr[i], i, arr);
        }
    };

    var _map = function (arr, iterator) {
        if (arr.map) {
            return arr.map(iterator);
        }
        var results = [];
        _each(arr, function (x, i, a) {
            results.push(iterator(x, i, a));
        });
        return results;
    };

    var _reduce = function (arr, iterator, memo) {
        if (arr.reduce) {
            return arr.reduce(iterator, memo);
        }
        _each(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    };

    var _keys = function (obj) {
        if (Object.keys) {
            return Object.keys(obj);
        }
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////
    if (typeof process === 'undefined' || !(process.nextTick)) {
        if (typeof setImmediate === 'function') {
            async.nextTick = function (fn) {
                setImmediate(fn);
            };
        }
        else {
            async.nextTick = function (fn) {
                setTimeout(fn, 0);
            };
        }
    }
    else {
        async.nextTick = process.nextTick;
    }

    async.each = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        _each(arr, function (x) {
            iterator(x, only_once(function (err) {
                if (err) {
                    callback(err);
                    callback = function () {};
                }
                else {
                    completed += 1;
                    if (completed >= arr.length) {
                        callback(null);
                    }
                }
            }));
        });
    };
    async.forEach = async.each;

    async.eachSeries = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        var iterate = function () {
            var sync = true;
            iterator(arr[completed], function (err) {
                if (err) {
                    callback(err);
                    callback = function () {};
                }
                else {
                    completed += 1;
                    if (completed >= arr.length) {
                        callback(null);
                    }
                    else {
                        if (sync) {
                            async.nextTick(iterate);
                        }
                        else {
                            iterate();
                        }
                    }
                }
            });
            sync = false;
        };
        iterate();
    };
    async.forEachSeries = async.eachSeries;

    async.eachLimit = function (arr, limit, iterator, callback) {
        var fn = _eachLimit(limit);
        fn.apply(null, [arr, iterator, callback]);
    };
    async.forEachLimit = async.eachLimit;

    var _eachLimit = function (limit) {

        return function (arr, iterator, callback) {
            callback = callback || function () {};
            if (!arr.length || limit <= 0) {
                return callback();
            }
            var completed = 0;
            var started = 0;
            var running = 0;

            (function replenish () {
                if (completed >= arr.length) {
                    return callback();
                }

                while (running < limit && started < arr.length) {
                    started += 1;
                    running += 1;
                    iterator(arr[started - 1], function (err) {
                        if (err) {
                            callback(err);
                            callback = function () {};
                        }
                        else {
                            completed += 1;
                            running -= 1;
                            if (completed >= arr.length) {
                                callback();
                            }
                            else {
                                replenish();
                            }
                        }
                    });
                }
            })();
        };
    };


    var doParallel = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.each].concat(args));
        };
    };
    var doParallelLimit = function(limit, fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [_eachLimit(limit)].concat(args));
        };
    };
    var doSeries = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.eachSeries].concat(args));
        };
    };


    var _asyncMap = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (err, v) {
                results[x.index] = v;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    };
    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = function (arr, limit, iterator, callback) {
        return _mapLimit(limit)(arr, iterator, callback);
    };

    var _mapLimit = function(limit) {
        return doParallelLimit(limit, _asyncMap);
    };

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachSeries(arr, function (x, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err, memo);
        });
    };
    // inject alias
    async.inject = async.reduce;
    // foldl alias
    async.foldl = async.reduce;

    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, function (x) {
            return x;
        }).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };
    // foldr alias
    async.foldr = async.reduceRight;

    var _filter = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.filter = doParallel(_filter);
    async.filterSeries = doSeries(_filter);
    // select alias
    async.select = async.filter;
    async.selectSeries = async.filterSeries;

    var _reject = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (!v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.reject = doParallel(_reject);
    async.rejectSeries = doSeries(_reject);

    var _detect = function (eachfn, arr, iterator, main_callback) {
        eachfn(arr, function (x, callback) {
            iterator(x, function (result) {
                if (result) {
                    main_callback(x);
                    main_callback = function () {};
                }
                else {
                    callback();
                }
            });
        }, function (err) {
            main_callback();
        });
    };
    async.detect = doParallel(_detect);
    async.detectSeries = doSeries(_detect);

    async.some = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (v) {
                    main_callback(true);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(false);
        });
    };
    // any alias
    async.any = async.some;

    async.every = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (!v) {
                    main_callback(false);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(true);
        });
    };
    // all alias
    async.all = async.every;

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                var fn = function (left, right) {
                    var a = left.criteria, b = right.criteria;
                    return a < b ? -1 : a > b ? 1 : 0;
                };
                callback(null, _map(results.sort(fn), function (x) {
                    return x.value;
                }));
            }
        });
    };

    async.auto = function (tasks, callback) {
        callback = callback || function () {};
        var keys = _keys(tasks);
        if (!keys.length) {
            return callback(null);
        }

        var results = {};

        var listeners = [];
        var addListener = function (fn) {
            listeners.unshift(fn);
        };
        var removeListener = function (fn) {
            for (var i = 0; i < listeners.length; i += 1) {
                if (listeners[i] === fn) {
                    listeners.splice(i, 1);
                    return;
                }
            }
        };
        var taskComplete = function () {
            _each(listeners.slice(0), function (fn) {
                fn();
            });
        };

        addListener(function () {
            if (_keys(results).length === keys.length) {
                callback(null, results);
                callback = function () {};
            }
        });

        _each(keys, function (k) {
            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];
            var taskCallback = function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _each(_keys(results), function(rkey) {
                        safeResults[rkey] = results[rkey];
                    });
                    safeResults[k] = args;
                    callback(err, safeResults);
                    // stop subsequent errors hitting callback multiple times
                    callback = function () {};
                }
                else {
                    results[k] = args;
                    async.nextTick(taskComplete);
                }
            };
            var requires = task.slice(0, Math.abs(task.length - 1)) || [];
            var ready = function () {
                return _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            };
            if (ready()) {
                task[task.length - 1](taskCallback, results);
            }
            else {
                var listener = function () {
                    if (ready()) {
                        removeListener(listener);
                        task[task.length - 1](taskCallback, results);
                    }
                };
                addListener(listener);
            }
        });
    };

    async.waterfall = function (tasks, callback) {
        callback = callback || function () {};
        if (!tasks.length) {
            return callback();
        }
        var wrapIterator = function (iterator) {
            return function (err) {
                if (err) {
                    callback.apply(null, arguments);
                    callback = function () {};
                }
                else {
                    var args = Array.prototype.slice.call(arguments, 1);
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    async.nextTick(function () {
                        iterator.apply(null, args);
                    });
                }
            };
        };
        wrapIterator(async.iterator(tasks))();
    };

    var _parallel = function(eachfn, tasks, callback) {
        callback = callback || function () {};
        if (tasks.constructor === Array) {
            eachfn.map(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            eachfn.each(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.parallel = function (tasks, callback) {
        _parallel({ map: async.map, each: async.each }, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);
    };

    async.series = function (tasks, callback) {
        callback = callback || function () {};
        if (tasks.constructor === Array) {
            async.mapSeries(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            async.eachSeries(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.iterator = function (tasks) {
        var makeCallback = function (index) {
            var fn = function () {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            };
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        };
        return makeCallback(0);
    };

    async.apply = function (fn) {
        var args = Array.prototype.slice.call(arguments, 1);
        return function () {
            return fn.apply(
                null, args.concat(Array.prototype.slice.call(arguments))
            );
        };
    };

    var _concat = function (eachfn, arr, fn, callback) {
        var r = [];
        eachfn(arr, function (x, cb) {
            fn(x, function (err, y) {
                r = r.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, r);
        });
    };
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        if (test()) {
            var sync = true;
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                if (sync) {
                    async.nextTick(function () {
                        async.whilst(test, iterator, callback);
                    });
                }
                else {
                    async.whilst(test, iterator, callback);
                }
            });
            sync = false;
        }
        else {
            callback();
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        var sync = true;
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            if (test()) {
                if (sync) {
                    async.nextTick(function () {
                        async.doWhilst(iterator, test, callback);
                    });
                }
                else {
                    async.doWhilst(iterator, test, callback);
                }
            }
            else {
                callback();
            }
        });
        sync = false;
    };

    async.until = function (test, iterator, callback) {
        if (!test()) {
            var sync = true;
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                if (sync) {
                    async.nextTick(function () {
                        async.until(test, iterator, callback);
                    });
                }
                else {
                    async.until(test, iterator, callback);
                }
            });
            sync = false;
        }
        else {
            callback();
        }
    };

    async.doUntil = function (iterator, test, callback) {
        var sync = true;
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            if (!test()) {
                if (sync) {
                    async.nextTick(function () {
                        async.doUntil(iterator, test, callback);
                    });
                }
                else {
                    async.doUntil(iterator, test, callback);
                }
            }
            else {
                callback();
            }
        });
        sync = false;
    };

    async.queue = function (worker, concurrency) {
        if (concurrency === undefined) {
            concurrency = 1;
        }
        function _insert(q, data, pos, callback) {
          if(data.constructor !== Array) {
              data = [data];
          }
          _each(data, function(task) {
              var item = {
                  data: task,
                  callback: typeof callback === 'function' ? callback : null
              };

              if (pos) {
                q.tasks.unshift(item);
              } else {
                q.tasks.push(item);
              }

              if (q.saturated && q.tasks.length === concurrency) {
                  q.saturated();
              }
              async.nextTick(q.process);
          });
        }

        var workers = 0;
        var q = {
            tasks: [],
            concurrency: concurrency,
            saturated: null,
            empty: null,
            drain: null,
            push: function (data, callback) {
              _insert(q, data, false, callback);
            },
            unshift: function (data, callback) {
              _insert(q, data, true, callback);
            },
            process: function () {
                if (workers < q.concurrency && q.tasks.length) {
                    var task = q.tasks.shift();
                    if (q.empty && q.tasks.length === 0) {
                        q.empty();
                    }
                    workers += 1;
                    var sync = true;
                    var next = function () {
                        workers -= 1;
                        if (task.callback) {
                            task.callback.apply(task, arguments);
                        }
                        if (q.drain && q.tasks.length + workers === 0) {
                            q.drain();
                        }
                        q.process();
                    };
                    var cb = only_once(function () {
                        var cbArgs = arguments;

                        if (sync) {
                            async.nextTick(function () {
                                next.apply(null, cbArgs);
                            });
                        } else {
                            next.apply(null, arguments);
                        }
                    });
                    worker(task.data, cb);
                    sync = false;
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            }
        };
        return q;
    };

    async.cargo = function (worker, payload) {
        var working     = false,
            tasks       = [];

        var cargo = {
            tasks: tasks,
            payload: payload,
            saturated: null,
            empty: null,
            drain: null,
            push: function (data, callback) {
                if(data.constructor !== Array) {
                    data = [data];
                }
                _each(data, function(task) {
                    tasks.push({
                        data: task,
                        callback: typeof callback === 'function' ? callback : null
                    });
                    if (cargo.saturated && tasks.length === payload) {
                        cargo.saturated();
                    }
                });
                async.nextTick(cargo.process);
            },
            process: function process() {
                if (working) return;
                if (tasks.length === 0) {
                    if(cargo.drain) cargo.drain();
                    return;
                }

                var ts = typeof payload === 'number'
                            ? tasks.splice(0, payload)
                            : tasks.splice(0);

                var ds = _map(ts, function (task) {
                    return task.data;
                });

                if(cargo.empty) cargo.empty();
                working = true;
                worker(ds, function () {
                    working = false;

                    var args = arguments;
                    _each(ts, function (data) {
                        if (data.callback) {
                            data.callback.apply(null, args);
                        }
                    });

                    process();
                });
            },
            length: function () {
                return tasks.length;
            },
            running: function () {
                return working;
            }
        };
        return cargo;
    };

    var _console_fn = function (name) {
        return function (fn) {
            var args = Array.prototype.slice.call(arguments, 1);
            fn.apply(null, args.concat([function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (typeof console !== 'undefined') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _each(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            }]));
        };
    };
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        hasher = hasher || function (x) {
            return x;
        };
        var memoized = function () {
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (key in memo) {
                callback.apply(null, memo[key]);
            }
            else if (key in queues) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([function () {
                    memo[key] = arguments;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                      q[i].apply(null, arguments);
                    }
                }]));
            }
        };
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
      return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
      };
    };

    async.times = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.map(counter, iterator, callback);
    };

    async.timesSeries = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.mapSeries(counter, iterator, callback);
    };

    async.compose = function (/* functions... */) {
        var fns = Array.prototype.reverse.call(arguments);
        return function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([function () {
                    var err = arguments[0];
                    var nextargs = Array.prototype.slice.call(arguments, 1);
                    cb(err, nextargs);
                }]))
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        };
    };

    async.applyEach = function (fns /*args...*/) {
        var go = function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            return async.each(fns, function (fn, cb) {
                fn.apply(that, args.concat([cb]));
            },
            callback);
        };
        if (arguments.length > 1) {
            var args = Array.prototype.slice.call(arguments, 1);
            return go.apply(this, args);
        }
        else {
            return go;
        }
    };

    // AMD / RequireJS
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
            return async;
        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
    // Node.js
    else {}

}());


/***/ }),
/* 59 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 60 */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyWords", function() { return MyWords; });
const MyWords = {
  "crap": 1,
  "dear": 1,
  "dumb": 1,
  "freak": 1,
  "jack": 1,
  "bob": 1,
  "jerk": 1,
  "jerry": 1,
  "jimmy": 1,
  "lee": 1,
  "mike": 1,
  "nick": 1,
  "nuts": 1,
  "piss": 1,
  "roger": 1,
  "sam": 1,
  "boo": 1,
  "buck": 1,
  "bust": 1,
  "butt": 1,
  "carter": 1,
  "chill": 1,
  "chuck": 1,
  "closet": 1,
  "cock": 1,
  "coke": 1,
  "cos": 1,
  "crane": 1,
  "crush": 1,
  "cunt": 1,
  "dean": 1,
  "decent": 1,
  "desert": 1,
  "doll": 1,
  "dong": 1,
  "downtown": 1,
  "drag": 1,
  "duck": 1,
  "dump": 1,
  "estate": 1,
  "fabulous": 1,
  "filthy": 1,
  "forth": 1,
  "hail": 1,
  "hop": 1,
  "jay": 1,
  "ken": 1,
  "kitty": 1,
  "maid": 1,
  "mayor": 1,
  "moron": 1,
  "naughty": 1,
  "nasty": 1,
  "pens": 1,
  "pot": 1,
  "precious": 1,
  "prick": 1,
  "principal": 1,
  "pro": 1,
  "punch": 1,
  "punk": 1,
  "purse": 1,
  "raj": 1,
  "ram": 1,
  "realise": 1,
  "recall": 1,
  "rick": 1,
  "rip": 1,
  "rubbish": 1,
  "rude": 1,
  "sally": 1,
  "seal": 1,
  "servant": 1,
  "shore": 1,
  "slut": 1,
  "struck": 1,
  "sue": 1,
  "tears": 1,
  "tear": 1,
  "tip": 1,
  "toast": 1,
  "trigger": 1,
  "trunk": 1,
  "vice": 1,
  "wallet": 1,
  "wanting": 1,
  "woo": 1,
  "ail": 1,
  "alas": 1,
  "amber": 1,
  "aryan": 1,
  "assault": 1,
  "asylum": 1,
  "attic": 1,
  "audition": 1,
  "auto": 1,
  "avenge": 1,
  "attached": 1,
  "bachelor": 1,
  "backed": 1,
  "backup": 1,
  "backyard": 1,
  "bail": 1,
  "bait": 1,
  "banging": 1,
  "bark": 1,
  "barn": 1,
  "bearing": 1,
  "blink": 1,
  "bliss": 1,
  "bloke": 1,
  "bollocks": 1,
  "bolt": 1,
  "booth": 1,
  "booty": 1,
  "booze": 1,
  "bore": 1,
  "bout": 1,
  "brat": 1,
  "breast": 1,
  "breeze": 1,
  "bribe": 1,
  "bud": 1,
  "bugger": 1,
  "bully": 1,
  "bump": 1,
  "bun": 1,
  "busted": 1,
  "cafe": 1,
  "cal": 1,
  "cane": 1,
  "cant": 1,
  "carriage": 1,
  "casey": 1,
  "chad": 1,
  "champ": 1,
  "chanting": 1,
  "chap": 1,
  "chatter": 1,
  "choir": 1,
  "choke": 1,
  "chopper": 1,
  "chorus": 1,
  "chow": 1,
  "clan": 1,
  "clap": 1,
  "classy": 1,
  "clay": 1,
  "clerk": 1,
  "clip": 1,
  "coffin": 1,
  "cole": 1,
  "collector": 1,
  "colony": 1,
  "commissioner": 1,
  "companion": 1,
  "cooper": 1,
  "cord": 1,
  "dale": 1,
  "darn": 1,
  "deck": 1,
  "deed": 1,
  "deer": 1,
  "delight": 1,
  "den": 1,
  "deputy": 1,
  "detention": 1,
  "devoted": 1,
  "dime": 1,
  "ding": 1,
  "dip": 1,
  "disguise": 1,
  "distress": 1,
  "distract": 1,
  "disturbing": 1,
  "ditch": 1,
  "dolly": 1,
  "doomed": 1,
  "dough": 1,
  "draft": 1,
  "dub": 1,
  "dug": 1,
  "esther": 1,
  "eyed": 1,
  "fag": 1,
  "fatso": 1,
  "fatty": 1,
  "feast": 1,
  "fold": 1,
  "fond": 1,
  "footage": 1,
  "foreman": 1,
  "foster": 1,
  "fragrance": 1,
  "freaky": 1,
  "fuss": 1,
  "gal": 1,
  "gee": 1,
  "genuine": 1,
  "ghetto": 1,
  "gig": 1,
  "glue": 1,
  "goat": 1,
  "goose": 1,
  "grain": 1,
  "grasp": 1,
  "groom": 1,
  "growling": 1,
  "guilt": 1,
  "gum": 1,
  "hank": 1,
  "harper": 1,
  "hatch": 1,
  "haul": 1,
  "haunted": 1,
  "hawk": 1,
  "hay": 1,
  "heather": 1,
  "hector": 1,
  "hence": 1,
  "hereby": 1,
  "hint": 1,
  "homer": 1,
  "homicide": 1,
  "hooked": 1,
  "hooker": 1,
  "horny": 1,
  "howdy": 1,
  "hughes": 1,
  "hum": 1,
  "hunger": 1,
  "hush": 1,
  "hut": 1,
  "inn": 1,
  "inner": 1,
  "intact": 1,
  "intimate": 1,
  "irresponsible": 1,
  "issued": 1,
  "jade": 1,
  "janitor": 1,
  "jelly": 1,
  "jersey": 1,
  "jolly": 1,
  "junkie": 1,
  "keen": 1,
  "kidney": 1,
  "khan": 1,
  "knives": 1,
  "knot": 1,
  "lance": 1,
  "lane": 1,
  "lap": 1,
  "lawn": 1,
  "lean": 1,
  "leap": 1,
  "leather": 1,
  "ling": 1,
  "lit": 1,
  "liver": 1,
  "loads": 1,
  "lobster": 1,
  "locker": 1,
  "lodge": 1,
  "log": 1,
  "lounge": 1,
  "lung": 1,
  "mall": 1,
  "mansion": 1,
  "marc": 1,
  "marine": 1,
  "mason": 1,
  "mattress": 1,
  "mistress": 1,
  "mob": 1,
  "mole": 1,
  "momma": 1,
  "morgue": 1,
  "motive": 1,
  "mount": 1,
  "mourning": 1,
  "muffled": 1,
  "mug": 1,
  "nap": 1,
  "neat": 1,
  "negro": 1,
  "norman": 1,
  "notion": 1,
  "nun": 1,
  "nut": 1,
  "olive": 1,
  "opposed": 1,
  "orchestra": 1,
  "outfit": 1,
  "ox": 1,
  "pad": 1,
  "palm": 1,
  "panties": 1,
  "parole": 1,
  "pat": 1,
  "pasta": 1,
  "peek": 1,
  "petty": 1,
  "pier": 1,
  "piggy": 1,
  "pill": 1,
  "pimp": 1,
  "pinch": 1,
  "pine": 1,
  "ping": 1,
  "pins": 1,
  "pledge": 1,
  "poke": 1,
  "poker": 1,
  "pond": 1,
  "poop": 1,
  "popping": 1,
  "porch": 1,
  "porter": 1,
  "pounding": 1,
  "probation": 1,
  "prom": 1,
  "puff": 1,
  "puke": 1,
  "pursue": 1,
  "pursuit": 1,
  "quest": 1,
  "rack": 1,
  "racket": 1,
  "rap": 1,
  "rascal": 1,
  "rash": 1,
  "reed": 1,
  "refuge": 1,
  "relieved": 1,
  "represent": 1,
  "reservations": 1,
  "resort": 1,
  "respected": 1,
  "retard": 1,
  "retire": 1,
  "reunion": 1,
  "roaring": 1,
  "roast": 1,
  "robe": 1,
  "rod": 1,
  "rogue": 1,
  "rub": 1,
  "ruby": 1,
  "rug": 1,
  "rum": 1,
  "rumbling": 1,
  "rumor": 1,
  "rushed": 1,
  "rusty": 1,
  "salute": 1,
  "sausage": 1,
  "scam": 1,
  "scan": 1,
  "scarf": 1,
  "scattered": 1,
  "scotch": 1,
  "scoundrel": 1,
  "scout": 1,
  "screeching": 1,
  "screwing": 1,
  "scum": 1,
  "seated": 1,
  "seize": 1,
  "serving": 1,
  "sew": 1,
  "shaft": 1,
  "shallow": 1,
  "shankar": 1,
  "shed": 1,
  "sheet": 1,
  "shell": 1,
  "shepherd": 1,
  "shield": 1,
  "shin": 1,
  "shove": 1,
  "shovel": 1,
  "shrimp": 1,
  "shuttle": 1,
  "sip": 1,
  "sire": 1,
  "siren": 1,
  "sissy": 1,
  "skate": 1,
  "skinny": 1,
  "slam": 1,
  "slim": 1,
  "slit": 1,
  "smack": 1,
  "smash": 1,
  "snack": 1,
  "snap": 1,
  "sofia": 1,
  "solitary": 1,
  "solomon": 1,
  "sonny": 1,
  "sore": 1,
  "spa": 1,
  "sperm": 1,
  "spike": 1,
  "spill": 1,
  "spin": 1,
  "spine": 1,
  "spite": 1,
  "splendid": 1,
  "spoil": 1,
  "spotted": 1,
  "spots": 1,
  "spreading": 1,
  "springs": 1,
  "squeeze": 1,
  "stain": 1,
  "stake": 1,
  "stall": 1,
  "stew": 1,
  "stiff": 1,
  "sting": 1,
  "stitch": 1,
  "stoned": 1,
  "stove": 1,
  "straighten": 1,
  "straw": 1,
  "stray": 1,
  "stream": 1,
  "stressed": 1,
  "strings": 1,
  "stud": 1,
  "stuffed": 1,
  "stunt": 1,
  "sub": 1,
  "sucker": 1,
  "suite": 1,
  "suites": 1,
  "supreme": 1,
  "surgeon": 1,
  "surveillance": 1,
  "swell": 1,
  "sworn": 1,
  "tan": 1,
  "tang": 1,
  "tap": 1,
  "tearing": 1,
  "tease": 1,
  "teddy": 1,
  "temptation": 1,
  "tender": 1,
  "tense": 1,
  "terminal": 1,
  "testament": 1,
  "theatre": 1,
  "theft": 1,
  "thrill": 1,
  "throne": 1,
  "tick": 1,
  "tide": 1,
  "tidy": 1,
  "tiffany": 1,
  "til": 1,
  "tin": 1,
  "tire": 1,
  "tissue": 1,
  "toe": 1,
  "tops": 1,
  "torch": 1,
  "toss": 1,
  "trail": 1,
  "tremendous": 1,
  "trey": 1,
  "tub": 1,
  "tube": 1,
  "tuck": 1,
  "tucker": 1,
  "tummy": 1,
  "turner": 1,
  "turtle": 1,
  "twist": 1,
  "undercover": 1,
  "untie": 1,
  "urine": 1,
  "vain": 1,
  "vault": 1,
  "veil": 1,
  "vet": 1,
  "wade": 1,
  "wan": 1,
  "wander": 1,
  "ward": 1,
  "warren": 1,
  "wax": 1,
  "wee": 1,
  "weed": 1,
  "wells": 1,
  "whack": 1,
  "wheels": 1,
  "whip": 1,
  "whirring": 1,
  "whisper": 1,
  "whistling": 1,
  "wicked": 1,
  "wit": 1,
  "wont": 1,
  "workshop": 1,
  "worn": 1,
  "worthless": 1,
  "worthy": 1,
  "wreck": 1,
  "wrestling": 1,
  "yea": 1,
  "yell": 1,
  "yummy": 1,
  "zip": 1,
  "abide": 1,
  "academics": 1,
  "accomplice": 1,
  "accustomed": 1,
  "acquaintance": 1,
  "addiction": 1,
  "aerial": 1,
  "affirmative": 1,
  "aging": 1,
  "airborne": 1,
  "allegiance": 1,
  "allowance": 1,
  "alternate": 1,
  "amendment": 1,
  "ammunition": 1,
  "anguish": 1,
  "appealing": 1,
  "applaud": 1,
  "apprentice": 1,
  "arc": 1,
  "arch": 1,
  "aroused": 1,
  "artery": 1,
  "artillery": 1,
  "ashtray": 1,
  "asset": 1,
  "astray": 1,
  "auspicious": 1,
  "babbling": 1,
  "banquet": 1,
  "barb": 1,
  "barge": 1,
  "bash": 1,
  "basil": 1,
  "bathtub": 1,
  "baton": 1,
  "battalion": 1,
  "batter": 1,
  "beads": 1,
  "beatles": 1,
  "beau": 1,
  "beaver": 1,
  "beck": 1,
  "beetle": 1,
  "beggar": 1,
  "belle": 1,
  "bender": 1,
  "berry": 1,
  "bey": 1,
  "birdie": 1,
  "bladder": 1,
  "blaring": 1,
  "blasted": 1,
  "blaze": 1,
  "bleep": 1,
  "blend": 1,
  "blinded": 1,
  "bling": 1,
  "blizzard": 1,
  "blooded": 1,
  "bloodshed": 1,
  "blossom": 1,
  "blouse": 1,
  "blowjob": 1,
  "bluff": 1,
  "blunt": 1,
  "blur": 1,
  "blush": 1,
  "boar": 1,
  "boner": 1,
  "boob": 1,
  "boon": 1,
  "bounty": 1,
  "bouquet": 1,
  "bourgeois": 1,
  "bowls": 1,
  "brace": 1,
  "brag": 1,
  "breaker": 1,
  "brethren": 1,
  "brew": 1,
  "briefing": 1,
  "brink": 1,
  "brooks": 1,
  "broom": 1,
  "brothel": 1,
  "bruise": 1,
  "brunette": 1,
  "brute": 1,
  "buckle": 1,
  "budge": 1,
  "buff": 1,
  "buffet": 1,
  "bulb": 1,
  "bulletin": 1,
  "bullying": 1,
  "bummer": 1,
  "bumper": 1,
  "bunk": 1,
  "buns": 1,
  "burke": 1,
  "butler": 1,
  "buttocks": 1,
  "cain": 1,
  "cam": 1,
  "canned": 1,
  "cardiac": 1,
  "cardinal": 1,
  "caress": 1,
  "caretaker": 1,
  "carmine": 1,
  "carve": 1,
  "caste": 1,
  "cavalry": 1,
  "cavity": 1,
  "celestial": 1,
  "cereal": 1,
  "cerebral": 1,
  "chalk": 1,
  "chancellor": 1,
  "chant": 1,
  "chaplin": 1,
  "charcoal": 1,
  "charter": 1,
  "cheeky": 1,
  "cheerful": 1,
  "cheerleader": 1,
  "cherish": 1,
  "chic": 1,
  "chilling": 1,
  "chilly": 1,
  "chimney": 1,
  "chimp": 1,
  "chit": 1,
  "chopped": 1,
  "chubby": 1,
  "chump": 1,
  "chunk": 1,
  "cinderella": 1,
  "clam": 1,
  "clanging": 1,
  "clapping": 1,
  "clarity": 1,
  "clarify": 1,
  "clash": 1,
  "clause": 1,
  "claw": 1,
  "cleaners": 1,
  "cleanse": 1,
  "clearance": 1,
  "climax": 1,
  "cling": 1,
  "closure": 1,
  "clutch": 1,
  "cockpit": 1,
  "cocky": 1,
  "cod": 1,
  "collateral": 1,
  "collier": 1,
  "collision": 1,
  "cologne": 1,
  "comb": 1,
  "comeback": 1,
  "comfy": 1,
  "commence": 1,
  "commotion": 1,
  "communion": 1,
  "compartment": 1,
  "competing": 1,
  "compound": 1,
  "comprehend": 1,
  "conceal": 1,
  "concubine": 1,
  "concussion": 1,
  "condemn": 1,
  "condo": 1,
  "cone": 1,
  "considerate": 1,
  "consolation": 1,
  "console": 1,
  "constable": 1,
  "consult": 1,
  "contagious": 1,
  "contaminated": 1,
  "contemporary": 1,
  "contempt": 1,
  "contestant": 1,
  "convey": 1,
  "convict": 1,
  "coo": 1,
  "coop": 1,
  "copper": 1,
  "coral": 1,
  "cork": 1,
  "corky": 1,
  "corrupted": 1,
  "cot": 1,
  "counterfeit": 1,
  "coup": 1,
  "courier": 1,
  "courthouse": 1,
  "courtroom": 1,
  "courtyard": 1,
  "cox": 1,
  "coyote": 1,
  "cozy": 1,
  "cracker": 1,
  "crackling": 1,
  "cradle": 1,
  "craft": 1,
  "cramp": 1,
  "crank": 1,
  "crappy": 1,
  "crate": 1,
  "crater": 1,
  "creaking": 1,
  "creeps": 1,
  "crib": 1,
  "cripple": 1,
  "crippled": 1,
  "crisp": 1,
  "crook": 1,
  "crooked": 1,
  "crop": 1,
  "crotch": 1,
  "crude": 1,
  "crunch": 1,
  "crushing": 1,
  "crust": 1,
  "crutch": 1,
  "cub": 1,
  "cube": 1,
  "cuckoo": 1,
  "cuddle": 1,
  "cuff": 1,
  "culprit": 1,
  "cum": 1,
  "cunning": 1,
  "cupboard": 1,
  "curb": 1,
  "curfew": 1,
  "curly": 1,
  "cutter": 1,
  "daft": 1,
  "dagger": 1,
  "dairy": 1,
  "damp": 1,
  "dandy": 1,
  "danish": 1,
  "daring": 1,
  "daytime": 1,
  "debris": 1,
  "debut": 1,
  "decay": 1,
  "deceive": 1,
  "decisive": 1,
  "decline": 1,
  "decree": 1,
  "defect": 1,
  "definite": 1,
  "defy": 1,
  "delightful": 1,
  "demolition": 1,
  "denial": 1,
  "dent": 1,
  "departed": 1,
  "dept": 1,
  "depths": 1,
  "descent": 1,
  "despicable": 1,
  "despise": 1,
  "detour": 1,
  "devote": 1,
  "devour": 1,
  "dew": 1,
  "diaper": 1,
  "diarrhea": 1,
  "digs": 1,
  "dim": 1,
  "dine": 1,
  "dire": 1,
  "dirk": 1,
  "discharge": 1,
  "disciple": 1,
  "discretion": 1,
  "disguised": 1,
  "disgust": 1,
  "disgusted": 1,
  "dismiss": 1,
  "dispatch": 1,
  "disposal": 1,
  "dispose": 1,
  "disrespect": 1,
  "distinguish": 1,
  "distorted": 1,
  "distraction": 1,
  "disturbance": 1,
  "diversion": 1,
  "dodge": 1,
  "doe": 1,
  "dolphin": 1,
  "domain": 1,
  "dome": 1,
  "dominic": 1,
  "doom": 1,
  "doorman": 1,
  "doorstep": 1,
  "doorway": 1,
  "dorian": 1,
  "dork": 1,
  "dorm": 1,
  "dory": 1,
  "downhill": 1,
  "dowry": 1,
  "drake": 1,
  "drawers": 1,
  "dread": 1,
  "dreamer": 1,
  "drenched": 1,
  "dresser": 1,
  "drifting": 1,
  "drilling": 1,
  "drip": 1,
  "drought": 1,
  "duchess": 1,
  "duct": 1,
  "duel": 1,
  "dumpster": 1,
  "dung": 1,
  "dungeon": 1,
  "dusk": 1,
  "dwell": 1,
  "dye": 1,
  "dyke": 1,
  "eccentric": 1,
  "eddy": 1,
  "emerge": 1,
  "empress": 1,
  "endangered": 1,
  "enlightenment": 1,
  "excrement": 1,
  "exile": 1,
  "expel": 1,
  "expertise": 1,
  "exploit": 1,
  "exposure": 1,
  "exquisite": 1,
  "extinct": 1,
  "eyesight": 1,
  "fang": 1,
  "ferocious": 1,
  "fiery": 1,
  "filth": 1,
  "fin": 1,
  "finch": 1,
  "flank": 1,
  "flap": 1,
  "flare": 1,
  "flats": 1,
  "flatter": 1,
  "flick": 1,
  "fling": 1,
  "flint": 1,
  "flirt": 1,
  "flock": 1,
  "flop": 1,
  "flora": 1,
  "flour": 1,
  "fluffy": 1,
  "flushed": 1,
  "flute": 1,
  "foe": 1,
  "foremost": 1,
  "forfeit": 1,
  "forged": 1,
  "formation": 1,
  "founder": 1,
  "fracture": 1,
  "framed": 1,
  "fraternity": 1,
  "freeway": 1,
  "freshen": 1,
  "freshman": 1,
  "fright": 1,
  "fudge": 1,
  "fugitive": 1,
  "fuller": 1,
  "funk": 1,
  "funky": 1,
  "fuse": 1,
  "fuzzy": 1,
  "gadget": 1,
  "gag": 1,
  "gale": 1,
  "garrison": 1,
  "gasp": 1,
  "gauge": 1,
  "geek": 1,
  "geezer": 1,
  "gel": 1,
  "gem": 1,
  "genre": 1,
  "genuinely": 1,
  "getaway": 1,
  "giddy": 1,
  "glen": 1,
  "glitter": 1,
  "gloomy": 1,
  "glowing": 1,
  "goddam": 1,
  "goo": 1,
  "goody": 1,
  "goofy": 1,
  "goon": 1,
  "gore": 1,
  "gown": 1,
  "gracious": 1,
  "grail": 1,
  "gramps": 1,
  "graveyard": 1,
  "gravy": 1,
  "grease": 1,
  "grove": 1,
  "grub": 1,
  "grudge": 1,
  "grumpy": 1,
  "grunt": 1,
  "gulf": 1,
  "gutter": 1,
  "hag": 1,
  "hale": 1,
  "hallowed": 1,
  "hamlet": 1,
  "hardy": 1,
  "hare": 1,
  "hanks": 1,
  "harassment": 1,
  "hash": 1,
  "hasty": 1,
  "haunt": 1,
  "havana": 1,
  "havoc": 1,
  "headmaster": 1,
  "heave": 1,
  "heed": 1,
  "heel": 1,
  "hen": 1,
  "hick": 1,
  "hideous": 1,
  "hideout": 1,
  "hissing": 1,
  "hitch": 1,
  "hoax": 1,
  "hog": 1,
  "holler": 1,
  "homo": 1,
  "honk": 1,
  "hoover": 1,
  "hopeful": 1,
  "hopper": 1,
  "hose": 1,
  "hound": 1,
  "housewife": 1,
  "howl": 1,
  "hub": 1,
  "hugging": 1,
  "hull": 1,
  "hump": 1,
  "hunch": 1,
  "hunk": 1,
  "hurrah": 1,
  "hustle": 1,
  "hutch": 1,
  "hypocrite": 1,
  "idiotic": 1,
  "idle": 1,
  "ignorance": 1,
  "illiterate": 1,
  "imbecile": 1,
  "immense": 1,
  "immature": 1,
  "impose": 1,
  "incapable": 1,
  "incense": 1,
  "inclined": 1,
  "index": 1,
  "indulge": 1,
  "inferior": 1,
  "infirmary": 1,
  "influential": 1,
  "informant": 1,
  "informer": 1,
  "initiative": 1,
  "injustice": 1,
  "inmate": 1,
  "inquiry": 1,
  "insolent": 1,
  "insomnia": 1,
  "intent": 1,
  "intercept": 1,
  "intercourse": 1,
  "intern": 1,
  "interrogate": 1,
  "intervene": 1,
  "intimacy": 1,
  "intriguing": 1,
  "intuition": 1,
  "invade": 1,
  "irritated": 1,
  "itch": 1,
  "jammed": 1,
  "jasper": 1,
  "jerking": 1,
  "jinx": 1,
  "jog": 1,
  "jonah": 1,
  "joyful": 1,
  "jumbo": 1,
  "jumper": 1,
  "jurisdiction": 1,
  "justified": 1,
  "jab": 1,
  "keeper": 1,
  "kettle": 1,
  "kin": 1,
  "kinky": 1,
  "kirk": 1,
  "kite": 1,
  "kitten": 1,
  "knit": 1,
  "knob": 1,
  "lace": 1,
  "laden": 1,
  "lair": 1,
  "lakh": 1,
  "lam": 1,
  "laurel": 1,
  "lea": 1,
  "leash": 1,
  "lebanon": 1,
  "lefty": 1,
  "legion": 1,
  "lei": 1,
  "lever": 1,
  "liaison": 1,
  "licking": 1,
  "lid": 1,
  "limb": 1,
  "lime": 1,
  "limp": 1,
  "lingerie": 1,
  "lining": 1,
  "lisbon": 1,
  "literary": 1,
  "litter": 1,
  "liv": 1,
  "loaf": 1,
  "locking": 1,
  "loft": 1,
  "lone": 1,
  "lonesome": 1,
  "loo": 1,
  "lookout": 1,
  "loop": 1,
  "loot": 1,
  "lordship": 1,
  "lotion": 1,
  "lump": 1,
  "lure": 1,
  "lynch": 1,
  "maestro": 1,
  "magistrate": 1,
  "mammoth": 1,
  "manifest": 1,
  "manor": 1,
  "manuscript": 1,
  "maple": 1,
  "marching": 1,
  "mare": 1,
  "marquis": 1,
  "marrow": 1,
  "marsh": 1,
  "mart": 1,
  "mat": 1,
  "mating": 1,
  "mayhem": 1,
  "maze": 1,
  "mecca": 1,
  "medieval": 1,
  "melon": 1,
  "memo": 1,
  "memorize": 1,
  "menace": 1,
  "mend": 1,
  "merchandise": 1,
  "mercury": 1,
  "merger": 1,
  "merit": 1,
  "midget": 1,
  "midst": 1,
  "mil": 1,
  "mint": 1,
  "miraculous": 1,
  "mischief": 1,
  "mischievous": 1,
  "missus": 1,
  "mist": 1,
  "mock": 1,
  "modesty": 1,
  "moist": 1,
  "mold": 1,
  "monastery": 1,
  "monstrous": 1,
  "moo": 1,
  "moody": 1,
  "mop": 1,
  "moreover": 1,
  "moss": 1,
  "mourn": 1,
  "muttering": 1,
  "nag": 1,
  "nauseous": 1,
  "neglect": 1,
  "nerd": 1,
  "nil": 1,
  "nipple": 1,
  "nod": 1,
  "nonetheless": 1,
  "nosy": 1,
  "notch": 1,
  "nuisance": 1,
  "numb": 1,
  "nursery": 1,
  "oak": 1,
  "obedient": 1,
  "obscure": 1,
  "occasions": 1,
  "offender": 1,
  "okey": 1,
  "oppression": 1,
  "ounce": 1,
  "overdo": 1,
  "overhead": 1,
  "oyster": 1,
  "pact": 1,
  "paddle": 1,
  "palmer": 1,
  "pancake": 1,
  "panther": 1,
  "par": 1,
  "para": 1,
  "parachute": 1,
  "parcel": 1,
  "parish": 1,
  "parlor": 1,
  "parted": 1,
  "parting": 1,
  "pas": 1,
  "paste": 1,
  "patent": 1,
  "patron": 1,
  "patty": 1,
  "pause": 1,
  "paw": 1,
  "pawn": 1,
  "payback": 1,
  "payroll": 1,
  "peas": 1,
  "peasant": 1,
  "peck": 1,
  "peculiar": 1,
  "peel": 1,
  "peep": 1,
  "peer": 1,
  "peg": 1,
  "penetrate": 1,
  "penthouse": 1,
  "perish": 1,
  "perverted": 1,
  "pest": 1,
  "pharmaceutical": 1,
  "phenomenal": 1,
  "phoebe": 1,
  "phony": 1,
  "physician": 1,
  "pickle": 1,
  "pickup": 1,
  "picky": 1,
  "pierce": 1,
  "piglet": 1,
  "pike": 1,
  "piles": 1,
  "piper": 1,
  "pitcher": 1,
  "pitiful": 1,
  "planting": 1,
  "plaster": 1,
  "plato": 1,
  "platoon": 1,
  "plea": 1,
  "plead": 1,
  "pluck": 1,
  "plum": 1,
  "plumbing": 1,
  "poking": 1,
  "polar": 1,
  "poof": 1,
  "pools": 1,
  "porridge": 1,
  "posh": 1,
  "postpone": 1,
  "posture": 1,
  "potion": 1,
  "practiced": 1,
  "prank": 1,
  "preach": 1,
  "precinct": 1,
  "prejudice": 1,
  "preliminary": 1,
  "premature": 1,
  "premiere": 1,
  "premises": 1,
  "prep": 1,
  "preserved": 1,
  "prevail": 1,
  "probe": 1,
  "proceedings": 1,
  "procession": 1,
  "profound": 1,
  "prohibited": 1,
  "pronounced": 1,
  "prop": 1,
  "proposition": 1,
  "props": 1,
  "prospect": 1,
  "prosper": 1,
  "prosperity": 1,
  "prostate": 1,
  "pry": 1,
  "pulp": 1,
  "pup": 1,
  "pupil": 1,
  "purity": 1,
  "pussycat": 1,
  "quack": 1,
  "quarry": 1,
  "quarterback": 1,
  "quid": 1,
  "quits": 1,
  "racer": 1,
  "racial": 1,
  "raft": 1,
  "rag": 1,
  "rake": 1,
  "rapist": 1,
  "raspberry": 1,
  "rated": 1,
  "rattle": 1,
  "rave": 1,
  "raven": 1,
  "realm": 1,
  "recite": 1,
  "reckless": 1,
  "redeem": 1,
  "redhead": 1,
  "reef": 1,
  "reel": 1,
  "refined": 1,
  "reform": 1,
  "reign": 1,
  "relay": 1,
  "remedy": 1,
  "renowned": 1,
  "rep": 1,
  "resemble": 1,
  "restroom": 1,
  "revelation": 1,
  "revive": 1,
  "rhyme": 1,
  "rib": 1,
  "ribbon": 1,
  "riddle": 1,
  "ridge": 1,
  "rift": 1,
  "rig": 1,
  "rigged": 1,
  "rim": 1,
  "rinse": 1,
  "ripe": 1,
  "rite": 1,
  "roam": 1,
  "roar": 1,
  "rocker": 1,
  "roller": 1,
  "rooster": 1,
  "rouge": 1,
  "rover": 1,
  "royalty": 1,
  "rubbing": 1,
  "rubble": 1,
  "runaway": 1,
  "runway": 1,
  "rust": 1,
  "rustling": 1,
  "saddle": 1,
  "sage": 1,
  "sami": 1,
  "sands": 1,
  "sane": 1,
  "sawyer": 1,
  "scales": 1,
  "scanner": 1,
  "scarlet": 1,
  "scholar": 1,
  "scold": 1,
  "scoop": 1,
  "scoot": 1,
  "scot": 1,
  "scram": 1,
  "scrap": 1,
  "scrape": 1,
  "scratching": 1,
  "screech": 1,
  "screening": 1,
  "scroll": 1,
  "scrub": 1,
  "sculpture": 1,
  "seafood": 1,
  "secrecy": 1,
  "seduce": 1,
  "seizure": 1,
  "seldom": 1,
  "semen": 1,
  "sensational": 1,
  "sentiment": 1,
  "serge": 1,
  "sermon": 1,
  "serum": 1,
  "server": 1,
  "sessions": 1,
  "setup": 1,
  "severed": 1,
  "sewer": 1,
  "sewing": 1,
  "shack": 1,
  "shades": 1,
  "shady": 1,
  "shag": 1,
  "shaggy": 1,
  "shah": 1,
  "shaky": 1,
  "sham": 1,
  "shaman": 1,
  "sheer": 1,
  "sheikh": 1,
  "sheldrake": 1,
  "shipment": 1,
  "shite": 1,
  "shivering": 1,
  "shred": 1,
  "shrieking": 1,
  "shrine": 1,
  "shutter": 1,
  "shutting": 1,
  "sidewalk": 1,
  "siege": 1,
  "sincerity": 1,
  "sinful": 1,
  "sinister": 1,
  "sinner": 1,
  "skinner": 1,
  "skipper": 1,
  "skunk": 1,
  "slack": 1,
  "slain": 1,
  "slash": 1,
  "slate": 1,
  "slay": 1,
  "sleigh": 1,
  "slick": 1,
  "slimy": 1,
  "slogan": 1,
  "slope": 1,
  "sloppy": 1,
  "slot": 1,
  "slots": 1,
  "slug": 1,
  "sly": 1,
  "smashing": 1,
  "smelly": 1,
  "snail": 1,
  "snatch": 1,
  "sneaky": 1,
  "sniff": 1,
  "sniper": 1,
  "snitch": 1,
  "snot": 1,
  "soak": 1,
  "sod": 1,
  "sol": 1,
  "solitude": 1,
  "sovereign": 1,
  "sow": 1,
  "span": 1,
  "spank": 1,
  "spat": 1,
  "specimen": 1,
  "specs": 1,
  "spectacle": 1,
  "speeding": 1,
  "spencer": 1,
  "spoiling": 1,
  "spooky": 1,
  "squash": 1,
  "squat": 1,
  "squeaking": 1,
  "squeal": 1,
  "squealing": 1,
  "squirt": 1,
  "stack": 1,
  "staged": 1,
  "stakes": 1,
  "stale": 1,
  "stalker": 1,
  "stallion": 1,
  "stance": 1,
  "standby": 1,
  "starboard": 1,
  "stark": 1,
  "stash": 1,
  "steep": 1,
  "steer": 1,
  "steering": 1,
  "stein": 1,
  "stem": 1,
  "stench": 1,
  "stern": 1,
  "stingy": 1,
  "stinky": 1,
  "stirring": 1,
  "stocks": 1,
  "stool": 1,
  "strain": 1,
  "straining": 1,
  "stranded": 1,
  "strangle": 1,
  "strap": 1,
  "streak": 1,
  "stretcher": 1,
  "stripes": 1,
  "stripped": 1,
  "stripper": 1,
  "stroll": 1,
  "stuffy": 1,
  "stung": 1,
  "stunned": 1,
  "stunning": 1,
  "submitted": 1,
  "suited": 1,
  "superintendent": 1,
  "supportive": 1,
  "surfer": 1,
  "surge": 1,
  "swan": 1,
  "swat": 1,
  "sway": 1,
  "swearing": 1,
  "swelling": 1,
  "swift": 1,
  "swollen": 1,
  "swinging": 1,
  "swimmer": 1,
  "syrup": 1,
  "syphilis": 1,
  "tab": 1,
  "tabs": 1,
  "tackle": 1,
  "tacky": 1,
  "tactics": 1,
  "tad": 1,
  "tally": 1,
  "tame": 1,
  "tammy": 1,
  "tar": 1,
  "tart": 1,
  "tavern": 1,
  "tee": 1,
  "telegram": 1,
  "teller": 1,
  "tempered": 1,
  "temporarily": 1,
  "tempt": 1,
  "tenant": 1,
  "thigh": 1,
  "thong": 1,
  "thongs": 1,
  "thorn": 1,
  "thorough": 1,
  "thoughtful": 1,
  "thrash": 1,
  "threshold": 1,
  "thrust": 1,
  "thud": 1,
  "thug": 1,
  "thump": 1,
  "tic": 1,
  "tickle": 1,
  "tinker": 1,
  "tipped": 1,
  "tit": 1,
  "titty": 1,
  "toad": 1,
  "token": 1,
  "tonic": 1,
  "torment": 1,
  "touchdown": 1,
  "touchy": 1,
  "tow": 1,
  "tracked": 1,
  "tram": 1,
  "tramp": 1,
  "transition": 1,
  "transmitter": 1,
  "tread": 1,
  "treaty": 1,
  "trek": 1,
  "tremble": 1,
  "trench": 1,
  "triad": 1,
  "tribal": 1,
  "trim": 1,
  "tripping": 1,
  "troll": 1,
  "trout": 1,
  "trump": 1,
  "trunks": 1,
  "truthful": 1,
  "tuition": 1,
  "turd": 1,
  "turf": 1,
  "twat": 1,
  "twinkle": 1,
  "tyranny": 1,
  "tyre": 1,
  "underage": 1,
  "underpants": 1,
  "underway": 1,
  "undo": 1,
  "undress": 1,
  "uneasy": 1,
  "unfaithful": 1,
  "ungrateful": 1,
  "unload": 1,
  "unlock": 1,
  "unreal": 1,
  "unreasonable": 1,
  "upbeat": 1,
  "upgrade": 1,
  "upright": 1,
  "uptight": 1,
  "utmost": 1,
  "utter": 1,
  "utterly": 1,
  "vacate": 1,
  "vague": 1,
  "valance": 1,
  "valet": 1,
  "valiant": 1,
  "valve": 1,
  "vanilla": 1,
  "vanity": 1,
  "veal": 1,
  "vein": 1,
  "venom": 1,
  "vent": 1,
  "venue": 1,
  "verge": 1,
  "vest": 1,
  "vibe": 1,
  "vicinity": 1,
  "vile": 1,
  "villain": 1,
  "vintage": 1,
  "virtuous": 1,
  "viva": 1,
  "vocal": 1,
  "void": 1,
  "vortex": 1,
  "voyage": 1,
  "vulgar": 1,
  "wager": 1,
  "wally": 1,
  "warmth": 1,
  "warner": 1,
  "watchman": 1,
  "watering": 1,
  "weary": 1,
  "weasel": 1,
  "weave": 1,
  "wed": 1,
  "wedded": 1,
  "weighing": 1,
  "weirdo": 1,
  "whacked": 1,
  "wheat": 1,
  "wheeler": 1,
  "whilst": 1,
  "whim": 1,
  "whitey": 1,
  "whoop": 1,
  "wiener": 1,
  "willow": 1,
  "wimp": 1,
  "winding": 1,
  "wink": 1,
  "wits": 1,
  "woe": 1,
  "woof": 1,
  "wool": 1,
  "wraith": 1,
  "wrapping": 1,
  "wrath": 1,
  "wrecked": 1,
  "wrench": 1,
  "wrestle": 1,
  "wrestler": 1,
  "wretch": 1,
  "wretched": 1,
  "yank": 1,
  "yankee": 1,
  "yield": 1,
  "yin": 1,
  "zen": 1,
  "zipper": 1,
  "zoom": 1
};

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handler", function() { return handler; });
const crawler = __webpack_require__(25);

const API_DAILY_LIMIT = 20000;
const MAX_WORDS = 10000000;
const MAX_NODE_FREQUENCY = 1000;
const TRAVERSE_ALL = true;
async function handler(event, context) {
  crawler.initCrawler(API_DAILY_LIMIT, MAX_WORDS, MAX_NODE_FREQUENCY, TRAVERSE_ALL);

  try {
    console.log("crawling in the background starting from random words...");
    const ws0 = await crawler.loadAll_words("", true);
    const cs = ws0.results;
    console.log("all words:" + cs.length); // sort randomly

    let rnd = new Date().getMilliseconds() + Math.random() * 100;

    String.prototype.hashCode = function () {
      var hash = 0;

      for (var i = 0; i < this.length; i++) {
        var character = this.charCodeAt(i) + rnd & 0xff;
        hash = (hash << 5) - hash + character;
        hash = hash & hash; // Convert to 32bit integer
      }

      return hash;
    };

    cs.sort((a, b) => {
      return a.hashCode() - b.hashCode();
    });
    const by_def = {};
    const by_w = {};
    let tresult = {
      by_def,
      by_w
    };
    tresult.noWords = 0;
    tresult.newWords = 0;
    let promises = [];

    for (let commonWord of cs) {
      let trpromise = crawler.traverseCluster(tresult, commonWord, false, true);
      promises.push(trpromise);

      if (promises.length >= 10) {
        await Promise.all(promises);
        promises = [];

        if (crawler.isApiLimitReached()) {
          console.log("API limit reached. STOP whole crawling");
        }
      }
    }

    await Promise.all(promises);
    promises = [];
    console.log("Completed  Travesred:" + tresult.noWords + " written:" + tresult.newWords);
    return {
      statusCode: 200,
      body: "{}",
      headers: {
        'Access-Control-Allow-Origin': '*'
      }
    };
  } catch (err) {
    console.log(err);
    return {
      statusCode: 500,
      body: err.toString()
    };
  }
}

/***/ })
/******/ ])));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,